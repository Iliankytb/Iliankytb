
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/Zentrix"))()
local selectedTheme = "Default"
local V = "V.0.76"

library:CreateWindow({
	Title = "Doors - by Iliankytb",-- Title of the script
	Theme = selectedTheme,--View more theme in my dicord server!
	Icon = 0,-- 0 = no icon or add number
	Intro = false,--Intro or no
	IntroTitle = "Zentrix Library Testing",--the intro title
	KeyPC = Enum.KeyCode.K,--the key for pc for Open/close the frame
	Data = {
		EnableSavingData = true,--Enabling data saver or no
		DisableNotifyingLoadedData = false,--set it to true for disable the notify when loaded data
		FolderName = "SaverDoors",--Folder Name,you can change it
		FileName = "IliankYTB",-- File name for the data saver,you can change it
	},
	Discord = {
		Enabled = false,--enable to copy the discord
		DiscordLink = "https://discord.gg/E2TqYRsRP4",-- put thr entire Link of discord
		RememberJoin = false,-- Set this ti false to make them copy the link every time they load the script
		Duration = 5,-- 5 is the default you can change the number only for remember join
	},
	KeySystem = false,--Key System or no
	KeySettings = {
		Title = "Zentrix Library Testing Key System",--Title of the key(just like that)
		Note = "the key is Zentrix",-- The method for obtaining
		FileName = "Key",-- File name or no for saving the key
		SaveKey = true,-- saving the key or no
		GrabKeyFromSite = false,--Coming soon
		Key = {"Zentrix"},-- the name you can add many name, Exemple "Key","Key2" or you can add a function to add key but i don't really know
		AddGetKeyButton = false,
		AddDiscordButton = true,
		DiscordLink = "NoInviteLink",
		GetKeyLink = "NoKeyLink",
	},
}, function(window)
local InfoTab = window:CreateTab("Info",0)
local PlayerTab = window:CreateTab("Player",0)
local GameTab = window:CreateTab("Game",0)
local EspTab = window:CreateTab("Esp",0)
local MonstersTab = window:CreateTab("Monsters",0)
local DiscordTab = window:CreateTab("Discord",0)
local SettingsTab = window:CreateTab("Settings",0)
local ActiveEspDoor,ActiveSpeedBoost,ActiveEspHidingSpots,ActiveEspItems,ActiveEspCoins,ActiveMonsterSpawnAlert,ActiveNoCooldownPrompt,ActiveFullBright,ActiveModifiedFieldOfView,ActiveEspChest,ActiveEspBooks,ActiveEspMonster,ActiveEspTimerLever,ActiveEspGen,DisableLimitRangerEsp,ActiveAutoInteract,ActiveCanJump,ActiveInfOxygen,ActiveHMOxygen,ActiveSpeedBypassing,ActiveEspPlayers,ActiveDistanceEsp,ActiveBigPrompt = false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false
local LimitRangerEsp = 100
local ValueSpeed = 16
local ActiveEspCandy = false
local ActiveFullBright = false
local ActiveAvoidFigure = false
local AntiSnare = false
local ParagraphInfoServer = InfoTab:AddParagraph({Title = "",Content = "Loading",Name = "Paragraph1"})
local Version = InfoTab:AddText({
		Text = "Version:"..V,
		Name = "VersionScript"
	})
window:Notify({
				Title = "Script Version!",
				Message = V,
				Duration = 7.5,
})

local function getServerInfo()
	local Players = game:GetService("Players")
	local playerCount = #Players:GetPlayers()
local maxPlayers = game:GetService("Players").MaxPlayers
local isStudio = game:GetService("RunService"):IsStudio()

	return {
		PlaceId = game.PlaceId,
		JobId = game.JobId,
		IsStudio = isStudio,
		CurrentPlayers = playerCount,
MaxPlayers =maxPlayers
	}
end
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local function NotifMonsterSpawned(NameMonster,Time)
window:Notify({
				  Title = "Monster Spawned!",
   Message = NameMonster.." Has Spawned!",
   Duration = Time,
})
end
local OptionNotif = {}
local ESPs = {}
local Camera = workspace.CurrentCamera
local LineESPEnabled = false 

local function CreateEsp(Char, Color, Text, Parent)
	if not Char or not Parent then return end
	if Char:FindFirstChild("ESP") and Char:FindFirstChildOfClass("Highlight") then return end

	
	local highlight = Char:FindFirstChildOfClass("Highlight") or Instance.new("Highlight")
	highlight.Name = "ESP_Highlight"
	highlight.Adornee = Char
	highlight.FillColor = Color
	highlight.FillTransparency = 1
	highlight.OutlineColor = Color
	highlight.OutlineTransparency = 0
	highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	highlight.Enabled = false
	highlight.Parent = Char

	
	local billboard = Char:FindFirstChild("ESP") or Instance.new("BillboardGui")
	billboard.Name = "ESP"
	billboard.Size = UDim2.new(0, 50, 0, 25)
	billboard.AlwaysOnTop = true
	billboard.StudsOffset = Vector3.new(0, -2, 0)
	billboard.Adornee = Parent
	billboard.Enabled = false
	billboard.Parent = Parent

	local label = billboard:FindFirstChildOfClass("TextLabel") or Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = Text
	label.TextColor3 = Color
	label.TextScaled = true
	label.Parent = billboard

	local line = Drawing.new("Line")
	line.Visible = false
	line.Color = Color
	line.Thickness = 1.5
	line.Transparency = 1

	table.insert(ESPs, {
		Char = Char,
		Highlight = highlight,
		Billboard = billboard,
		Label = label,
		Part = Parent,
		Line = line,
		Text = Text,
		Color = Color
	})
end
local function onPromptShown(prompt)
    if prompt and prompt.MaxActivationDistance > 0 and not prompt:GetAttribute("Doing") then
prompt:SetAttribute("Doing",true)            
prompt:InputHoldBegin() 
            task.wait(prompt.HoldDuration or 0)
wait(0.5)
        prompt:SetAttribute("Doing",false) 
    end
end
RunService.RenderStepped:Connect(function()
task.spawn(function()
	local updatedInfo = getServerInfo()
	local updatedContent = string.format(
		"ðŸ“Œ PlaceId: %s\nðŸ”‘ JobId: %s\nðŸ§ª IsStudio: %s\nðŸ‘¥ Players: %d/%d",
		updatedInfo.PlaceId,
		updatedInfo.JobId,
		
		tostring(updatedInfo.IsStudio),
		updatedInfo.CurrentPlayers,
updatedInfo.MaxPlayers
	)

	ParagraphInfoServer:Set({
		Title = "Info",
		Content = updatedContent
	})
end)
	local cameraPosition = Camera.CFrame.Position
	local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
task.spawn(function()
	for _, esp in ipairs(ESPs) do
		local part = esp.Part
		local highlight = esp.Highlight
		local billboard = esp.Billboard
		local label = esp.Label
		local line = esp.Line
if not part or not highlight or not billboard or not label or not line then return end
		if part and part.Parent and highlight and billboard then
			local distance = (cameraPosition - part.Position).Magnitude
			local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
			local withinRange = DisableLimitRangerEsp or distance <= LimitRangerEsp

			highlight.Enabled = withinRange and onScreen
			billboard.Enabled = withinRange and onScreen

			if ActiveDistanceEsp then
				label.Text = esp.Text .. " (" .. math.floor(distance + 0.5) .. " m)"
			else
				label.Text = esp.Text
			end

			if LineESPEnabled then
				if onScreen and withinRange then
					line.Visible = true
					line.From = screenCenter
					line.To = Vector2.new(screenPos.X, screenPos.Y)
				else
					line.Visible = false
				end
			else
				line.Visible = false
			end
		else
			if line then line.Visible = false end
		end
	end
    end)
    if ActiveSpeedBoost then
        Game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = ValueSpeed
    end
    if ActiveAvoidFigure then
        game:GetService("ReplicatedStorage").RemotesFolder.Crouch:FireServer(true)
    end
    task.spawn(function()
    if ActiveAutoInteract then
		for _, asset in pairs(workspace:GetDescendants()) do
		if asset:IsA("ProximityPrompt") and not asset:GetAttribute("Doing") and asset.Name ~= "HidePrompt" then
			local parentPart = asset.Parent
			if parentPart and parentPart:IsA("BasePart") then
				local distance = (parentPart.Position - hrp.Position).Magnitude
				if distance <= asset.MaxActivationDistance then
					pcall(function()
						onPromptShown(asset)
					end)
				end
			end
		end
        task.wait(0.25)
	end
    end
    end)
    if ActiveFullBright then 
if Game.Lighting then 
Game.Lighting.Brightness = 5
Game.Lighting.Ambient = Color3.fromRGB(255, 255, 255) 
end  
end
end)


local function KeepEsp(Char, Parent)
	if not Char or not Char:FindFirstChildOfClass("Highlight") then return end
	if not Parent or not Parent:FindFirstChildOfClass("BillboardGui") then return end

	for i = #ESPs, 1, -1 do 
		local esp = ESPs[i]
		if esp.Char == Char then 
			if esp.Highlight then esp.Highlight:Destroy() end
			if esp.Billboard then esp.Billboard:Destroy() end
			if esp.Line then esp.Line:Destroy() end

			table.remove(ESPs, i) 
		end
	end
end

local function copyToClipboard(text)
    if setclipboard then
        setclipboard(text)
    else
        warn("setclipboard is not supported in this environment.")
    end
end
local DiscordLink = DiscordTab:AddButton({
Text = "Discord Link",
   Name = "DCLink",
   Callback = function()
copyToClipboard("https://discord.gg/E2TqYRsRP4")
end,
}) 

local Section1 = GameTab:AddSection({Text = "General",Name = "General"})
local Section2 = EspTab:AddSection({Text = "General",Name = "General"})
local DropdownMonsterSpawnAlert = GameTab:AddDropdown({
Text =  "Monster Spawn Alert Dropdown",
    Name ="DropdownMonsterSpawnAlert",
    Options = {"Rush","Seek","Figure","Sally","Eyes","LookMan","BackdoorRush","Giggle","GloombatSwarm","Ambush","A-60","A-120","Eye stalk","Groundskeeper",Mandrake"},
    Default = "",
    MultiSelect  = true,
    Flag = "MonsterSpawnAlertDropdown",
    Callback = function(Options)
       
        if  Options == "Rush" and not table.find(OptionNotif, "RushMoving") then
            table.insert(OptionNotif, "RushMoving")
        elseif not  Options ==  "Rush" then
            local index = table.find(OptionNotif, "RushMoving")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if  Options == "Mandrake" and not table.find(OptionNotif, "MandrakeLive") then
            table.insert(OptionNotif, "MandrakeLive")
        elseif not  Options ==  "Rush" then
            local index = table.find(OptionNotif, "MandrakeLive")
            if index then
                table.remove(OptionNotif, index)
            end
        end
      if  Options ==  "Eye stalk" and not table.find(OptionNotif, "EyestalkMoving") then
            table.insert(OptionNotif, "EyestalkMoving")
        elseif not  Options ==  "Eye stalk" then
            local index = table.find(OptionNotif, "EyestalkMoving")
            if index then
                table.remove(OptionNotif, index)
            end
        end

        if  Options ==  "Seek" and not table.find(OptionNotif, "SeekMovingNewClone") then
            table.insert(OptionNotif, "SeekMovingNewClone")
        elseif not  Options ==  "Seek" then
            local index = table.find(OptionNotif, "SeekMovingNewClone")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if  Options ==  "Sally" and not table.find(OptionNotif, "SallyMoving") then
            table.insert(OptionNotif, "SallyMoving")
        elseif not  Options == "Sally" then
            local index = table.find(OptionNotif, "SallyMoving")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if Options == "Figure" and not table.find(OptionNotif, "FigureRig") then
            table.insert(OptionNotif, "FigureRig")
        elseif not Options =="Figure" then
            local index = table.find(OptionNotif, "FigureRig")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if Options == "Eyes" and not table.find(OptionNotif, "Eyes") then
            table.insert(OptionNotif, "Eyes")
        elseif not Options == "Eyes" then
            local index = table.find(OptionNotif, "Eyes")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if Options == "LookMan" and not table.find(OptionNotif, "BackdoorLookman") then
            table.insert(OptionNotif, "BackdoorLookman")
        elseif not tOptions == "LookMan" then
            local index = table.find(OptionNotif, "BackdoorLookman")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if Options == "BackdoorRush" and not table.find(OptionNotif, "BackdoorRush") then
            table.insert(OptionNotif, "BackdoorRush")
        elseif not Options == "BackdoorRush" then
            local index = table.find(OptionNotif, "BackdoorRush")
            if index then
                table.remove(OptionNotif, index)
            end
        end
        if Options == "Groundskeeper" and not table.find(OptionNotif, "Groundskeeper") then
            table.insert(OptionNotif, "Groundskeeper")
        elseif not Options == "Groundskeeper" then
            local index = table.find(OptionNotif, "Groundskeeper")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if Options =="Giggle" and not table.find(OptionNotif, "GiggleCeiling") then
            table.insert(OptionNotif, "GiggleCeiling")
        elseif not Options == "Giggle" then
            local index = table.find(OptionNotif, "GiggleCeiling")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if Options == "GloombatSwarm" and not table.find(OptionNotif, "GloombatSwarm") then
            table.insert(OptionNotif, "GloombatSwarm")
        elseif not Options == "GloombatSwarm" then
            local index = table.find(OptionNotif, "GloombatSwarm")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if Options == "Ambush" and not table.find(OptionNotif, "AmbushMoving") then
            table.insert(OptionNotif, "AmbushMoving")
        elseif Options == "Ambush"then
            local index = table.find(OptionNotif, "AmbushMoving")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if Options =="A-60" and not table.find(OptionNotif, "A60") then
            table.insert(OptionNotif, "A60")
        elseif not Options == "A-60" then
            local index = table.find(OptionNotif, "A60")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if Options == "A-120" and not table.find(OptionNotif, "A120") then
            table.insert(OptionNotif, "A120")
        elseif not Options == "A-120" then
            local index = table.find(OptionNotif, "A120")
            if index then
                table.remove(OptionNotif, index)
            end
        end
    end,
})

local EspDoorToggle = EspTab:AddToggle({
Text = "Door Esp",
   Name = "EspDoorToggle",
   Default = false,
   Flag = "EspDoor", 
   Callback = function(Value)
ActiveEspDoor = Value 
if ActiveEspDoor then
	for _, Rooms in pairs(game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do
		if Rooms:IsA("Model") and Rooms:FindFirstChild("Door") and Rooms.Door.PrimaryPart then
			local Door = Rooms.Door
			local Assets = Rooms:FindFirstChild("Assets")

			if not Door:FindFirstChildOfClass("Highlight") and not Door.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
				local signText = "Unknown"
				if Door:FindFirstChild("Sign") then
					local Sign = Door.Sign
					if Sign:FindFirstChild("Stinker") and Sign.Stinker.Text ~= "" then
						signText = Sign.Stinker.Text
					elseif Sign:FindFirstChild("SignText") then
						signText = Sign.SignText.Text
					end
				end

				if Assets and Assets:FindFirstChild("KeyObtain") then
					CreateEsp(Door, Color3.fromRGB(0, 255, 0), "Doors " .. signText .. " (Lock)", Door.PrimaryPart)
				else
					CreateEsp(Door, Color3.fromRGB(0, 255, 0), "Doors " .. signText, Door.PrimaryPart)
				end
			end
		end
	end
else
	for _, Rooms in pairs(game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do
		if Rooms:IsA("Model") and Rooms:FindFirstChild("Door") and Rooms.Door.PrimaryPart then
			local Door = Rooms.Door
			if Door:FindFirstChildOfClass("Highlight") and Door.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
				KeepEsp(Door, Door.PrimaryPart)
			end
		end
	end
end

end,
}) local EspHidingSpotsToggle = EspTab:AddToggle({
Text = "Hiding Spots Esp",
   Name = "EspHidingSpotsToggle",
   Default = false,
   Flag = "EspHidingSpots", 
   Callback = function(Value)
ActiveEspHidingSpots = Value 
if ActiveEspHidingSpots then
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms.Assets:GetChildren()) do
					if Assets:IsA("Model") 
					and (Assets.Name == "Bed" or Assets.Name == "Wardrobe" or Assets.Name == "Backdoor_Wardrobe" or Assets.Name == "Locker_Large" or Assets.Name == "Rooms_Locker" or Assets.Name == "Toolshed")
					and not Assets:FindFirstChildOfClass("Highlight")
					and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						CreateEsp(Assets, Color3.fromRGB(0, 255, 255), Assets.Name, Assets.PrimaryPart)
					end
				end
			end
		end
	end
else
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms.Assets:GetChildren()) do
					if Assets:IsA("Model") 
					and (Assets.Name == "Bed" or Assets.Name == "Wardrobe" or Assets.Name == "Backdoor_Wardrobe" or Assets.Name == "Locker_Large" or Assets.Name == "Rooms_Locker"  or Assets.Name == "Toolshed")
					and Assets:FindFirstChildOfClass("Highlight")
					and Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						KeepEsp(Assets, Assets.PrimaryPart)
					end
				end
			end
		end
	end
end

end,
})
local ActiveMonsterSpawnAlertToggle = GameTab:AddToggle({
Text = "Active Monster Spawn Alert(Its uncompleted!)",
   Name = "ActiveMonsterSpawnAlertToggle",
   Default = false,
   Flag = "ActiveMonsterSpawnAlert1", 
   Callback = function(Value)
ActiveMonsterSpawnAlert = Value 
end,
})
local NoCooldownpromptToggle = GameTab:AddToggle({
Text =  "Instant Prompt",
   Name ="NoCooldownpromptToggle",
   Default = false,
   Flag = "NoCooldownPrompt1", 
   Callback = function(Value)
ActiveNoCooldownPrompt = Value 
task.spawn(function()  
if ActiveNoCooldownPrompt then
for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("ProximityPrompt") then 
task.spawn(function()
if Assets.HoldDuration ~= 0 then
Assets:SetAttribute("HoldDurationOld",Assets.HoldDuration)
Assets.HoldDuration = 0
end
end)
end 
end  
else
for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("ProximityPrompt") then 
task.spawn(function()
if Assets:GetAttribute("HoldDurationOld") and Assets:GetAttribute("HoldDurationOld") ~= 0 then
Assets.HoldDuration = Assets:GetAttribute("HoldDurationOld")
end
end)
end 
end   
end
end)
end,
})
local EspItemsToggle = EspTab:AddToggle({
Text =  "Items Esp",
   Name ="EspItemsToggle",
   Default = false,
   Flag = "EspItems", 
   Callback = function(Value)
ActiveEspItems = Value 
if ActiveEspItems then
  for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("Model") and (Assets.Name == "KeyObtain" or Assets.Name == "LeverForGate" or Assets.Name == "Battery" or Assets.Name == "Flashlight" or Assets.Name == "Lighter" or Assets.Name == "Bandage" or Assets.Name == "Crucifix" or Assets.Name == "Vitamins" or Assets.Name == "Lockpick" or Assets.Name == "Candle" or Assets.Name == "AlarmClock" or Assets.Name == "LibraryHintPaper" or Assets.Name == "Smoothie" or Assets.Name == "FuseObtain" or Assets.Name == "BatteryPack" or Assets.Name == "Glowsticks" or Assets.Name == "StarVial" or Assets.Name == "Shakelight" or Assets.Name == "SkeletonKey" or Assets.Name == "Compass" or Assets.Name == "Shears" or Assets.Name == "Lantern" or Assets.Name == "Toolshed_Small" or Assets.Name == "Bulklight" or Assets.Name == "Straplight")  and not Assets:FindFirstChildOfClass("Highlight") 
and not  Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(255,255,0),Assets.Name,Assets.PrimaryPart) 
end
end  
else
     for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("Model") and (Assets.Name == "KeyObtain" or Assets.Name == "LeverForGate" or Assets.Name == "Battery" or Assets.Name == "Flashlight" or Assets.Name == "Lighter" or Assets.Name == "Bandage" or Assets.Name == "Crucifix" or Assets.Name == "Vitamins" or Assets.Name == "Lockpick" or Assets.Name == "Candle" or Assets.Name == "AlarmClock" or Assets.Name == "LibraryHintPaper" or Assets.Name == "Smoothie" or Assets.Name == "FuseObtain" or Assets.Name == "BatteryPack" or Assets.Name == "Glowsticks" or Assets.Name == "StarVial" or Assets.Name == "Shakelight" or Assets.Name == "SkeletonKey" or Assets.Name == "Compass" or Assets.Name == "Shears" or Assets.Name == "Lantern" or Assets.Name == "Toolshed_Small" or Assets.Name == "Bulklight" or Assets.Name == "Straplight")  and  Assets:FindFirstChildOfClass("Highlight") 
and   Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
KeepEsp(Assets,Assets.PrimaryPart) 
end
end  
end
 

end,
}) 
local EspCandyToggle = EspTab:AddToggle({
Text =  "Candy Esp",
   Name ="EspCandyToggle",
   Default = false,
   Flag = "EspCandy", 
   Callback = function(Value)
ActiveEspCandy = Value 
if ActiveEspCandy then
  for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("Model") and (Assets.Name == "Candy")  and not Assets:FindFirstChildOfClass("Highlight") 
and not  Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(255,255,0),Assets.Name,Assets.PrimaryPart) 
end
end  
else
     for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("Model") and (Assets.Name == "Candy")  and  Assets:FindFirstChildOfClass("Highlight") 
and   Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
KeepEsp(Assets,Assets.PrimaryPart) 
end
end  
end
end,
})

local EspCoinsToggle = EspTab:AddToggle({
Text=  "Coins Esp",
   Name ="EspCoinsToggle",
   Default = false,
   Flag = "EspCoins", 
   Callback = function(Value)
ActiveEspCoins = Value 
if ActiveEspCoins then
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms:GetDescendants()) do
					if Assets:IsA("Model")
					and (Assets.Name == "GoldPile")
					and not Assets:FindFirstChildOfClass("Highlight")
					and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						CreateEsp(Assets, Color3.fromRGB(255, 255, 0), "Gold", Assets.PrimaryPart)
					end
				end
			end
		end
	end
else
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms:GetDescendants()) do
					if Assets:IsA("Model")
					and (Assets.Name == "GoldPile")
					and Assets:FindFirstChildOfClass("Highlight")
					and Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						KeepEsp(Assets, Assets.PrimaryPart)
					end
				end
			end
		end
	end
end

end,
})
local EspChestToggle = EspTab:AddToggle({
Text = "Chest Esp",
   Name = "EspChestToggle",
   Default = false,
   Flag = "EspChest", 
   Callback = function(Value)
ActiveEspChest = Value 
if ActiveEspChest then
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms:GetDescendants()) do
					if Assets:IsA("Model")
					and (Assets.Name == "ChestBoxLocked" or Assets.Name == "ChestBox")
					and not Assets:FindFirstChildOfClass("Highlight")
					and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						CreateEsp(Assets, Color3.fromRGB(255, 255, 0), Assets.Name, Assets.PrimaryPart)
					end
				end
			end
		end
	end
else
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms:GetDescendants()) do
					if Assets:IsA("Model")
					and (Assets.Name == "ChestBoxLocked" or Assets.Name == "ChestBox")
					and Assets:FindFirstChildOfClass("Highlight")
					and Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						KeepEsp(Assets, Assets.PrimaryPart)
					end
				end
			end
		end
	end
end

end,
})

 local EspBooksToggle = EspTab:AddToggle({
Text =  "Books Esp",
   Name = "EspBooksToggle",
Default = false,
   Flag = "EspBooks", 
   Callback = function(Value)
ActiveEspBooks = Value 
if ActiveEspBooks then
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms:GetDescendants()) do
					if Assets:IsA("Model")
					and Assets.Name == "LiveHintBook"
					and not Assets:FindFirstChildOfClass("Highlight")
					and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						CreateEsp(Assets, Color3.fromRGB(0, 150, 150), "Books", Assets.PrimaryPart)
					end
				end
			end
		end
	end
else
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms:GetDescendants()) do
					if Assets:IsA("Model")
					and Assets.Name == "LiveHintBook"
					and Assets:FindFirstChildOfClass("Highlight")
					and Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						KeepEsp(Assets, Assets.PrimaryPart)
					end
				end
			end
		end
	end
end

end,
})
local MonsterNames = {
	"FigureRig", "SallyMoving", "RushMoving", "Eyes", "SeekMovingNewClone",
	"BackdoorLookman", "BackdoorRush", "GloombatSwarm", "GiggleCeiling",
	"AmbushMoving", "EyestalkMoving","Groundskeeper","MandrakeLive"
}
local EspMonstersToggle = EspTab:AddToggle({
Text = "Monsters Esp",
   Name = "EspMonstersToggle",
   Default = false,
   Flag = "EspMonsters", 
   Callback = function(Value)
ActiveEspMonster = Value 


if ActiveEspMonster then
	for _, Assets in pairs(workspace:GetDescendants()) do
		if Assets:IsA("Model") and table.find(MonsterNames, Assets.Name)
		and not Assets:FindFirstChildOfClass("Highlight")
		and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
			if Assets.PrimaryPart then
				Assets.PrimaryPart.Transparency = 0.99
				CreateEsp(Assets, Color3.fromRGB(255, 0, 0), Assets.Name, Assets.PrimaryPart)
			end
		end
	end
else
	for _, Assets in pairs(workspace:GetDescendants()) do
		if Assets:IsA("Model") and table.find(MonsterNames, Assets.Name)
		and Assets:FindFirstChildOfClass("Highlight")
		and Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
			Assets.PrimaryPart.Transparency = 1
			KeepEsp(Assets, Assets.PrimaryPart)
		end
	end
end

end,
})

local PlayerSpeedSlider = PlayerTab:AddSlider({
Text = "Player Speed(max 21 for not be a exploiter)",
   Name = "PlayerSpeedSlider",
   Min = 0,
   Max = 23,
   Default = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
CurrentValue = Value
ValueSpeed = Value
end,  ValueSpeed = CurrentValue,
})

local PlayerActiveModifyingSpeedToggle = PlayerTab:AddToggle({
Text = "Active Modifying Player Speed",
   Name = "PlayerActiveModifyingSpeedToggle",
   Default = false,
   Flag = "ButtonSpeed", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActiveSpeedBoost = Value
end,
})

local AvoidFigureToggle = MonstersTab:AddToggle({
Text =  "Figure can't detect you",
   Name ="AvoidFigureToggle",
   Default = false,
   Flag = "ButtonNoFigure", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActiveAvoidFigure = Value
  game:GetService("ReplicatedStorage").RemotesFolder.Crouch:FireEvent(ActiveAvoidFigure)
end,
})
local AvoidSnaresToggle = MonstersTab:AddToggle({
Text =  "Anti Snares",
   Name ="AntiSâ€™aresToggle",
   Default = false,
   Flag = "ButtonNoSnares", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  AntiSnare = Value
 if AntiSnare then
for _, Assets in pairs(workspace:GetDescendants()) do
		if Assets:IsA("Model") and Assets.Name == "Snare" and Assets:FindFirstChild("Hitbox") then
	Assets:FindFirstChild("Hitbox").CanTouch = false
end
	end
else
for _, Assets in pairs(workspace:GetDescendants()) do
		if Assets:IsA("Model") and Assets.Name == "Snare" and Assets:FindFirstChild("Hitbox") then
	Assets:FindFirstChild("Hitbox").CanTouch = true
end
	end
end
end,
})

local ValueFieldOfView = 80
local PlayerFieldOfViewSlider = PlayerTab:AddSlider({
Text = "Field Of View(disabled!)",
   Name = "PlayerFieldOfViewSlider",
   Min = 80,
   Max = 120,
   Default = 80,
   Flag = "FOV1",
   Callback = function(Value)
CurrentValue = Value
ValueFieldOfView = Value
end,  ValueFieldOfView = CurrentValue,
}) 
local ActiveModifiedFieldOfView = false
local PlayerActiveModifyingFOVToggle = PlayerTab:AddToggle({
Text = "Active Modifying Player FOV(Disabled!)",
   Name = "PlayerActiveModifyingFOVToggle",
   Default = false,
   Flag = "ButtonFOV", 
   Callback = function(Value)
  ActiveModifiedFieldOfView = Value 
end,
}) 

local PlayerFullBright = GameTab:AddToggle({
Text =  "Full Bright(unverified!)",
   Name ="PlayerFullBright",
   Default = false,
   Flag = "FullBright",
   Callback = function(Value)
ActiveFullBright = Value 
if ActiveFullBright then 
if Game.Lighting then 
Game.Lighting.Brightness = 5
Game.Lighting.Ambient = Color3.fromRGB(255, 255, 255) 
end  
end
end,  
})
local Section3 = EspTab:AddSection({Text = "Backdoor", Name = "Backdoor"})
local EspTimerLeverToggle = EspTab:AddToggle({
Text = "Timer Lever Esp",
   Name = "EspTimerLeverToggle",
   Default = false,
   Flag = "EspTimerLever", 
   Callback = function(Value)
ActiveEspTimerLever = Value 
if ActiveEspTimerLever then
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms:GetDescendants()) do
					if Assets:IsA("Model")
					and Assets.Name == "TimerLever"
					and not Assets:FindFirstChildOfClass("Highlight")
					and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						CreateEsp(Assets, Color3.fromRGB(0, 150, 150), "Timer Lever", Assets.PrimaryPart)
					end
				end
			end
		end
	end
else
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms:GetDescendants()) do
					if Assets:IsA("Model")
					and Assets.Name == "TimerLever"
					and Assets:FindFirstChildOfClass("Highlight")
					and Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						KeepEsp(Assets, Assets.PrimaryPart)
					end
				end
			end
		end
	end
end

end,
})
local Section4 = EspTab:AddSection({Text = "Mines",Name = "Mines"})
local EspGeneratorToggle = EspTab:AddToggle({
Text = "Generator Esp",
   Name = "EspGeneratorToggle",
   Default = false,
   Flag = "EspGen", 
   Callback = function(Value)
ActiveEspGen = Value 
if ActiveEspGen then
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms.Assets:GetChildren()) do
					if Assets:IsA("Model")
					and Assets.Name == "MinesGenerator"
					and not Assets:FindFirstChildOfClass("Highlight")
					and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						CreateEsp(Assets, Color3.fromRGB(255, 255, 0), Assets.Name, Assets.PrimaryPart)
					end
				end
			end
		end
	end
else
	if game.Workspace:FindFirstChild("CurrentRooms") then
		for _, Rooms in pairs(game.Workspace.CurrentRooms:GetChildren()) do
			if Rooms:IsA("Model") and Rooms:FindFirstChild("Assets") then
				for _, Assets in pairs(Rooms.Assets:GetChildren()) do
					if Assets:IsA("Model")
					and Assets.Name == "MinesGenerator"
					and Assets:FindFirstChildOfClass("Highlight")
					and Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
						KeepEsp(Assets, Assets.PrimaryPart)
					end
				end
			end
		end
	end
end

end,
})

local ItemNames = {
	"KeyObtain",
	"LeverForGate",
	"Battery",
	"Flashlight",
	"Lighter",
	"Bandage",
	"Crucifix",
	"Vitamins",
	"Lockpick",
	"Candle",
	"AlarmClock",
	"LibraryHintPaper",
	"Smoothie",
	"FuseObtain",
	"BatteryPack",
	"Glowsticks",
	"StarVial",
	"Shakelight",
	"SkeletonKey",
	"Compass",
	"Shears",
	"Lantern",
    "Straplight",
    "Bulklight",
    "Toolshed_Small"
}


workspace.DescendantAdded:Connect(function(child) 
if ActiveMonsterSpawnAlert then
if table.find(OptionNotif,child.Name) then
if child.Name == "Groundskeeper" then
NotifMonsterSpawned("Groundskeeper",3)
elseif child.Name == "FigureRig" then
NotifMonsterSpawned("Figure",3)
elseif child.Name == "GiggleCeiling" then
NotifMonsterSpawned("Giggle",3)
elseif child.Name == "MandrakeLive" then
NotifMonsterSpawned("Mandrake",3)
end
end
end
task.wait(0.75)
if ActiveNoCooldownPrompt then
if child:IsA("ProximityPrompt") and child.HoldDuration ~= 0 then
child:SetAttribute("HoldDurationOld",child.HoldDuration)
child.HoldDuration = 0
end  
end
 if ActiveBigPrompt then
if child:IsA("ProximityPrompt") then
				if child.MaxActivationDistance ~= 13 then
					child:SetAttribute("MaxActivationDistanceOld", child.MaxActivationDistance)
					child.MaxActivationDistance = 13
				end
			end
 end
    if not child:IsA("Model") then return end
    if not child.PrimaryPart then return end 
 if ActiveEspDoor and child:FindFirstChild("Door") and child.Door.PrimaryPart then
        local Door = child.Door
        local Assets = child:FindFirstChild("Assets")
        if not Door:FindFirstChildOfClass("Highlight") and not Door.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
            local signText = "Unknown"
            if Door:FindFirstChild("Sign") then
                local Sign = Door.Sign
                if Sign:FindFirstChild("Stinker") and Sign.Stinker.Text ~= "" then
                    signText = Sign.Stinker.Text
                elseif Sign:FindFirstChild("SignText") then
                    signText = Sign.SignText.Text
                end
            end
            if Assets and Assets:FindFirstChild("KeyObtain") then
                CreateEsp(Door, Color3.fromRGB(0,255,0), "Doors " .. signText .. " (Lock)", Door.PrimaryPart)
            else
                CreateEsp(Door, Color3.fromRGB(0,255,0), "Doors " .. signText, Door.PrimaryPart)
            end
        end
    end
    if ActiveEspCandy and child.Name == "Candy" 
    and not child:FindFirstChildOfClass("Highlight")
    and not child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
        CreateEsp(child, Color3.fromRGB(255,255,0), child.Name, child.PrimaryPart)
    end

if AntiSnare then
	if child:IsA("Model") and child.Name == "Snare" and child:FindFirstChild("Hitbox") then
	child:FindFirstChild("Hitbox").CanTouch = false
	end
end

    if ActiveEspHidingSpots and (child.Name == "Bed" or child.Name == "Wardrobe" or child.Name == "Backdoor_Wardrobe" or child.Name == "Locker_Large" or child.Name == "Rooms_Locker" or child.Name == "Toolshed")
    and not child:FindFirstChildOfClass("Highlight")
    and not child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
        CreateEsp(child, Color3.fromRGB(0,255,255), child.Name, child.PrimaryPart)
    end

  
    if ActiveEspItems and table.find(ItemNames, child.Name)
    and not child:FindFirstChildOfClass("Highlight")
    and not child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
        CreateEsp(child, Color3.fromRGB(255,255,0), child.Name, child.PrimaryPart)
    end

    if ActiveEspCoins and child.Name == "GoldPile"
    and not child:FindFirstChildOfClass("Highlight")
    and not child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
        CreateEsp(child, Color3.fromRGB(255,255,0), "Gold", child.PrimaryPart)
    end


    if ActiveEspChest and (child.Name == "ChestBoxLocked" or child.Name == "ChestBox")
    and not child:FindFirstChildOfClass("Highlight")
    and not child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
        CreateEsp(child, Color3.fromRGB(255,255,0), child.Name, child.PrimaryPart)
    end


    if ActiveEspBooks and child.Name == "LiveHintBook"
    and not child:FindFirstChildOfClass("Highlight")
    and not child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
        CreateEsp(child, Color3.fromRGB(0,150,150), "Books", child.PrimaryPart)
    end

  
    if ActiveEspMonster and table.find(MonsterNames, child.Name)
    and not child:FindFirstChildOfClass("Highlight")
    and not child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
        child.PrimaryPart.Transparency = 0
        CreateEsp(child, Color3.fromRGB(255,0,0), child.Name, child.PrimaryPart)
    end

  
    if ActiveEspTimerLever and child.Name == "TimerLever"
    and not child:FindFirstChildOfClass("Highlight")
    and not child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
        CreateEsp(child, Color3.fromRGB(0,150,150), "Timer Lever", child.PrimaryPart)
    end

    if ActiveEspGen and child.Name == "MinesGenerator"
    and not child:FindFirstChildOfClass("Highlight")
    and not child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
        CreateEsp(child, Color3.fromRGB(255,255,0), child.Name, child.PrimaryPart)
    end

  
  
end)

workspace.DescendantRemoving:Connect(function(child)
     if not child:IsA("Model") then return end
    if not child.PrimaryPart then return end 
 if ActiveEspDoor and child:FindFirstChild("Door") and child.Door.PrimaryPart then
        local Door = child.Door
        local Assets = child:FindFirstChild("Assets")
        if  Door:FindFirstChildOfClass("Highlight") and Door.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
         
              KeepEsp(child,child.PrimaryPart)
             
        end
    end
    if ActiveEspCandy and child.Name == "Candy" 
    and  child:FindFirstChildOfClass("Highlight")
    and  child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
   KeepEsp(child,child.PrimaryPart)
     end

   
    if ActiveEspHidingSpots and (child.Name == "Bed" or child.Name == "Wardrobe" or child.Name == "Backdoor_Wardrobe" or child.Name == "Locker_Large" or child.Name == "Rooms_Locker" or child.Name == "Toolshed")
    and  child:FindFirstChildOfClass("Highlight")
    and  child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
   KeepEsp(child,child.PrimaryPart)
      end

  
    if ActiveEspItems and table.find(ItemNames, child.Name)
    and  child:FindFirstChildOfClass("Highlight")
    and  child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
     KeepEsp(child,child.PrimaryPart)
      end

    if ActiveEspCoins and child.Name == "GoldPile"
    and  child:FindFirstChildOfClass("Highlight")
    and  child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
    KeepEsp(child,child.PrimaryPart)
      end


    if ActiveEspChest and (child.Name == "ChestBoxLocked" or child.Name == "ChestBox")
    and child:FindFirstChildOfClass("Highlight")
    and  child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
     KeepEsp(child,child.PrimaryPart)
       end


    if ActiveEspBooks and child.Name == "LiveHintBook"
    and  child:FindFirstChildOfClass("Highlight")
    and  child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
   KeepEsp(child,child.PrimaryPart)
      end

  
    if ActiveEspMonster and table.find(MonsterNames, child.Name)
    and  child:FindFirstChildOfClass("Highlight")
    and  child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
      KeepEsp(child,child.PrimaryPart)
        end

  
    if ActiveEspTimerLever and child.Name == "TimerLever"
    and  child:FindFirstChildOfClass("Highlight")
    and  child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
       KeepEsp(child,child.PrimaryPart)
          end

    if ActiveEspGen and child.Name == "MinesGenerator"
    and  child:FindFirstChildOfClass("Highlight")
    and  child.PrimaryPart:FindFirstChildOfClass("BillboardGui") then
        KeepEsp(child,child.PrimaryPart)
    end
end)
workspace.ChildAdded:Connect(function(child)
 if ActiveMonsterSpawnAlert then
if table.find(OptionNotif,child.Name) then
if child.Name == "RushMoving" then 
NotifMonsterSpawned("Rush",3)
elseif child.Name == "EyestalkMoving" then
NotifMonsterSpawned("Eye Stalk",3)
elseif child.Name == "SeekMovingNewClone" then
NotifMonsterSpawned("Seek",3)
elseif child.Name == "SallyMoving" then
NotifMonsterSpawned("Sally",3)
elseif child.Name == "Eyes" then
NotifMonsterSpawned("Eyes",3)
elseif child.Name == "BackdoorLookman" then
NotifMonsterSpawned("LookMan",3)
elseif child.Name == "BackdoorRush" then
NotifMonsterSpawned("Blitz",3)
elseif child.Name == "GloombatSwarm" then
NotifMonsterSpawned("Gloombat Swarm",3)
elseif child.Name == "AmbushMoving" then
NotifMonsterSpawned("Ambush",3)
elseif child.Name == "A60" then
NotifMonsterSpawned("A60",3)
elseif child.Name == "A120" then
NotifMonsterSpawned("A120",3)
end
end
end
end)
local DropdownAutoInteract = GameTab:AddDropdown({
Text = "Auto Interact Settings(Coming Soon)",
   Name = "DropdownAutoInteract",
   Options = {"Drawer", "Pickup Items", "???"},
   Default = "Nothings",  -- pour afficher ce qui est rÃ©ellement chargÃ©
   Flag = "AIS",
   Callback = function(Selected)
 end,
})
local AutoInteractToggle = GameTab:AddToggle({
Text = "Auto Interact",
   Name = "AutoInteractToggle",
   Default = false,
   Flag = "AutoInter1", 
   Callback = function(Value)
ActiveAutoInteract = Value 
end,
})
local BigDistancePromptToggle = GameTab:AddToggle({
Text =  "Big Distance Prompt",
   Name ="BigDistancePromptToggle",
   Default = false,
   Flag = "AutoBigDistancePrompt", 
   Callback = function(Value)
ActiveBigPrompt = Value 
end,
})
local ButtonUnloadCheat = SettingsTab:AddButton({
Text = "Unload Cheat",
   Name = "ButtonUnloadCheat",
   Callback = function()

end,
})
local LimitRangerEspSlider = SettingsTab:AddSlider({
Text =  "Limit Ranger for esp",
   Name ="LimitRangerEspSlider",
   Min =25,
   Max = 1000,
   Default = 100,
   Flag = "LimitRangerEsp1",
   Callback = function(Value)
CurrentValue = Value
LimitRangerEsp = Value
end,  LimitRangerEsp = CurrentValue,
})  local DisableLimitRangerEspToggle = SettingsTab:AddToggle({
Text =  "Disable Limit Ranger Esp",
   Name ="DisableLimitRangerEspToggle",
   Default = false,
   Flag = "ButtonDLRE", 
   Callback = function(Value)
  DisableLimitRangerEsp = Value 
end,
})
local DistanceEspToggle = SettingsTab:AddToggle({
Text =  "Activate Distance For Esp",
   Name ="DistanceEspToggle",
   Default = false,
   Flag = "ButtonADFE", 
   Callback = function(Value)
  ActiveDistanceEsp = Value 
end,
})
local TraitsToggle = SettingsTab:AddToggle({
Text =  "Trait for esp",
   Name ="TraitToggle",
   Default = false,
   Flag = "ButtonTTR", 
   Callback = function(Value)
  LineESPEnabled = Value 
end,
})
local CanJumpToggle = PlayerTab:AddToggle({
Text = "Can Jump",
   Name = "CanJumpToggle",
   Default = false,
   Flag = "CanJump1", 
   Callback = function(Value)
ActiveCanJump = Value 
Game.Players.LocalPlayer.Character:SetAttribute("CanJump",ActiveCanJump)
end,
}) 

local ChangeThemeDropdown = SettingsTab:AddDropdown({
		Text = "Change Theme:",
		Name = "CTD",
		Options = {"Default", "Light", "RedDark","BlueNeon","GreenMatrix","PurpleDream","Sunset",
		"Ocean","Toxic","Storm","LimePop","Cyber","Chocolate","RoseGold","CottonCandy","NightSky","Steel",
			"GoldLux","Ice","TealWave","FrostFire","DarkMatter","Lava","PinkCandy","Sakura","DeepSpace","Skyline","Crimson"
			,"Desert","Camo","Plasma","Arctic","Slate","Vaporwave"
			
		},
		Default = "Default",
		MultiSelect = false,
		Flag = "CTD", --Put a name flag for save data if you enabled saving data
		Callback = function(choice)
window:ChangeTheme(choice)
		end
	})

library:LoadData()
end)
