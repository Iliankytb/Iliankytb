
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/Zentrix"))()
local selectedTheme = "Default"
local V = "V.0.61"
library:CreateWindow({
	Title = "Doors - by Iliankytb",-- Title of the script
	Theme = selectedTheme,--View more theme in my dicord server!
	Icon = 0,-- 0 = no icon or add number
	Intro = false,--Intro or no
	IntroTitle = "Zentrix Library Testing",--the intro title
	KeyPC = Enum.KeyCode.K,--the key for pc for Open/close the frame
	Data = {
		EnableSavingData = true,--Enabling data saver or no
		DisableNotifyingLoadedData = false,--set it to true for disable the notify when loaded data
		FolderName = "SaverDoors",--Folder Name,you can change it
		FileName = "IliankYTB",-- File name for the data saver,you can change it
	},
	Discord = {
		Enabled = false,--enable to copy the discord
		DiscordLink = "https://discord.gg/E2TqYRsRP4",-- put thr entire Link of discord
		RememberJoin = false,-- Set this ti false to make them copy the link every time they load the script
		Duration = 5,-- 5 is the default you can change the number only for remember join
	},
	KeySystem = false,--Key System or no
	KeySettings = {
		Title = "Zentrix Library Testing Key System",--Title of the key(just like that)
		Note = "the key is Zentrix",-- The method for obtaining
		FileName = "Key",-- File name or no for saving the key
		SaveKey = true,-- saving the key or no
		GrabKeyFromSite = false,--Coming soon
		Key = {"Zentrix"},-- the name you can add many name, Exemple "Key","Key2" or you can add a function to add key but i don't really know
		AddGetKeyButton = false,
		AddDiscordButton = true,
		DiscordLink = "NoInviteLink",
		GetKeyLink = "NoKeyLink",
	},
}, function(window)
local InfoTab = window:CreateTab("Info",0)
local PlayerTab = window:CreateTab("Player",0)
local GameTab = window:CreateTab("Game",0)
local EspTab = window:CreateTab("Esp",0)
local MonstersTab = window:CreateTab("Monsters",0)
local DiscordTab = window:CreateTab("Discord",0)
local SettingsTab = window:CreateTab("Settings",0)
local ActiveEspDoor,ActiveSpeedBoost,ActiveEspHidingSpots,ActiveEspItems,ActiveEspCoins,ActiveMonsterSpawnAlert,ActiveNoCooldownPrompt,ActiveFullBright,ActiveModifiedFieldOfView,ActiveEspChest,ActiveEspBooks,ActiveEspMonster,ActiveEspTimerLever,ActiveEspGen,DisableLimitRangerEsp,ActiveAutoInteract,ActiveCanJump,ActiveInfOxygen,ActiveHMOxygen,ActiveSpeedBypassing,ActiveEspPlayers,ActiveDistanceEsp,ActiveBigPrompt = false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false
local LimitRangerEsp = 100
local ParagraphInfoServer = InfoTab:AddParagraph({Title = "",Content = "Loading",Name = "Paragraph1"})
local Version = InfoTab:AddText({
		Text = "Version:"..V,
		Name = "VersionScript"
	})
window:Notify({
				Title = "Script Version!",
				Message = V,
				Duration = 7.5,
})


local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local function NotifMonsterSpawned(NameMonster,Time)
window:Notify({
				  Title = "Monster Spawned!",
   Content = NameMonster.." Has Spawned!",
   Duration = Time,
})
end
local OptionNotif = {}
local function CreateEsp(Char, Color, Text,Parent)
	if not Char then return end
	if Char:FindFirstChild("ESP") and Char:FindFirstChildOfClass("Highlight") then return end

	
	local highlight = Char:FindFirstChildOfClass("Highlight") or Instance.new("Highlight")
	highlight.Name = "ESP_Highlight"
highlight.Adornee = Char
highlight.FillColor = Color
highlight.FillTransparency = 1
highlight.OutlineColor = Color
highlight.OutlineTransparency = 0
highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
highlight.Enabled = false
	highlight.Parent = Char

	
	local billboard = Char:FindFirstChild("ESP") or Instance.new("BillboardGui")
	billboard.Name = "ESP"
	billboard.Size = UDim2.new(0, 50, 0, 25)
	billboard.AlwaysOnTop = true
	billboard.StudsOffset = Vector3.new(0, -2, 0)
	billboard.Adornee = Parent
	billboard.Enabled = false
	billboard.Parent = Parent

	
	local label = billboard:FindFirstChildOfClass("TextLabel") or Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = Text
	label.TextColor3 = Color
	label.TextScaled = true
	label.Parent = billboard

	task.spawn(function()
		local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera

while highlight and billboard and Parent and Parent.Parent do
	local cameraPosition = Camera and Camera.CFrame.Position
	if cameraPosition and Parent and Parent:IsA("BasePart") then
	local distance = (cameraPosition - Parent.Position).Magnitude
				task.spawn(function()
if ActiveDistanceEsp then
label.Text = Text.." ("..math.floor(distance + 0.5).." m)"
else
label.Text = Text
end
end)
if not DisableLimitRangerEsp then
			local withinRange = distance <= LimitRangerEsp

			highlight.Enabled = withinRange
			billboard.Enabled = withinRange
		else
			billboard.Enabled = true
			highlight.Enabled = true
		end
	end

wait(0.1)
end

	end)
end

local function KeepEsp(Char,Parent)
	if Char and Char:FindFirstChildOfClass("Highlight") and Parent:FindFirstChildOfClass("BillboardGui") then
		Char:FindFirstChildOfClass("Highlight"):Destroy()
		Parent:FindFirstChildOfClass("BillboardGui"):Destroy()
	end
end
local function copyToClipboard(text)
    if setclipboard then
        setclipboard(text)
    else
        warn("setclipboard is not supported in this environment.")
    end
end
local DiscordLink = DiscordTab:AddButton({
Text = "Discord Link",
   Name = "DCLink",
   Callback = function()
copyToClipboard("https://discord.gg/E2TqYRsRP4")
end,
}) local function onPromptShown(prompt)
    if prompt and prompt.MaxActivationDistance > 0 then
            prompt:InputHoldBegin() 
            task.wait(prompt.HoldDuration or 0)
            prompt:InputHoldEnd() 
        
    end
end

local Section1 = GameTab:AddSection({Text = "General",Name = "General"})
local Section2 = EspTab:AddSection({Text = "General",Name = "General"})
local DropdownMonsterSpawnAlert = GameTab:AddDropdown({
Text =  "Monster Spawn Alert Dropdown",
    Name ="DropdownMonsterSpawnAlert",
    Options = {"Rush","Seek","Figure","Sally","Eyes","LookMan","BackdoorRush","Giggle","GloombatSwarm","Ambush","A-60","A-120","Eye stalk"},
    Default = "",
    MultiSelect  = true,
    Flag = "MonsterSpawnAlertDropdown",
    Callback = function(Options)
       
        if table.find(Options, "Rush") and not table.find(OptionNotif, "RushMoving") then
            table.insert(OptionNotif, "RushMoving")
        elseif not table.find(Options, "Rush") then
            local index = table.find(OptionNotif, "RushMoving")
            if index then
                table.remove(OptionNotif, index)
            end
        end
      if table.find(Options, "Eye stalk") and not table.find(OptionNotif, "EyestalkMoving") then
            table.insert(OptionNotif, "EyestalkMoving")
        elseif not table.find(Options, "Eye stalk") then
            local index = table.find(OptionNotif, "EyestalkMoving")
            if index then
                table.remove(OptionNotif, index)
            end
        end

        if table.find(Options, "Seek") and not table.find(OptionNotif, "SeekMovingNewClone") then
            table.insert(OptionNotif, "SeekMovingNewClone")
        elseif not table.find(Options, "Seek") then
            local index = table.find(OptionNotif, "SeekMovingNewClone")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if table.find(Options, "Sally") and not table.find(OptionNotif, "SallyMoving") then
            table.insert(OptionNotif, "SallyMoving")
        elseif not table.find(Options, "Sally") then
            local index = table.find(OptionNotif, "SallyMoving")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if table.find(Options, "Figure") and not table.find(OptionNotif, "FigureRig") then
            table.insert(OptionNotif, "FigureRig")
        elseif not table.find(Options, "Figure") then
            local index = table.find(OptionNotif, "FigureRig")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if table.find(Options, "Eyes") and not table.find(OptionNotif, "Eyes") then
            table.insert(OptionNotif, "Eyes")
        elseif not table.find(Options, "Eyes") then
            local index = table.find(OptionNotif, "Eyes")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if table.find(Options, "LookMan") and not table.find(OptionNotif, "BackdoorLookman") then
            table.insert(OptionNotif, "BackdoorLookman")
        elseif not table.find(Options, "LookMan") then
            local index = table.find(OptionNotif, "BackdoorLookman")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if table.find(Options, "BackdoorRush") and not table.find(OptionNotif, "BackdoorRush") then
            table.insert(OptionNotif, "BackdoorRush")
        elseif not table.find(Options, "BackdoorRush") then
            local index = table.find(OptionNotif, "BackdoorRush")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if table.find(Options, "Giggle") and not table.find(OptionNotif, "GiggleCeiling") then
            table.insert(OptionNotif, "GiggleCeiling")
        elseif not table.find(Options, "Giggle") then
            local index = table.find(OptionNotif, "GiggleCeiling")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if table.find(Options, "GloombatSwarm") and not table.find(OptionNotif, "GloombatSwarm") then
            table.insert(OptionNotif, "GloombatSwarm")
        elseif not table.find(Options, "GloombatSwarm") then
            local index = table.find(OptionNotif, "GloombatSwarm")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if table.find(Options, "Ambush") and not table.find(OptionNotif, "AmbushMoving") then
            table.insert(OptionNotif, "AmbushMoving")
        elseif not table.find(Options, "Ambush") then
            local index = table.find(OptionNotif, "AmbushMoving")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if table.find(Options, "A-60") and not table.find(OptionNotif, "A60") then
            table.insert(OptionNotif, "A60")
        elseif not table.find(Options, "A-60") then
            local index = table.find(OptionNotif, "A60")
            if index then
                table.remove(OptionNotif, index)
            end
        end
if table.find(Options, "A-120") and not table.find(OptionNotif, "A120") then
            table.insert(OptionNotif, "A120")
        elseif not table.find(Options, "A-120") then
            local index = table.find(OptionNotif, "A120")
            if index then
                table.remove(OptionNotif, index)
            end
        end
    end,
})

local EspDoorToggle = EspTab:AddToggle({
Text = "Door Esp",
   Name = "EspDoorToggle",
   Default = false,
   Flag = "EspDoor", 
   Callback = function(Value)
ActiveEspDoor = Value 
task.spawn(function() 
if ActiveEspDoor then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then task.spawn(function()
if Rooms:FindFirstChild("Door") and not Rooms:FindFirstChild("Door"):FindFirstChildOfClass("Highlight") and not Rooms:FindFirstChild("Door").PrimaryPart:FindFirstChildOfClass("BillboardGui") and not Rooms:FindFirstChild("Assets"):FindFirstChild("KeyObtain") then 
local signText = (Rooms:FindFirstChild("Door") and Rooms.Door:FindFirstChild("Sign") and 
                 ((Rooms.Door.Sign:FindFirstChild("Stinker") and Rooms.Door.Sign.Stinker.Text ~= "" and Rooms.Door.Sign.Stinker.Text)
               or (Rooms.Door.Sign:FindFirstChild("SignText") and Rooms.Door.Sign.SignText.Text)))
               or "Unknown"
CreateEsp(Rooms.Door, Color3.fromRGB(0,255,0), "Doors " .. signText,Rooms.Door.PrimaryPart) 
elseif Rooms:FindFirstChild("Door") and not Rooms:FindFirstChild("Door"):FindFirstChildOfClass("Highlight") and not Rooms:FindFirstChild("Door").PrimaryPart:FindFirstChildOfClass("BillboardGui") and  Rooms:FindFirstChild("Assets"):FindFirstChild("KeyObtain") then 
local signText = (Rooms:FindFirstChild("Door") and Rooms.Door:FindFirstChild("Sign") and 
                 ((Rooms.Door.Sign:FindFirstChild("Stinker") and Rooms.Door.Sign.Stinker.Text ~= "" and Rooms.Door.Sign.Stinker.Text)
               or (Rooms.Door.Sign:FindFirstChild("SignText") and Rooms.Door.Sign.SignText.Text)))
               or "Unknown"

CreateEsp(Rooms.Door, Color3.fromRGB(0,255,0), "Doors " .. signText.."(Lock)",Rooms.Door.PrimaryPart)
end end)
end 
end 
end
else
if Game.Workspace:FindFirstChild("CurrentRooms") then
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Door") and Rooms:FindFirstChild("Door"):FindFirstChildOfClass("Highlight") and  Rooms:FindFirstChild("Door").PrimaryPart:FindFirstChildOfClass("BillboardGui") then 
KeepEsp(Rooms:FindFirstChild("Door"),Rooms:FindFirstChild("Door").PrimaryPart) 
end 
end 
end
end 
end
end)
end,
}) local EspHidingSpotsToggle = EspTab:AddToggle({
Text = "Hiding Spots Esp",
   Name = "EspHidingSpotsToggle",
   Default = false,
   Flag = "EspHidingSpots", 
   Callback = function(Value)
ActiveEspHidingSpots = Value 
task.spawn(function() 
if ActiveEspHidingSpots then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then  
for _,Assets in pairs(Rooms:FindFirstChild("Assets"):GetChildren()) do
task.spawn(function() 
if Assets:isA("Model") and (Assets.Name == "Bed" or Assets.Name == "Wardrobe" or Assets.Name == "Backdoor_Wardrobe" or Assets.Name == "Locker_Large" or Assets.Name == "Rooms_Locker")  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(0,255,255),Assets.Name,Assets.PrimaryPart) 
end end)
end 
end 
end end end
else
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then 
for _,Assets in pairs(Rooms:FindFirstChild("Assets"):GetChildren()) do  
if Assets:isA("Model")  and (Assets.Name == "Bed" or Assets.Name == "Wardrobe" or Assets.Name == "Backdoor_Wardrobe" or Assets.Name == "Locker_Large" or Assets.Name == "Rooms_Locker") and   Assets:FindFirstChildOfClass("Highlight") and Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then 
KeepEsp(Assets,Assets.PrimaryPart) 
end 
end 
end 
end end end 
end
end)
end,
})
local ActiveMonsterSpawnAlertToggle = GameTab:AddToggle({
Text = "Active Monster Spawn Alert(Its uncompleted!)",
   Name = "ActiveMonsterSpawnAlertToggle",
   Default = false,
   Flag = "ActiveMonsterSpawnAlert1", 
   Callback = function(Value)
ActiveMonsterSpawnAlert = Value 
end,
})
local NoCooldownpromptToggle = GameTab:AddToggle({
Text =  "Instant Prompt",
   Name ="NoCooldownpromptToggle",
   Default = false,
   Flag = "NoCooldownPrompt1", 
   Callback = function(Value)
ActiveNoCooldownPrompt = Value 
task.spawn(function()  
if ActiveNoCooldownPrompt then
for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("ProximityPrompt") then 
task.spawn(function()
if Assets.HoldDuration ~= 0 then
Assets:SetAttribute("HoldDurationOld",Assets.HoldDuration)
Assets.HoldDuration = 0
end
end)
end 
end  
else
for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("ProximityPrompt") then 
task.spawn(function()
if Assets:GetAttribute("HoldDurationOld") and Assets:GetAttribute("HoldDurationOld") ~= 0 then
Assets.HoldDuration = Assets:GetAttribute("HoldDurationOld")
end
end)
end 
end   
end
end)
end,
})
local EspItemsToggle = EspTab:AddToggle({
Text =  "Items Esp",
   Name ="EspItemsToggle",
   Default = false,
   Flag = "EspItems", 
   Callback = function(Value)
ActiveEspItems = Value 
task.spawn(function() 
if  ActiveEspItems then
  for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
task.spawn(function()
if Assets:isA("Model") and (Assets.Name == "KeyObtain" or Assets.Name == "LeverForGate" or Assets.Name == "Battery" or Assets.Name == "Flashlight" or Assets.Name == "Lighter" or Assets.Name == "Bandage" or Assets.Name == "Crucifix" or Assets.Name == "Vitamins" or Assets.Name == "Lockpick" or Assets.Name == "Candle" or Assets.Name == "AlarmClock" or Assets.Name == "LibraryHintPaper" or Assets.Name == "Smoothie" or Assets.Name == "FuseObtain" or Assets.Name == "BatteryPack" or Assets.Name == "Glowsticks" or Assets.Name == "StarVial" or Assets.Name == "Shakelight" or Assets.Name == "SkeletonKey" or Assets.Name == "Compass" or Assets.Name == "Shears" or Assets.Name == "Lantern")  and not Assets:FindFirstChildOfClass("Highlight") 
and not  Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(255,255,0),Assets.Name,Assets.PrimaryPart) 
end
end)
end  
else
  for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("Model")  and (Assets.Name == "KeyObtain" or Assets.Name == "LeverForGate" or  Assets.Name == "Battery" or Assets.Name == "Flashlight" or Assets.Name == "Bandage" or Assets.Name == "Lighter" or Assets.Name == "Crucifix" or Assets.Name == "Candle" or Assets.Name == "Lockpick" or Assets.Name == "AlarmClock" or Assets.Name == "LibraryHintPaper" or Assets.Name == "Smoothie" or Assets.Name == "FuseObtain" or Assets.Name == "Glowsticks" or Assets.Name == "BatteryPack" or Assets.Name == "StarVial" or Assets.Name == "SkeletonKey" or Assets.Name == "Shakelight" or Assets.Name == "Compass" or Assets.Name == "Shears" or Assets.Name == "Lantern") and  Assets:FindFirstChildOfClass("Highlight") and  Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then 
KeepEsp(Assets,Assets.PrimaryPart) 
end 
end 
end
end)
end,
}) local EspCoinsToggle = EspTab:AddToggle({
Text=  "Coins Esp",
   Name ="EspCoinsToggle",
   Default = false,
   Flag = "EspCoins", 
   Callback = function(Value)
ActiveEspCoins = Value 
task.spawn(function() 
if ActiveEspCoins then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then 
for _,Assets in pairs(Rooms:GetDescendants()) do
if Assets:isA("Model") and (Assets.Name == "GoldPile" or Assets.Name == "")  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(255,255,0),"Gold",Assets.PrimaryPart) 
end 
end 
end
end end end
else
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then  
for _,Assets in pairs(Rooms:GetDescendants()) do  
if Assets:isA("Model")  and (Assets.Name == "GoldPile" or Assets.Name == "") and  Assets:FindFirstChildOfClass("Highlight") and  Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then 
KeepEsp(Assets,Assets.PrimaryPart) 
end 
end 
end 
end end end 
end
end)
end,
})
local EspChestToggle = EspTab:AddToggle({
Text = "Chest Esp",
   Name = "EspChestToggle",
   Default = false,
   Flag = "EspChest", 
   Callback = function(Value)
ActiveEspChest = Value 
task.spawn(function() 
if ActiveEspChest then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then 
for _,Assets in pairs(Rooms:GetDescendants()) do 
if Assets:isA("Model") and (Assets.Name == "ChestBoxLocked" or Assets.Name == "ChestBox")  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(255,255,0),Assets.Name,Assets.PrimaryPart) 
end 
end 
end
end end end
else
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then 
for _,Assets in pairs(Rooms:GetDescendants()) do 
if Assets:isA("Model")  and (Assets.Name == "ChestBoxLocked" or Assets.Name == "ChestBox") and  Assets:FindFirstChildOfClass("Highlight") and Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then 
KeepEsp(Assets,Assets.PrimaryPart) 
end 
end 
end 
end end end 
end
end)
end,
})
 local EspBooksToggle = EspTab:AddToggle({
Text =  "Books Esp",
   Name = "EspBooksToggle",
Default = false,
   Flag = "EspBooks", 
   Callback = function(Value)
ActiveEspBooks = Value 
task.spawn(function() 
if ActiveEspBooks then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then  
for _,Assets in pairs(Rooms:GetDescendants()) do 
if Assets:isA("Model") and Assets.Name == "LiveHintBook"  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(0,150,150),"Books",Assets.PrimaryPart) 
end 
end 
end
end end end
else
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then 
for _,Assets in pairs(Rooms:GetDescendants()) do 
if Assets:isA("Model")  and Assets.Name == "LiveHintBook"  and   Assets:FindFirstChildOfClass("Highlight") and  Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then 
KeepEsp(Assets,Assets.PrimaryPart) 
end 
end 
end 
end end end 
end
end)
end,
})
local EspMonstersToggle = EspTab:AddToggle({
Text = "Monsters Esp",
   Name = "EspMonstersToggle",
   Default = false,
   Flag = "EspMonsters", 
   Callback = function(Value)
ActiveEspMonster = Value 
if ActiveEspMonster then
for _,Assets in pairs(Workspace:GetDescendants()) do  
if Assets:isA("Model") and (Assets.Name == "FigureRig" or Assets.Name == "SallyMoving" or Assets.Name == "RushMoving" or Assets.Name == "Eyes" or Assets.Name == "SeekMovingNewClone" or Assets.Name == "BackdoorLookman" or Assets.Name == "BackdoorRush" or Assets.Name == "GloombatSwarm" or Assets.Name == "GiggleCeiling" or Assets.Name == "AmbushMoving" or Assets.Name == "EyestalkMoving")  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then Assets.PrimaryPart.Transparency = 0
CreateEsp(Assets,Color3.fromRGB(255,0,0),Assets.Name,Assets.PrimaryPart) 
end 
end 
else
for _,Assets in pairs(Workspace:GetDescendants()) do 
if Assets:isA("Model")  and (Assets.Name == "FigureRig" or Assets.Name == "SallyMoving" or Assets.Name == "Eyes" or Assets.Name == "RushMoving" or Assets.Name == "SeekMovingNewClone" or Assets.Name == "BackdoorRush" or Assets.Name == "BackdoorLookman" or Assets.Name == "GiggleCeiling" or Assets.Name == "GloombatSwarm" or Assets.Name == "AmbushMoving" or Assets.Name == "EyestalkMoving") and  Assets:FindFirstChildOfClass("Highlight") and  Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then Assets.PrimaryPart.Transparency = 1
KeepEsp(Assets,Assets.PrimaryPart) 
end 
end
end
end,
})
local ValueSpeed = 16
local PlayerSpeedSlider = PlayerTab:AddSlider({
Text = "Player Speed(max 21 for not be a exploiter)",
   Name = "PlayerSpeedSlider",
   Min = 0,
   Max = 23,
   Default = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
CurrentValue = Value
ValueSpeed = Value
end,  ValueSpeed = CurrentValue,
})

local PlayerActiveModifyingSpeedToggle = PlayerTab:AddToggle({
Text = "Active Modifying Player Speed",
   Name = "PlayerActiveModifyingSpeedToggle",
   Default = false,
   Flag = "ButtonSpeed", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActiveSpeedBoost = Value task.spawn(function()
while ActiveSpeedBoost do
Game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = ValueSpeed
task.wait(0.1)
end end)
end,
})
local ActiveAvoidFigure = false
local AvoidFigureToggle = MonstersTab:AddToggle({
Text =  "Figure can't detect you(Soon)",
   Name ="AvoidFigureToggle",
   Default = false,
   Flag = "ButtonNoEyes", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActiveAvoidFigure = Value
end,
})

local ValueFieldOfView = 80
local PlayerFieldOfViewSlider = PlayerTab:AddSlider({
Text = "Field Of View(Unverified!)",
   Name = "PlayerFieldOfViewSlider",
   Min = 80,
   Max = 120,
   Default = 80,
   Flag = "FOV1",
   Callback = function(Value)
CurrentValue = Value
ValueFieldOfView = Value
end,  ValueFieldOfView = CurrentValue,
}) 
local ActiveModifiedFieldOfView = false
local PlayerActiveModifyingFOVToggle = PlayerTab:AddToggle({
Text = "Active Modifying Player FOV(Unverified!)",
   Name = "PlayerActiveModifyingFOVToggle",
   Default = false,
   Flag = "ButtonFOV", 
   Callback = function(Value)
  ActiveModifiedFieldOfView = Value 
task.spawn(function()
while ActiveModifiedFieldOfView do 
task.spawn(function()
Game.Workspace.CurrentCamera.FieldOfView = ValueFieldOfView 
end)
task.wait(0.1)
end end)
end,
}) 
local ActiveFullBright = false
local PlayerFullBright = GameTab:AddToggle({
Text =  "Full Bright(unverified!)",
   Name ="PlayerFullBright",
   Default = false,
   Flag = "FullBright",
   Callback = function(Value)
ActiveFullBright = Value 
task.spawn(function() 
while ActiveFullBright do 
if Game.Lighting then 
Game.Lighting.Brightness = 5
Game.Lighting.Ambient = Color3.fromRGB(255, 255, 255) 
end  
wait(0.00001)
end 
end)
end,  
})
local Section3 = EspTab:AddSection({Text = "Backdoor", Name = "Backdoor"})
local EspTimerLeverToggle = EspTab:AddToggle({
Text = "Timer Lever Esp",
   Name = "EspTimerLeverToggle",
   Default = false,
   Flag = "EspTimerLever", 
   Callback = function(Value)
ActiveEspTimerLever = Value 
task.spawn(function() 
if ActiveEspTimerLever then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then 
for _,Assets in pairs(Rooms:GetDescendants()) do  
task.spawn(function()
if Assets:isA("Model") and Assets.Name == "TimerLever"  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(0,150,150),"Timer Lever",Assets.PrimaryPart) 
end 
end)
end 
end
end end end
else
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then 
for _,Assets in pairs(Rooms:GetDescendants()) do 
if Assets:isA("Model")  and Assets.Name == "TimerLever"  and   Assets:FindFirstChildOfClass("Highlight") and  Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then 
KeepEsp(Assets,Assets.PrimaryPart) 
end 
end 
end 
end end end 
end
end)
end,
})
local Section4 = EspTab:AddSection({Text = "Mines",Name = "Mines"})
local EspGeneratorToggle = EspTab:AddToggle({
Text = "Generator Esp",
   Name = "EspGeneratorToggle",
   Default = false,
   Flag = "EspGen", 
   Callback = function(Value)
ActiveEspGen = Value 
task.spawn(function() 
if ActiveEspGen then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then  for _,Assets in pairs(Rooms:FindFirstChild("Assets"):GetChildren()) do  if Assets:isA("Model") and Assets.Name == "MinesGenerator"  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(255,255,0),Assets.Name,Assets.PrimaryPart) 
end 
end 
end 
end end end
else
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then 
for _,Assets in pairs(Rooms:FindFirstChild("Assets"):GetChildren()) do 
if Assets:isA("Model")  and Assets.Name == "MinesGenerator" and  Assets:FindFirstChildOfClass("Highlight") and  Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui") then 
KeepEsp(Assets,Assets.PrimaryPart) 
end 
end 
end 
end end end 
end
end)
end,
})
workspace.ChildAdded:Connect(function(child)
if ActiveNoCooldownPrompt then
for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("ProximityPrompt") then 
if Assets.HoldDuration ~= 0 then
Assets:SetAttribute("HoldDurationOld",Assets.HoldDuration)
Assets.HoldDuration = 0
end
end 
end  
end


if ActiveEspChest then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then 
for _,Assets in pairs(Rooms:GetDescendants()) do 
if Assets:isA("Model") and (Assets.Name == "ChestBoxLocked" or Assets.Name == "ChestBox")  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(255,255,0),Assets.Name,Assets.PrimaryPart) 
end 
end 
end
end end end
end

if ActiveEspMonster then
for _,Assets in pairs(Workspace:GetDescendants()) do  
if Assets:isA("Model") and (Assets.Name == "FigureRig" or Assets.Name == "SallyMoving" or Assets.Name == "RushMoving" or Assets.Name == "Eyes" or Assets.Name == "SeekMovingNewClone" or Assets.Name == "BackdoorLookman" or Assets.Name == "BackdoorRush" or Assets.Name == "GloombatSwarm" or Assets.Name == "GiggleCeiling" or Assets.Name == "AmbushMoving" or Assets.Name == "EyestalkMoving")  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then Assets.PrimaryPart.Transparency = 0
CreateEsp(Assets,Color3.fromRGB(255,0,0),Assets.Name,Assets.PrimaryPart) 
end 
end 
end


if ActiveEspBooks then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then  
for _,Assets in pairs(Rooms:GetDescendants()) do 
if Assets:isA("Model") and Assets.Name == "LiveHintBook"  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(0,150,150),"Books",Assets.PrimaryPart) 
end 
end 
end
end end end
end


if ActiveEspGen and child.Name == "MinesGenerator" then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then
for _,Assets in pairs(Rooms:FindFirstChild("Assets"):GetChildren()) do 
if Assets:isA("Model") and Assets.Name == "MinesGenerator"  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(255,255,0),Assets.Name,Assets.PrimaryPart) 
end 
end 
end 
end end end
end

if ActiveEspHidingSpots then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then  
for _,Assets in pairs(Rooms:FindFirstChild("Assets"):GetChildren()) do
if Assets:isA("Model") and (Assets.Name == "Bed" or Assets.Name == "Wardrobe" or Assets.Name == "Backdoor_Wardrobe" or Assets.Name == "Locker_Large" or Assets.Name == "Rooms_Locker")  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(0,255,255),Assets.Name,Assets.PrimaryPart) 
end
end 
end 
end end end
end

if ActiveBigPrompt and child:isA("ProximityPrompt") then
for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("ProximityPrompt") then 
if Assets.MaxActivationDistance ~= 13 then
Assets:SetAttribute("MaxActivationDistanceOld",Assets.MaxActivationDistance)
Assets.MaxActivationDistance = 13
end
end 
end 
end

if  ActiveEspItems then
  for _,Assets in pairs(Game.Workspace:GetDescendants()) do  

if Assets:isA("Model") and (Assets.Name == "KeyObtain" or Assets.Name == "LeverForGate" or Assets.Name == "Battery" or Assets.Name == "Flashlight" or Assets.Name == "Lighter" or Assets.Name == "Bandage" or Assets.Name == "Crucifix" or Assets.Name == "Vitamins" or Assets.Name == "Lockpick" or Assets.Name == "Candle" or Assets.Name == "AlarmClock" or Assets.Name == "LibraryHintPaper" or Assets.Name == "Smoothie" or Assets.Name == "FuseObtain" or Assets.Name == "BatteryPack" or Assets.Name == "Glowsticks" or Assets.Name == "StarVial" or Assets.Name == "Shakelight" or Assets.Name == "SkeletonKey" or Assets.Name == "Compass" or Assets.Name == "Shears" or Assets.Name == "Lantern")  and not Assets:FindFirstChildOfClass("Highlight") 
and not  Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(255,255,0),Assets.Name,Assets.PrimaryPart) 
end

end  
end

if ActiveEspTimerLever and child.Name == "TimerLever" then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then 
for _,Assets in pairs(Rooms:GetDescendants()) do  
if Assets:isA("Model") and Assets.Name == "TimerLever"  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(0,150,150),"Timer Lever",Assets.PrimaryPart) 
end 
end 
end
end 
end
end
end

if ActiveEspDoor then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then 
if Rooms:FindFirstChild("Door") and not Rooms:FindFirstChild("Door"):FindFirstChildOfClass("Highlight") and not Rooms:FindFirstChild("Door").PrimaryPart:FindFirstChildOfClass("BillboardGui") and not Rooms:FindFirstChild("Assets"):FindFirstChild("KeyObtain") then 
local signText = (Rooms:FindFirstChild("Door") and Rooms.Door:FindFirstChild("Sign") and 
                 ((Rooms.Door.Sign:FindFirstChild("Stinker") and Rooms.Door.Sign.Stinker.Text ~= "" and Rooms.Door.Sign.Stinker.Text)
               or (Rooms.Door.Sign:FindFirstChild("SignText") and Rooms.Door.Sign.SignText.Text)))
               or "Unknown"
CreateEsp(Rooms.Door, Color3.fromRGB(0,255,0), "Doors " .. signText,Rooms.Door.PrimaryPart) 
elseif Rooms:FindFirstChild("Door") and not Rooms:FindFirstChild("Door"):FindFirstChildOfClass("Highlight") and not Rooms:FindFirstChild("Door").PrimaryPart:FindFirstChildOfClass("BillboardGui") and  Rooms:FindFirstChild("Assets"):FindFirstChild("KeyObtain") then 
local signText = (Rooms:FindFirstChild("Door") and Rooms.Door:FindFirstChild("Sign") and 
                 ((Rooms.Door.Sign:FindFirstChild("Stinker") and Rooms.Door.Sign.Stinker.Text ~= "" and Rooms.Door.Sign.Stinker.Text)
               or (Rooms.Door.Sign:FindFirstChild("SignText") and Rooms.Door.Sign.SignText.Text)))
               or "Unknown"

CreateEsp(Rooms.Door, Color3.fromRGB(0,255,0), "Doors " .. signText.."(Lock)",Rooms.Door.PrimaryPart)
end
end 
end 
end
end


if ActiveEspCoins then
if Game.Workspace:FindFirstChild("CurrentRooms") then 
for _,Rooms in pairs(Game.Workspace:FindFirstChild("CurrentRooms"):GetChildren()) do 
if Rooms:isA("Model") then
if Rooms:FindFirstChild("Assets") then 
for _,Assets in pairs(Rooms:GetDescendants()) do
if Assets:isA("Model") and (Assets.Name == "GoldPile" or Assets.Name == "")  and  not Assets:FindFirstChildOfClass("Highlight") and not Assets.PrimaryPart:FindFirstChildOfClass("BillboardGui")  then 
CreateEsp(Assets,Color3.fromRGB(255,255,0),"Gold",Assets.PrimaryPart) 
end 
end 
end
end end end
end

 if ActiveMonsterSpawnAlert then
if table.find(OptionNotif,child.Name) then
if child.Name == "RushMoving" then 
NotifMonsterSpawned("Rush",3)
elseif child.Name == "EyestalkMoving" then
NotifMonsterSpawned("Eye Stalk",3)
elseif child.Name == "SeekMovingNewClone" then
NotifMonsterSpawned("Seek",3)
elseif child.Name == "FigureRig" then
NotifMonsterSpawned("Figure",3)
elseif child.Name == "SallyMoving" then
NotifMonsterSpawned("Sally",3)
elseif child.Name == "Eyes" then
NotifMonsterSpawned("Eyes",3)
elseif child.Name == "BackdoorLookman" then
NotifMonsterSpawned("LookMan",3)
elseif child.Name == "BackdoorRush" then
NotifMonsterSpawned("Blitz",3)
elseif child.Name == "GloombatSwarm" then
NotifMonsterSpawned("Gloombat Swarm",3)
elseif child.Name == "GiggleCeiling" then
NotifMonsterSpawned("Giggle",3)
elseif child.Name == "AmbushMoving" then
NotifMonsterSpawned("Ambush",3)
elseif child.Name == "A60" then
NotifMonsterSpawned("A60",3)
elseif child.Name == "A120" then
NotifMonsterSpawned("A120",3)
end
end
end
end)
local DropdownAutoInteract = GameTab:AddDropdown({
Text = "Auto Interact Settings(Coming Soon)",
   Name = "DropdownAutoInteract",
   Options = {"Drawer", "Pickup Items", "???"},
   Default = "Nothings",  -- pour afficher ce qui est réellement chargé
   Flag = "AIS",
   Callback = function(Selected)
 end,
})
local AutoInteractToggle = GameTab:AddToggle({
Text = "Auto Interact",
   Name = "AutoInteractToggle",
   Default = false,
   Flag = "AutoInter1", 
   Callback = function(Value)
ActiveAutoInteract = Value 
task.spawn(function() 
while ActiveAutoInteract do 
for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("ProximityPrompt") and  Assets.Name ~= "HidePrompt" then 
onPromptShown(Assets)
wait(0.000001)
end 
end
wait(0.000001)
end 
end)
end,
})
local BigDistancePromptToggle = GameTab:AddToggle({
Text =  "Big Distance Prompt",
   Name ="BigDistancePromptToggle",
   Default = false,
   Flag = "AutoBigDistancePrompt", 
   Callback = function(Value)
ActiveBigPrompt = Value 
if ActiveBigPrompt then
for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("ProximityPrompt") then 
if Assets.MaxActivationDistance ~= 13 then
Assets:SetAttribute("MaxActivationDistanceOld",Assets.MaxActivationDistance)
Assets.MaxActivationDistance = 13
end
end 
end 
else
for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("ProximityPrompt") then 
if Assets:GetAttribute("MaxActivationDistanceOld") and Assets:GetAttribute("MaxActivationDistanceOld") ~= 13 then
Assets.MaxActivationDistance = Assets:GetAttribute("MaxActivationDistanceOld")
end
end 
end  
end
end,
})
local ButtonUnloadCheat = SettingsTab:AddButton({
Text = "Unload Cheat",
   Name = "ButtonUnloadCheat",
   Callback = function()

end,
})
local LimitRangerEspSlider = SettingsTab:AddSlider({
Text =  "Limit Ranger for esp",
   Name ="LimitRangerEspSlider",
   Min =25,
   Max = 1000,
   Default = 100,
   Flag = "LimitRangerEsp1",
   Callback = function(Value)
CurrentValue = Value
LimitRangerEsp = Value
end,  LimitRangerEsp = CurrentValue,
})  local DisableLimitRangerEspToggle = SettingsTab:AddToggle({
Text =  "Disable Limit Ranger Esp",
   Name ="DisableLimitRangerEspToggle",
   Default = false,
   Flag = "ButtonDLRE", 
   Callback = function(Value)
  DisableLimitRangerEsp = Value 
end,
})
local DistanceEspToggle = SettingsTab:AddToggle({
Text =  "Activate Distance For Esp",
   Name ="DistanceEspToggle",
   Default = false,
   Flag = "ButtonADFE", 
   Callback = function(Value)
  ActiveDistanceEsp = Value 
end,
})
local CanJumpToggle = PlayerTab:AddToggle({
Text = "Can Jump",
   Name = "CanJumpToggle",
   Default = false,
   Flag = "CanJump1", 
   Callback = function(Value)
ActiveCanJump = Value 
Game.Players.LocalPlayer.Character:SetAttribute("CanJump",ActiveCanJump)
end,
}) 

local ChangeThemeDropdown = SettingsTab:AddDropdown({
		Text = "Change Theme:",
		Name = "CTD",
		Options = {"Default", "Light", "RedDark","BlueNeon","GreenMatrix","PurpleDream","Sunset",
		"Ocean","Toxic","Storm","LimePop","Cyber","Chocolate","RoseGold","CottonCandy","NightSky","Steel",
			"GoldLux","Ice","TealWave","FrostFire","DarkMatter","Lava","PinkCandy","Sakura","DeepSpace","Skyline","Crimson"
			,"Desert","Camo","Plasma","Arctic","Slate","Vaporwave"
			
		},
		Default = "Default",
		MultiSelect = false,
		Flag = "CTD", --Put a name flag for save data if you enabled saving data
		Callback = function(choice)
window:ChangeTheme(choice)
		end
	})

library:LoadData()
local function getServerInfo()
	local Players = game:GetService("Players")
	local playerCount = #Players:GetPlayers()
local maxPlayers = game:GetService("Players").MaxPlayers
local isStudio = game:GetService("RunService"):IsStudio()

	return {
		PlaceId = game.PlaceId,
		JobId = game.JobId,
		IsStudio = isStudio,
		CurrentPlayers = playerCount,
MaxPlayers =maxPlayers
	}
end
task.spawn(function()
while true do
	task.wait(1) 
task.spawn(function()
	local updatedInfo = getServerInfo()
	local updatedContent = string.format(
		"📌 PlaceId: %s\n🔑 JobId: %s\n🧪 IsStudio: %s\n👥 Players: %d/%d",
		updatedInfo.PlaceId,
		updatedInfo.JobId,
		
		tostring(updatedInfo.IsStudio),
		updatedInfo.CurrentPlayers,
updatedInfo.MaxPlayers
	)

	ParagraphInfoServer:Set({
		Title = "Info",
		Content = updatedContent
	})
end)
end

end)
end)
