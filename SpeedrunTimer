local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Supprimer l'ancien TimerGui s'il existe
local existingGui = playerGui:FindFirstChild("TimerGui")
if existingGui then
    existingGui:Destroy()
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TimerGui"
screenGui.Parent = playerGui

-- Créer la FrameMain déplaçable
local FramMain = Instance.new("Frame")
FramMain.Name = "FrameMain"
FramMain.Size = UDim2.new(0, 500, 0, 250)
FramMain.Position = UDim2.new(0, 50, 0, 50)
FramMain.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
FramMain.Active = true
FramMain.Draggable = true
FramMain.Visible = false
FramMain.Parent = screenGui

-- Ajouter le TextLabel "Settings" dans FrameMain
local settingsLabel = Instance.new("TextLabel")
settingsLabel.Name = "SettingsLabel"
settingsLabel.Size = UDim2.new(1, 0, 0, 50)
settingsLabel.Position = UDim2.new(0, 0, 0, 0)
settingsLabel.Text = "Settings"
settingsLabel.TextScaled = true
settingsLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
settingsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
settingsLabel.Parent = FramMain

-- Créer une ScrollingFrame dans FrameMain pour ajouter des fonctionnalités
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Name = "ScrollingFrame"
scrollingFrame.Size = UDim2.new(1, 0, 0.7, 0)
scrollingFrame.Position = UDim2.new(0, 0, 0.2, 0)
scrollingFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
scrollingFrame.BorderSizePixel = 0
scrollingFrame.CanvasSize = UDim2.new(0, 0, 2, 0) -- Ajuster la taille du canvas pour permettre le scroll
scrollingFrame.ScrollBarThickness = 5
scrollingFrame.Parent = FramMain

-- Ajouter un UIGridLayout dans la ScrollingFrame
local uiGridLayout = Instance.new("UIGridLayout")
uiGridLayout.CellSize = UDim2.new(0, 100, 0, 50) -- Taille de chaque cellule dans la grille
uiGridLayout.FillDirectionMaxCells = 2 -- Nombre de colonnes
uiGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
uiGridLayout.Parent = scrollingFrame

-- Ajouter des boutons/fonctionnalités dans la ScrollingFrame
for i = 1, 39 do
    local featureButton = Instance.new("TextButton")
    featureButton.Name = "FeatureButton"..i
    featureButton.Size = UDim2.new(0, 100, 0, 50)
    featureButton.Text = "Feature " .. i
    featureButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    featureButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    featureButton.Parent = scrollingFrame
end

-- Variable pour verrouiller ou déverrouiller le déplacement
local isLocked = false
local isVisible = false

-- Bouton pour verrouiller ou déverrouiller la FrameMain
local lockButton = Instance.new("TextButton")
lockButton.Name = "LockButton"
lockButton.Size = UDim2.new(0, 50, 0, 50)
lockButton.Position = UDim2.new(0, 0, 0.45, 0)
lockButton.Text = "Lock Frame"
lockButton.TextScaled = true
lockButton.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
lockButton.TextColor3 = Color3.fromRGB(255, 255, 255)
lockButton.Parent = screenGui

local VisibleFrameButton = Instance.new("TextButton")
VisibleFrameButton.Name = "VisibleFrameButton"
VisibleFrameButton.Size = UDim2.new(0, 50, 0, 50)
VisibleFrameButton.Position = UDim2.new(0, 60, 0.45, 0)
VisibleFrameButton.Text = "Close Frame"
VisibleFrameButton.TextScaled = true
VisibleFrameButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
VisibleFrameButton.TextColor3 = Color3.fromRGB(255, 255, 255)
VisibleFrameButton.Parent = screenGui

-- Fonction pour activer ou désactiver le déplacement de la FrameMain
local function toggleLock()
    isLocked = not isLocked
    if isLocked then
        FramMain.Draggable = false
        lockButton.Text = "Unlock Frame"
    else
        FramMain.Draggable = true
        lockButton.Text = "Lock Frame"
    end
end

-- Fonction pour gérer la visibilité de la FrameMain
local function toggleVisible()
    isVisible = not isVisible
    if isVisible then
        FramMain.Visible = false
        VisibleFrameButton.Text = "Open Frame"
    else
        FramMain.Visible = true
        VisibleFrameButton.Text = "Close Frame"
    end
end

lockButton.MouseButton1Click:Connect(toggleLock)
VisibleFrameButton.MouseButton1Click:Connect(toggleVisible)

-- Ajout des autres éléments du timer, boutons, et fonctions comme dans ton script original...

-- Créer le TextLabel pour le timer
local timerLabel = Instance.new("TextLabel")
timerLabel.Name = "TimerLabel"
timerLabel.Size = UDim2.new(0, 150, 0, 50)
timerLabel.Position = UDim2.new(0, 0, 0.2, -25)
timerLabel.Text = "00:00:00"
timerLabel.TextScaled = true
timerLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
timerLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
timerLabel.Parent = screenGui

-- Fonction pour créer un effet arc-en-ciel sur le texte
local function rainbowEffect(label)
    local hue = 0
    local runService = game:GetService("RunService")

    runService.Heartbeat:Connect(function()
        hue = hue + 1
        if hue > 360 then
            hue = 0
        end
        local color = Color3.fromHSV(hue / 360, 1, 1)
        label.TextColor3 = color
    end)
end

-- Label "Created by" avec effet arc-en-ciel
local ByIlianLabel = Instance.new("TextLabel")
ByIlianLabel.Name = "ByIlian"
ByIlianLabel.Size = UDim2.new(1, 0, 0, 15)
ByIlianLabel.Position = UDim2.new(0, 0, 0.95, 0)
ByIlianLabel.Text = "The Best Timer Created By Iliankytb"
ByIlianLabel.TextScaled = true
ByIlianLabel.BackgroundTransparency = 1
ByIlianLabel.Parent = timerLabel

-- Appliquer l'effet arc-en-ciel au label
rainbowEffect(ByIlianLabel)

-- Bouton pour arrêter le timer
local stopButton = Instance.new("TextButton")
stopButton.Name = "StopButton"
stopButton.Size = UDim2.new(0, 50, 0, 50)
stopButton.Position = UDim2.new(0, 0, 0.3, 0)
stopButton.Text = "Stop The Timer"
stopButton.TextScaled = true
stopButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
stopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
stopButton.Parent = screenGui

-- Bouton pour reprendre ou réinitialiser le timer
local resumeButton = Instance.new("TextButton")
resumeButton.Name = "ResumeButton"
resumeButton.Size = UDim2.new(0, 50, 0, 50)
resumeButton.Position = UDim2.new(0, 60, 0.3, 0)
resumeButton.Text = "Start Timer"
resumeButton.TextScaled = true
resumeButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
resumeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
resumeButton.Parent = screenGui

-- Bouton pour enlever le GUI
local RemoveGuiButton = Instance.new("TextButton")
RemoveGuiButton.Name = "RemoveTimerGui"
RemoveGuiButton.Size = UDim2.new(0, 50, 0, 50)
RemoveGuiButton.Position = UDim2.new(0, 120, 0.3, 0)
RemoveGuiButton.Text = "Remove Timer"
RemoveGuiButton.TextScaled = true
RemoveGuiButton.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
RemoveGuiButton.TextColor3 = Color3.fromRGB(255, 255, 255)
RemoveGuiButton.Parent = screenGui

-- Variables pour le timer
local runningTimer = false
local minutes = 0
local seconds = 0
local milliseconds = 0

-- Fonction pour formater le temps
local function formatTime(mins, secs, millis)
    return string.format("%02d:%02d:%02d", mins, secs, millis)
end

-- Utilisation de RunService pour mettre à jour l'affichage du timer
local runService = game:GetService("RunService")

local function updateTimer(deltaTime)
    if runningTimer then
        milliseconds = milliseconds + deltaTime * 600
        
        if milliseconds >= 600 then
            milliseconds = 0
            seconds = seconds + 1
            
            if seconds >= 60 then
                seconds = 0
                minutes = minutes + 1
            end
        end
        
        timerLabel.Text = formatTime(minutes, seconds, milliseconds)
    end
end

runService.Heartbeat:Connect(updateTimer)

-- Fonction pour démarrer ou réinitialiser le timer
local function startOrResetTimer()
    if runningTimer then
        runningTimer = false
        minutes = 0
        seconds = 0
        milliseconds = 0
        timerLabel.Text = formatTime(minutes, seconds, milliseconds)
        resumeButton.Text = "Start Timer"
        stopButton.Text = "Stop The Timer"
    else
        runningTimer = true
        resumeButton.Text = "Reset Timer Or Resume"
        stopButton.Text = "Timer Stopped!"
    end
end

-- Fonction pour stopper le timer
local function stopTimer()
    if runningTimer then
        runningTimer = false
        stopButton.Text = "Timer Stopped!"
    end
end

-- Fonction pour enlever le GUI
local function RemoveUi()
    playerGui:FindFirstChild("TimerGui"):Destroy()
end

-- Arrêter le timer si le joueur meurt
humanoid.Died:Connect(stopTimer)

-- Connexion des boutons
stopButton.MouseButton1Click:Connect(stopTimer)
resumeButton.MouseButton1Click:Connect(startOrResetTimer)
RemoveGuiButton.MouseButton1Click:Connect(RemoveUi)
