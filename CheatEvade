local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()
local Window = OrionLib:MakeWindow({Name = "Cheat Evade", HidePremium = false, IntroEnabled = false, SaveConfig = true, ConfigFolder = "OrionTest"})

local player = game.Players.LocalPlayer
local CandyName = {"CandyCorn","WrappedCandy","Bag"}

_G.AutoFarmCandysNoSecurity = false
_G.AutoFarmCandysSecurity = false
_G.AutoRespawn = false
_G.AutoFarmWins = false
_G.foundCandy = false
_G.EspPlayer = false
_G.EspBot = false
_G.EspCandys = false
_G.EspMeter = false
_G.AutoFarmMoney = false
_G.AutoBoomBox = false
_G.IdsBoomBox = 0
_G.ActiveSpeed = false
_G.ActiveJumpPower = false
_G.Speed = 100
_G.JumpPower = 50


local playerColor = Color3.fromRGB(255, 255, 0) -- couleur par défaut (orange)
local candyColor = Color3.fromRGB(255, 165, 0) -- couleur par défaut (orange)

local function ToggleESPPlayer()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= game.Players.LocalPlayer and player.Character then
            local head = player.Character:FindFirstChild("Head")
            
            if _G.EspPlayer == true then
                if head and not head:FindFirstChild("PlayerBillboard") then
                    local billboard = Instance.new("BillboardGui", head)
                    billboard.Name = "PlayerBillboard"
                    billboard.Size = UDim2.new(0, 100, 0, 20)
                    billboard.StudsOffset = Vector3.new(0, 3, 0)
                    billboard.AlwaysOnTop = true

                    local label = Instance.new("TextLabel", billboard)
                    label.Size = UDim2.new(1, 0, 1, 0)
                    label.BackgroundTransparency = 1
                    label.Text = player.Name
                    label.TextColor3 = playerColor
                    label.TextScaled = true

                    -- Supprimer le texte après 0.1 seconde
                    wait(0.00000001)
                    billboard:Destroy()
                end
            elseif head and head:FindFirstChild("PlayerBillboard") then
                head:FindFirstChild("PlayerBillboard"):Destroy()
            end
        end
    end
end

local function ToggleESPCandy()
    for _, item in pairs(game.Workspace:GetDescendants()) do
        if table.find(CandyName, item.Name) and item:IsA("MeshPart") then
            if _G.EspCandys == true then
                if not item:FindFirstChild("CandyBillboard") then
                    local billboard = Instance.new("BillboardGui", item)
                    billboard.Name = "CandyBillboard"
                    billboard.Size = UDim2.new(0, 50, 0, 20)
                    billboard.StudsOffset = Vector3.new(0, 2, 0)
                    billboard.AlwaysOnTop = true

                    local label = Instance.new("TextLabel", billboard)
                    label.Size = UDim2.new(1, 0, 1, 0)
                    label.BackgroundTransparency = 1
                    label.Text = item.Name
                    label.TextColor3 = candyColor
                    label.TextScaled = true

                    -- Supprimer le texte après 0.1 seconde
                    wait(0.000001)
                    billboard:Destroy()
                end
            elseif item:FindFirstChild("CandyBillboard") then
                item:FindFirstChild("CandyBillboard"):Destroy()
            end
        end
    end
end

local function AutoRespawn()
local player = game.Players.LocalPlayer
local HumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
local Humanoid = player.Character:FindFirstChild("Humanoid")
if player.Character:GetAttribute("Downed") then
game:GetService("ReplicatedStorage").Events.Data.GetLives:FireServer()
game:GetService("ReplicatedStorage").Events.Player.ChangePlayerMode:FireServer(true)
wait(.0000000001)
end
end

local function AutoFarmMoney()
    
    -- Vérifie qu'un joueur est tombé
    local function GetDownedPlayer()
        for _, v in pairs(game.Workspace.Game.Players:GetChildren()) do
            if v:GetAttribute("Downed") then
                return v
            end
        end
        return nil
    end

    while _G.AutoFarmMoney == true do
        if HumanoidRootPart and Humanoid then
            local downedPlayer = GetDownedPlayer()

            -- Si un joueur est détecté comme tombé
            if downedPlayer and downedPlayer:FindFirstChild("HumanoidRootPart") then
                HumanoidRootPart.CFrame = downedPlayer.HumanoidRootPart.CFrame + Vector3.new(0, 3, 0)
             game:GetService("ReplicatedStorage").Events.Character.Interact:FireServer("Revive",true,downedPlayer)
                wait(0.5) -- Temps pour ranimé
            else
                -- Temps d'attente si aucun joueur n'est tombé
                wait(0.5)
            end
        else
            wait(0.1) -- Vérification plus rapide si le personnage n'est pas encore chargé
        end
    end
end

local function Died()
game:GetService("ReplicatedStorage").Events.Data.GetLives:FireServer()
game:GetService("ReplicatedStorage").Events.Player.ChangePlayerMode:FireServer(false)
game:GetService("ReplicatedStorage").Events.Data.GetLives:FireServer()
end
-- Fonction pour auto-farm avec sécurité
local function AutoFarmCandysSecurity()
local player = game.Players.LocalPlayer
local HumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
local Humanoid = player.Character:FindFirstChild("Humanoid")
    if HumanoidRootPart then
        
        for _, item in ipairs(game.Workspace:GetDescendants()) do
            if table.find(CandyName, item.Name) then
                
                if item:IsA("MeshPart") then
                    HumanoidRootPart.CFrame = item.CFrame
                    _G.foundCandy = true
                    wait(0.1)
_G.foundCandy = false
                    return
                end
            end
        end

        -- Si aucun bonbon ou modèle n'est trouvé, crée une Part de sécurité
        if _G.foundCandy == false then
            local securityPart = game.Workspace:FindFirstChild("SecurityPart") or Instance.new("Part")
            securityPart.Name = "SecurityPart"
            securityPart.Size = Vector3.new(10, 1, 10)
            securityPart.Position = Vector3.new(0, 500, 0)  -- Position en hauteur
            securityPart.Anchored = true
            securityPart.Parent = game.Workspace
            HumanoidRootPart.CFrame = securityPart.CFrame + Vector3.new(0, 3, 0)  -- Téléporte le joueur au-dessus de la Part de sécurité
            wait(0.5)
            securityPart:Destroy()
        end
    end
end

-- Fonction pour auto-farm sans sécurité
local function AutoFarmCandysNoSecurity()
local player = game.Players.LocalPlayer
local HumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
local Humanoid = player.Character:FindFirstChild("Humanoid")
    if HumanoidRootPart then
        for _, item in ipairs(game.Workspace:GetDescendants()) do
            if table.find(CandyName, item.Name) then
                if item:IsA("MeshPart") then
_G.foundCandy = true
                    HumanoidRootPart.CFrame = item.CFrame
                    wait(0.1)
_G.foundCandy = false
                    return
                end
            end
        end
    end
end

local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local EspTab = Window:MakeTab({
    Name = "Esp",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
local SectionEspPlayers = EspTab:AddSection({
    Name = "Esp Player"
})

EspTab:AddToggle({
    Name = "Esp Player",
    Default = false,
    Callback = function(Value)
        _G.EspPlayer = Value
while _G.EspPlayer == true do
        ToggleESPPlayer()
wait(.0000000000000001)
end
    end    
})

EspTab:AddColorpicker({
	Name = "Color Esp Player",
	Default = playerColor,
	Callback = function(Value)
		playerColor = Value
ToggleESPPlayer()
	end	  
})

local SectionEspBot = EspTab:AddSection({
    Name = "Esp Bot"
})

local SectionEspCandys = EspTab:AddSection({
    Name = "Esp Candys"
})

EspTab:AddToggle({
    Name = "Esp Candys",
    Default = false,
    Callback = function(Value)
        _G.EspCandys = Value
while _G.EspCandys == true do
        ToggleESPCandy()
wait(.00000000001)
end
    end    
})

EspTab:AddColorpicker({
    Name = "Color Esp Candy",
    Default = candyColor,
    Callback = function(Value)
        candyColor = Value
      ToggleESPCandy() -- Mise à jour de l'ESP des bonbons avec la nouvelle couleur

    end	  
})

local SectionPlayer = MainTab:AddSection({
    Name = "Player"
})

MainTab:AddToggle({
    Name = "Active Speed",
    Default = false,
    Callback = function(Value)
        _G.ActiveSpeed = Value
        while _G.ActiveSpeed == true do
            local player = game.Players.LocalPlayer
    local HumanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    local Humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
Humanoid.WalkSpeed = _G.Speed
        end
    end    
})

MainTab:AddSlider({
	Name = "Player Speed",
	Min = 0,
	Max = 10000,
	Default = 100,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Speed",
	Callback = function(Value)
		_G.Speed = Value
	end    
})


MainTab:AddToggle({
    Name = "Active JumpPower",
    Default = false,
    Callback = function(Value)
        _G.ActiveJumpPower = Value
        while _G.ActiveJumpPower == true do
            local player = game.Players.LocalPlayer
    local HumanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    local Humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
Humanoid.JumpPower = _G.JumpPower
        end
    end    
})

MainTab:AddSlider({
	Name = "Player Jump Power",
	Min = 0,
	Max = 1000,
	Default = 50,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Jump Power",
	Callback = function(Value)
		_G.JumpPower = Value
	end    
})

local SectionMain = MainTab:AddSection({
    Name = "Auto Farm"
})

MainTab:AddToggle({
    Name = "Auto Farm Win",
    Default = false,
    Callback = function(Value)
        _G.AutoFarmWins = Value
        while _G.AutoFarmWins == true do
            AutoFarmWins()
        end
    end    
})

MainTab:AddToggle({
    Name = "Auto Farm Money",
    Default = false,
    Callback = function(Value)
        _G.AutoFarmMoney = Value
        while _G.AutoFarmMoney == true do
          AutoFarmMoney()
wait(.000000001)
        end
    end    
})

local SectionHalloweenevent = MainTab:AddSection({
    Name = "Halloween Event"
})

MainTab:AddToggle({
    Name = "Auto Farm Candy (with no security)",
    Default = false,
    Callback = function(Value)
        _G.AutoFarmCandysNoSecurity = Value
        while _G.AutoFarmCandysNoSecurity == true do
            AutoFarmCandysNoSecurity()
            wait(0.5)
        end
    end    
})

MainTab:AddToggle({
    Name = "Auto Farm Candy (with security)",
    Default = false,
    Callback = function(Value)
        _G.AutoFarmCandysSecurity = Value
        while _G.AutoFarmCandysSecurity == true do
            AutoFarmCandysSecurity()
            wait(0.5)
        end
    end    
})

-- Vérifie les objets existants et ceux ajoutés dynamiquement
local function CheckForCandy(child)
    if table.find(CandyName, child.Name) then
        if _G.AutoFarmCandysNoSecurity == true then
            AutoFarmCandysNoSecurity()
        elseif _G.AutoFarmCandysSecurity == true then
            AutoFarmCandysSecurity()
        end
    end
end
local SectionBoomBox = MainTab:AddSection({
    Name = "BoomBox"
})

MainTab:AddTextbox({
	Name = "BoomBox",
	Default = "Enter Number Ids",
	TextDisappear = false,
	Callback = function(Value)
		_G.IdsBoomBox = Value
	end	  
})

MainTab:AddToggle({
    Name = "Auto BoomBox Songs",
    Default = false,
    Callback = function(Value)
        _G.AutoBoomBox = Value
        while _G.AutoBoomBox == true do
            game:GetService("ReplicatedStorage").Events.Player.SetBoombox:FireServer(_G.IdsBoomBox)
wait(1)
        end
    end    
})

local SectionMisc = MainTab:AddSection({
    Name = "Misc"
})

MainTab:AddToggle({
    Name = "Auto Respawn",
    Default = false,
    Callback = function(Value)
        _G.AutoRespawn = Value
        while _G.AutoRespawn == true do
            AutoRespawn()
wait(.0001)
        end
    end    
})

MainTab:AddButton({
    Name = "Go To Menu (You Can't Respawn After I Think)",
    Callback = function()
Died()
    end    
})
-- Surveille les nouveaux objets ajoutés dans Workspace
game.Workspace.ChildAdded:Connect(function(child)
CheckForCandy(child)
ToggleESPPlayer()
ToggleESPCandy()
end)
local function AntiKick()
local player = game.Players.LocalPlayer
local HumanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
local Humanoid = player.Character:FindFirstChild("Humanoid")
local GC = getconnections or get_signal_cons
	if GC then
		for i,v in pairs(GC(player.Idled)) do
			if v["Disable"] then
				v["Disable"](v)
			elseif v["Disconnect"] then
				v["Disconnect"](v)
			end
		end
	else
		player.Idled:Connect(function()
			local VirtualUser = game:GetService("VirtualUser")
			VirtualUser:CaptureController()
			VirtualUser:ClickButton2(Vector2.new())
		end)
	end
end
while wait(1) do
AntiKick()
end
OrionLib:Init()

