-- Variables
local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local workspace = game:GetService("Workspace")

-- Supprimer l'ancien GUI si présent
if player.PlayerGui:FindFirstChild("GuiPlayer") then
    player.PlayerGui.GuiPlayer:Destroy()
end

-- Création du GUI
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
screenGui.Name = "GuiPlayer"
screenGui.ResetOnSpawn = false

-- Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0.35, 0, 0.4, 0)
frame.Position = UDim2.new(0.325, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
frame.BackgroundTransparency = 0.25
frame.Visible = false

-- Gradient sur le Frame
local gradient = Instance.new("UIGradient", frame)
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 60, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(90, 90, 90))
}

-- UI Stroke et Coin arrondi pour le Frame
local uistroke = Instance.new("UIStroke", frame)
uistroke.Thickness = 3
uistroke.Color = Color3.fromRGB(20, 20, 20)
uistroke.LineJoinMode = Enum.LineJoinMode.Round

local uicorner = Instance.new("UICorner", frame)
uicorner.CornerRadius = UDim.new(0.1, 0)

-- Bouton pour afficher/masquer le GUI
local closeopen = Instance.new("TextButton", screenGui)
closeopen.Size = UDim2.new(0, 120, 0, 40)
closeopen.Position = UDim2.new(0.5, -60, 0.2, 0)
closeopen.Text = "Toggle Menu"
closeopen.TextColor3 = Color3.fromRGB(255, 255, 255)
closeopen.Font = Enum.Font.GothamBold
closeopen.TextSize = 18
closeopen.Draggable = true
closeopen.BackgroundColor3 = Color3.fromRGB(85, 170, 255)

-- Gradient sur le bouton closeopen
local buttonGradient = Instance.new("UIGradient", closeopen)
buttonGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(85, 170, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(65, 150, 255))
}

local function toggleFrame()
    frame.Visible = not frame.Visible
end

closeopen.MouseButton1Click:Connect(toggleFrame)

-- Scrolling Frame à l'intérieur du Main Frame
local scrollingFrame = Instance.new("ScrollingFrame", frame)
scrollingFrame.Size = UDim2.new(1, 0, 1, 0)
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 800)
scrollingFrame.ScrollBarThickness = 8
scrollingFrame.BackgroundTransparency = 1

-- UIListLayout pour les boutons
local listLayout = Instance.new("UIListLayout", scrollingFrame)
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 10)

-- Fonction d'aide pour créer des boutons
local function createButton(text, parent)
    local button = Instance.new("TextButton", parent)
    button.Size = UDim2.new(1, 0, 0, 50)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 16
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

    -- Gradient sur chaque bouton
    local buttonGradient = Instance.new("UIGradient", button)
    buttonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(70, 70, 70)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 100))
    }

    uistroke:Clone().Parent = button
    uicorner:Clone().Parent = button
    return button
end

-- Création des boutons
local espButton = createButton("ESP Off", scrollingFrame)
local noLagButton = createButton("No Lag Off", scrollingFrame)
local noCooldownPromptButton = createButton("No Cooldown Prompt Off", scrollingFrame)
local fullBrightButton = createButton("Full Bright Off", scrollingFrame)
local godModeButton = createButton("God Mode Off", scrollingFrame)
local autoLootButton = createButton("Auto Loot Off", scrollingFrame)
local flyButton = createButton("Fly Off", scrollingFrame)
local autoHealButton = createButton("Auto Heal Off", scrollingFrame)
local speedBoostButton = createButton("Speed Boost Off", scrollingFrame)

-- Variables de fonctionnalité
local espActive, noLagActive, noCooldownPromptActive, fullBrightActive, godModeActive, autoLootActive, flyActive, autoHealActive, speedBoostActive = false, false, false, false, false, false, false, false, false
local highlightColor = Color3.fromRGB(255, 0, 0)
local highlightTransparency = 0.5
local originalMaterials = {}
local espTargets = {}

-- Variables pour les couleurs
local monsterColor = Color3.fromRGB(255, 0, 0) -- Rouge pour les monstres
local sideroomDupeColor = Color3.fromRGB(255, 0, 0) -- Rouge pour les portes "sideroomdupe"
local itemColor = Color3.fromRGB(255, 165, 0) -- Orange pour les items
local closetColor = Color3.fromRGB(0, 255, 0) -- Vert pour les closets, wardrobes, etc.

-- Variables pour les éléments à surligner
local espMonsters = {"figure_rig", "figure", "rushnew", "ambushmoving", "Screech", "haltmoving", "Rushemoving"}
local espDoors = {"door", "sideroomdupe"}
local espItems = {"gold", "goldpile", "MineGenerator", "fuseobtain", "keyobtain", "rift", "Chest", "Crucifix","Lockpick", "Battery", "FlashLight"}
local espClosets = {"closet","Backdoor_wardrobe","locker_large", "locker_small", "wardrobe"}

-- Fonction pour surligner un modèle avec répétition jusqu'à succès
local function highlightModelWithRetry(model, color)
    local highlight = model:FindFirstChildOfClass("Highlight")
    if not highlight then
        highlight = Instance.new("Highlight", model)
        highlight.FillColor = color
        highlight.FillTransparency = highlightTransparency
        highlight.OutlineTransparency = highlightTransparency
    else
        highlight.FillColor = color -- Mise à jour de la couleur si le Highlight existe déjà
    end

    -- Vérifiez si le BillboardGui existe, sinon créez-en un
    if not model:FindFirstChildOfClass("BillboardGui") then
        local billboard = Instance.new("BillboardGui", model)
        billboard.Adornee = model
        billboard.AlwaysOnTop = true
        billboard.Size = UDim2.new(0, 100, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 2, 0)

        local textLabel = Instance.new("TextLabel", billboard)
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = model.Name
        textLabel.TextColor3 = color -- Texte en fonction de la couleur correspondante

        -- Si c'est une porte, affichez son nom complet
        if model.Name:lower() == "door" then
            textLabel.Text = "Door " .. model.Parent.Parent.Name
        elseif model.Name:lower() == "locker_large" or model.Name:lower() == "wardrobe" or model.Name:lower() == "Backdoor_wardrobe" then
            textLabel.Text = "Closet"
        elseif model.Name:lower() == "locker_small" then
            textLabel.Text = "Locker"
        elseif model.Name:lower() == "fuseobtain" then
            textLabel.Text = "Fuse"
        elseif model.Name:lower() == "keyobtain" then
            textLabel.Text = "Key"
elseif model.Name:lower() == "sideroomdupe" then
            textLabel.Text = "Dupe"
        end

        -- Créer un second BillboardGui pour afficher la distance
        local distanceBillboard = Instance.new("BillboardGui", model)
        distanceBillboard.Adornee = model
        distanceBillboard.AlwaysOnTop = true
        distanceBillboard.Size = UDim2.new(0, 100, 0, 50)
        distanceBillboard.StudsOffset = Vector3.new(0, -2, 0) -- Positionné sous le premier BillboardGui

        local distanceLabel = Instance.new("TextLabel", distanceBillboard)
        distanceLabel.Size = UDim2.new(1, 0, 1, 0)
        distanceLabel.BackgroundTransparency = 1
distanceLabel.Text = "[Coming Soon]"
       distanceLabel.TextColor3 = color

        -- Mettre à jour la distance toutes les fois que le rendu est mis à jour
        end

    -- Ajoutez le modèle à la liste des éléments surlignés pour référence ultérieure
    table.insert(espTargets, model)
end

-- Fonction pour le fonctionnement de l'ESP
-- Fonction de surlignage d'un modèle si nécessaire
local function highlightIfNeeded(model, color)
    if not model:FindFirstChildOfClass("Highlight") then
        highlightModelWithRetry(model, color)
    end
end

-- Fonction pour configurer le surlignage avec la condition espActive
local function setupESPDetection()
    if espActive then
        -- Surlignage des modèles déjà présents dans le workspace
        for _, descendant in ipairs(workspace:GetDescendants()) do
            if descendant:IsA("Model") then
                local lowerName = descendant.Name:lower()

                -- Surligner les monstres
                for _, monsterName in ipairs(espMonsters) do
                    if lowerName == monsterName:lower() then
                        highlightIfNeeded(descendant, monsterColor)
                    end
                end
wait(1)
            
-- Surligner les portes
                for _, doorName in ipairs(espDoors) do
                    if lowerName == doorName:lower() then
                        highlightIfNeeded(descendant, sideroomDupeColor)
                    end
                end

        wait(1)
-- Surligner les items
                for _, itemName in ipairs(espItems) do
                    if lowerName == itemName:lower() then
                        highlightIfNeeded(descendant, itemColor)
                    end
                end
wait(1)
                -- Surligner les placards
                for _, closetName in ipairs(espClosets) do
                    if lowerName == closetName:lower() then
                        highlightIfNeeded(descendant, closetColor)
                    end
                end
            end
        end
wait(1)
        -- Écoute les nouveaux objets ajoutés dans le workspace
        
            end
    else
        -- Supprime tous les surlignages si espActive est désactivé
        for _, target in ipairs(espTargets) do
            local highlight = target:FindFirstChildOfClass("Highlight")
            if highlight then
                highlight:Destroy()
            end
        end
        espTargets = {} -- Réinitialiser la liste des cibles ESP
    end
end

-- Appeler cette fonction pour activer la détection ESP
workspace.DescendantAdded:Connect(function()
    if espActive then
        setupESPDetection()  -- Réexécute la fonction seulement si espActive est vrai
    end
end)

-- Gestion des boutons ESP
espButton.MouseButton1Click:Connect(function()
    espActive = not espActive
    espButton.Text = espActive and "ESP On" or "ESP Off"
end)

-- Fonction pour gérer le No Lag


-- Gestion des boutons No Lag
noLagButton.MouseButton1Click:Connect(function()
    noLagActive = not noLagActive
    noLagButton.Text = noLagActive and "No Lag On" or "No Lag Off"
end)

-- Similaire à No Cooldown Prompt
noCooldownPromptButton.MouseButton1Click:Connect(function()
    noCooldownPromptActive = not noCooldownPromptActive
    noCooldownPromptButton.Text = noCooldownPromptActive and "No Cooldown Prompt On" or "No Cooldown Prompt Off"
end)

-- Gestion de Full Bright
fullBrightButton.MouseButton1Click:Connect(function()
    fullBrightActive = not fullBrightActive
end)

-- Similaire pour God Mode, Auto Loot, etc.
godModeButton.MouseButton1Click:Connect(function()
    godModeActive = not godModeActive
    godModeButton.Text = godModeActive and "God Mode On" or "God Mode Off"
end)

-- Similaire pour Auto Loot
autoLootButton.MouseButton1Click:Connect(function()
    autoLootActive = not autoLootActive
    autoLootButton.Text = autoLootActive and "Auto Loot On" or "Auto Loot Off"
end)

-- Gestion du Fly
flyButton.MouseButton1Click:Connect(function()
    flyActive = not flyActive
    flyButton.Text = flyActive and "Fly On" or "Fly Off"
    if flyActive then
        -- Implémentez votre logique de vol ici
    else
        -- Arrêtez la logique de vol ici
    end
end)

-- Gestion de l'Auto Heal
autoHealButton.MouseButton1Click:Connect(function()
    autoHealActive = not autoHealActive
    autoHealButton.Text = autoHealActive and "Auto Heal On" or "Auto Heal Off"
end)

-- Gestion de la vitesse
speedBoostButton.MouseButton1Click:Connect(function()
    speedBoostActive = not speedBoostActive
    speedBoostButton.Text = speedBoostActive and "Speed Boost On" or "Speed Boost Off"
end)
