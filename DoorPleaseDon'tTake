local door = script.Parent -- La porte (Part qui contient ce script)
local frame = door.Parent:FindFirstChild("Frame") -- Le cadre de la porte

if not frame then
    -- Crée un cadre si aucun n'est trouvé
    frame = Instance.new("Part")
    frame.Name = "Frame"
    frame.Size = Vector3.new(1, 5, 10) -- Ajuste la taille du cadre
    frame.Position = door.Position + Vector3.new(-5, 0, 0) -- Positionne le cadre
    frame.Anchored = true
    frame.Parent = door.Parent
end

-- Création de la charnière (HingeConstraint)
local hinge = Instance.new("HingeConstraint")
hinge.Parent = door

-- Attachement pour la charnière (sur la porte)
local doorAttachment = Instance.new("Attachment")
doorAttachment.Parent = door
doorAttachment.Position = Vector3.new(-door.Size.X / 2, 0, 0) -- Place la charnière sur le bord de la porte
hinge.Attachment0 = doorAttachment

-- Attachement pour la charnière (sur le cadre)
local frameAttachment = Instance.new("Attachment")
frameAttachment.Parent = frame
frameAttachment.Position = Vector3.new(0.5, 0, 0) -- Place la charnière sur le cadre
hinge.Attachment1 = frameAttachment

-- Paramètres de la charnière
hinge.MotorMaxTorque = 0 -- Désactiver le moteur
hinge.LimitsEnabled = true -- Limites d'angle activées
hinge.UpperAngle = 90 -- Angle d'ouverture maximal (90 degrés)
hinge.LowerAngle = 0 -- Angle minimal (fermé)

-- Création du ressort (SpringConstraint)
local spring = Instance.new("SpringConstraint")
spring.Parent = door
spring.Attachment0 = doorAttachment -- Attachement sur la porte
spring.Attachment1 = frameAttachment -- Attachement sur le cadre

-- Paramètres du ressort
spring.Coils = 10 -- Le nombre de tours du ressort
spring.FreeLength = 0 -- Longueur du ressort sans contrainte
spring.Stiffness = 50 -- Rigidité du ressort (ajuste selon le comportement désiré)
spring.Damping = 10 -- Amortissement du ressort pour éviter les oscillations

print("Porte avec charnière et ressort créée !")
