
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Five Nights:Hunted - Script By Iliankytb",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Five Nights:Hunted",
   LoadingSubtitle = "Script By Iliankytb",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = "saver", -- Create a custom folder for your hub/game
      FileName = "K"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local EspTab = Window:CreateTab("Esp", "rewind")
local SettingsTab = Window:CreateTab("Settings", "rewind")

local function CreateEsp(Char,Color,Text,Parent)
if Char then
local NewHighlight = Instance.new("Highlight",Char)
NewHighlight.OutlineColor = Color NewHighlight.FillColor = Color
local NewBiliboard = Instance.new("BillboardGui",Parent)
local NewText = Instance.new("TextLabel",NewBiliboard)
NewText.Text = Text
end
end
local function KeepHighlight(Char)
if Char and Char:FindFirstChildOfClass("Highlight") then
Char:FindFirstChildOfClass("Highlight"):Destroy()
end
end
local EspPlayerToggle = EspTab:CreateToggle({
   Name = "Players Esp(Don't Work Ingame Sometimes)",
   CurrentValue = false,
   Flag = nil, -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  CurrentValue = Value
while CurrentValue do
for _,Players in pairs(Game:GetService("Players"):GetPlayers()) do 
if Players:isA("Player") then
CreateEsp(Players.Character,Color3.fromRGB(255,0,0),"Player: "..Players.Name,Players.Character:FindFirstChild("HumanoidRootPart"))
end
end
task.wait(0.1)
end
for _,Players in pairs(Game:GetService("Players"):GetPlayers()) do 
if Players:isA("Player") then
KeepHighlight(Players.Character)
end end
end,
})
local EspComputerToggle = EspTab:CreateToggle({
   Name = "Computer Esp",
   CurrentValue = false,
   Flag = nil, -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  CurrentValue = Value
while CurrentValue do
for _,Folders in pairs(Game.Workspace:GetChildren()) do 
if Folders:isA("Folder") then 
if Folders:FindFirstChild("Map") then if Folders:FindFirstChild("Map"):FindFirstChild("Tasks") then for _,Computers in pairs(Folders:FindFirstChild("Map"):FindFirstChild("Tasks"):GetChildren()) do if Computers:isA("Model") then CreateEsp(Computers,Color3.fromRGB(255,165,0),"Computer",Computers:FindFirstChild("Screen")) end end end end
end
end
task.wait(0.1)
end
end,
})
local EspLockerToggle = EspTab:CreateToggle({
   Name = "Locker Esp",
   CurrentValue = false,
   Flag = nil, -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  CurrentValue = Value
while CurrentValue do
for _,Folders in pairs(Game.Workspace:GetChildren()) do 
if Folders:isA("Folder") then 
if Folders:FindFirstChild("Map") then if Folders:FindFirstChild("Map"):FindFirstChild("Lockers") then for _,Computers in pairs(Folders:FindFirstChild("Map"):FindFirstChild("Lockers"):GetChildren()) do if Computers:isA("Model") then CreateEsp(Computers,Color3.fromRGB(0,0,255),"Locker",Computers) end end end end
end
end
task.wait(0.1)
end
end,
})
