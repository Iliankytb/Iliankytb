
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Five Nights:Hunted - Script By Iliankytb",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Five Nights:Hunted",
   LoadingSubtitle = "Script By Iliankytb",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = "saver", -- Create a custom folder for your hub/game
      FileName = "K"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
Rayfield:Notify({
   Title = "Cheat Version",
   Content = "V.0.4",
   Duration = 2.5,
   Image = "rewind",
})
local PlayerTab = Window:CreateTab("Player", "rewind")
local EspTab = Window:CreateTab("Esp", "rewind")
local SettingsTab = Window:CreateTab("Settings", "rewind")


local EspPlayers,EspComputer,EspLocker,EspBallPit,ActiveSpeedBoost = false,false,false,false,false

local function CreateEsp(Char,Color,Text,Parent)
if Char then
local NewHighlight = Instance.new("Highlight",Char)
NewHighlight.OutlineColor = Color NewHighlight.FillColor = Color
end
end

local function KeepHighlight(Char,Parent)
if Char and Char:FindFirstChildOfClass("Highlight") then
Char:FindFirstChildOfClass("Highlight"):Destroy()
if Parent:FindFirstChild("BillboardGui") then
Parent:FindFirstChild("BillboardGui"):Destroy()
end
end
end

local EspPlayerToggle = EspTab:CreateToggle({
   Name = "Players Esp",
   CurrentValue = false,
   Flag = "EspPlayer", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  EspPlayers = Value task.spawn(function()
while EspPlayers do
for _,Players in pairs(Game:GetService("Players"):GetPlayers()) do 
if Players:isA("Player") and not Players.Character:FindFirstChildOfClass("Highlight") then
CreateEsp(Players.Character,Color3.fromRGB(255,0,0))
end
end
task.wait(0.1)
end
for _,Players in pairs(Game:GetService("Players"):GetPlayers()) do 
if Players:isA("Player") and  Players.Character:FindFirstChildOfClass("Highlight") then
KeepHighlight(Players.Character,Players.Character:FindFirstChild("Head"))
end end end)
end,
})

local EspComputerToggle = EspTab:CreateToggle({
   Name = "Computer Esp",
   CurrentValue = false,
   Flag = "EspComputer", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  EspComputer = Value task.spawn(function()
while EspComputer do
for _,Folders in pairs(Game.Workspace:GetChildren()) do 
if Folders:isA("Folder") then 
if Folders:FindFirstChild("Map") then if Folders:FindFirstChild("Map"):FindFirstChild("Tasks") then for _,Computers in pairs(Folders:FindFirstChild("Map"):FindFirstChild("Tasks"):GetChildren()) do if Computers:isA("Model") and not Computers:FindFirstChildOfClass("Highlight") then CreateEsp(Computers,Color3.fromRGB(255,165,0),"Computer",Computers:FindFirstChild("Screen")) end end end end
end
end
task.wait(0.1)
end for _,Folders in pairs(Game.Workspace:GetChildren()) do 
if Folders:isA("Folder") then 
if Folders:FindFirstChild("Map") then if Folders:FindFirstChild("Map"):FindFirstChild("Tasks") then for _,Computers in pairs(Folders:FindFirstChild("Map"):FindFirstChild("Tasks"):GetChildren()) do if Computers:isA("Model") and not Computers:FindFirstChildOfClass("Highlight") then KeepHighlight(Computers,Computers:FindFirstChild("Screen")) end end end end
end
end end)
end,
})

local EspLockerToggle = EspTab:CreateToggle({
   Name = "Locker Esp",
   CurrentValue = false,
   Flag = "EspLocker", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  EspLocker = Value task.spawn(function()
while Esplocker do
for _,Folders in pairs(Game.Workspace:GetChildren()) do 
if Folders:isA("Folder") then 
if Folders:FindFirstChild("Map") then if Folders:FindFirstChild("Map"):FindFirstChild("Lockers") then for _,Computers in pairs(Folders:FindFirstChild("Map"):FindFirstChild("Lockers"):GetChildren()) do if Computers:isA("Model") and not Computers:FindFirstChildOfClass("Highlight") then CreateEsp(Computers,Color3.fromRGB(0,0,255),"Locker",Computers) end end end end
end
end
task.wait(0.1)
end for _,Folders in pairs(Game.Workspace:GetChildren()) do 
if Folders:isA("Folder") then 
if Folders:FindFirstChild("Map") then if Folders:FindFirstChild("Map"):FindFirstChild("Lockers") then for _,Computers in pairs(Folders:FindFirstChild("Map"):FindFirstChild("Lockers"):GetChildren()) do if Computers:isA("Model") and Computers:FindFirstChildOfClass("Highlight") then KeepHighlight(Computers,Computers) end end end end
end
end end)
end,
})

local EspBallPitToggle = EspTab:CreateToggle({
   Name = "Ball Pit Esp",
   CurrentValue = false,
   Flag = "EspBallPit", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  EspBallpit = Value task.spawn(function()
while EspBallpit do
for _,Folders in pairs(Game.Workspace:GetChildren()) do 
if Folders:isA("Folder") then 
if Folders:FindFirstChild("Map") then if Folders:FindFirstChild("Map"):FindFirstChild("Hooks") then for _,Computers in pairs(Folders:FindFirstChild("Map"):FindFirstChild("Hooks"):GetChildren()) do if Computers:isA("Model") and not Computers:FindFirstChildOfClass("Highlight") then CreateEsp(Computers,Color3.fromRGB(255,176,0),"Locker",Computers) end end end end
end
end
task.wait(0.1)
end for _,Folders in pairs(Game.Workspace:GetChildren()) do 
if Folders:isA("Folder") then 
if Folders:FindFirstChild("Map") then if Folders:FindFirstChild("Map"):FindFirstChild("Hooks") then for _,Computers in pairs(Folders:FindFirstChild("Map"):FindFirstChild("Hooks"):GetChildren()) do if Computers:isA("Model") and Computers:FindFirstChildOfClass("Highlight") then KeepHighlight(Computers,Computers) end end end end
end
end end)
end,
})
local ValueSpeed = 16
local PlayerSpeedSlider = PlayerTab:CreateSlider({
   Name = "Player Speed(max 21 for not be a exploiter) ",
   Range = {0, 21},
   Increment = 1,
   Suffix = "Speeds",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
CurrentValue = Value
ValueSpeed = Value
end,  ValueSpeed = CurrentValue,
})

local PlayerActiveModifyingSpeedToggle = PlayerTab:CreateToggle({
   Name = "Active Modifying Player Speed",
   CurrentValue = false,
   Flag = "ButtonSpeed", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActiveSpeedBoost = Value task.spawn(function()
while ActiveSpeedBoost do
Game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = ValueSpeed
task.wait(0.1)
end end)
end,
})
local ButtonUnloadCheat = SettingsTab:CreateButton({
   Name = "Unload Cheat",
   Callback = function()
  Rayfield:Destroy()
end,
})
Rayfield:LoadConfiguration()
