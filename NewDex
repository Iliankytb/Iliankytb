-- Fonction utilitaire pour créer des éléments GUI
local function createUIElement(className, properties, parent)
    local element = Instance.new(className)
    for prop, value in pairs(properties) do
        element[prop] = value
    end
    element.Parent = parent
    return element
end

-- Création d'un ScreenGui pour contenir le GUI
local player = game.Players.LocalPlayer
local screenGui = createUIElement("ScreenGui", {}, player:WaitForChild("PlayerGui"))

-- Création de l'Explorateur
local explorerFrame = createUIElement("Frame", {
    Size = UDim2.new(0.2, 0, 0.5, 0),
    Position = UDim2.new(0.8, 0, 0.1, 0),
    BackgroundColor3 = Color3.fromRGB(45, 45, 45),
}, screenGui)

-- Titre de l'Explorateur
local explorerTitle = createUIElement("TextLabel", {
    Size = UDim2.new(1, 0, 0.1, 0),
    Position = UDim2.new(0, 0, 0, 0),
    BackgroundColor3 = Color3.fromRGB(35, 35, 35),
    Text = "Explorer",
    TextColor3 = Color3.fromRGB(255, 255, 255),
    TextScaled = true
}, explorerFrame)

-- Zone de contenu de l'Explorateur (où les objets vont apparaître)
local explorerContent = createUIElement("ScrollingFrame", {
    Size = UDim2.new(1, 0, 0.9, 0),
    Position = UDim2.new(0, 0, 0.1, 0),
    BackgroundColor3 = Color3.fromRGB(50, 50, 50),
    ScrollBarThickness = 8
}, explorerFrame)

-- Création du panneau de Propriétés
local propertiesFrame = createUIElement("Frame", {
    Size = UDim2.new(0.2, 0, 0.4, 0),
    Position = UDim2.new(0.8, 0, 0.6, 0),
    BackgroundColor3 = Color3.fromRGB(45, 45, 45),
}, screenGui)

-- Titre du panneau de Propriétés
local propertiesTitle = createUIElement("TextLabel", {
    Size = UDim2.new(1, 0, 0.1, 0),
    Position = UDim2.new(0, 0, 0, 0),
    BackgroundColor3 = Color3.fromRGB(35, 35, 35),
    Text = "Properties",
    TextColor3 = Color3.fromRGB(255, 255, 255),
    TextScaled = true
}, propertiesFrame)

-- Zone de contenu du panneau de Propriétés
local propertiesContent = createUIElement("ScrollingFrame", {
    Size = UDim2.new(1, 0, 0.9, 0),
    Position = UDim2.new(0, 0, 0.1, 0),
    BackgroundColor3 = Color3.fromRGB(50, 50, 50),
    ScrollBarThickness = 8
}, propertiesFrame)

-- Fonction pour ajouter des objets à l'explorateur
local function ajouterObjetExplorateur(nom)
    local objetLabel = createUIElement("TextButton", {
        Size = UDim2.new(1, 0, 0.05, 0),
        Text = nom,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundColor3 = Color3.fromRGB(60, 60, 60),
    }, explorerContent)

    -- Lorsque l'objet est cliqué, on affiche ses propriétés
    objetLabel.MouseButton1Click:Connect(function()
        propertiesContent:ClearAllChildren()

        -- Ajout d'exemple de propriétés
        createUIElement("TextLabel", {
            Size = UDim2.new(1, 0, 0.1, 0),
            Text = "Name: " .. nom,
            TextColor3 = Color3.fromRGB(255, 255, 255),
            BackgroundColor3 = Color3.fromRGB(70, 70, 70),
        }, propertiesContent)

        createUIElement("TextLabel", {
            Size = UDim2.new(1, 0, 0.1, 0),
            Text = "Position: (X, Y, Z)",
            TextColor3 = Color3.fromRGB(255, 255, 255),
            BackgroundColor3 = Color3.fromRGB(70, 70, 70),
        }, propertiesContent)
    end)
end

-- Bouton pour ouvrir/fermer l'Explorateur
local toggleButton = createUIElement("TextButton", {
    Size = UDim2.new(0.1, 0, 0.05, 0),
    Position = UDim2.new(0.95, -60, 0, 20),
    Text = "Open",
    BackgroundColor3 = Color3.fromRGB(255, 0, 0),
    TextColor3 = Color3.fromRGB(255, 255, 255),
}, screenGui)

-- Fonction pour basculer l'affichage de l'Explorateur
local isOpen = false
toggleButton.MouseButton1Click:Connect(function()
    isOpen = not isOpen
    explorerFrame.Visible = isOpen
    propertiesFrame.Visible = isOpen
    toggleButton.Text = isOpen and "Close" or "Open"
end)

-- Ajouter des objets d'exemple à l'explorateur
ajouterObjetExplorateur("Workspace")
ajouterObjetExplorateur("Camera")
ajouterObjetExplorateur("Lighting")
ajouterObjetExplorateur("Terrain")

-- Fonction pour lister les objets petit à petit
local function listObjectsSlowly(service)
    local objects = service:GetDescendants()
    local index = 1

    local function addNextObject()
        if index <= #objects then
            ajouterObjetExplorateur(objects[index].Name)
            index = index + 1
            task.wait(0.5) -- Ajoute 1 objet toutes les 0,5 secondes
            addNextObject()
        end
    end

    addNextObject()
end

-- Lister les objets dans les services importants petit à petit
listObjectsSlowly(workspace)
listObjectsSlowly(game.Players)
listObjectsSlowly(game.ReplicatedFirst)
listObjectsSlowly(game.StarterPack)
listObjectsSlowly(game.StarterPlayer)
listObjectsSlowly(game.ServerStorage)
listObjectsSlowly(game.StarterGui)
listObjectsSlowly(game.ReplicatedStorage)

-- Mettre à jour dynamiquement si de nouveaux objets sont ajoutés
local function onDescendantAdded(object)
    ajouterObjetExplorateur(object.Name)
end

workspace.DescendantAdded:Connect(onDescendantAdded)
game.StarterGui.DescendantAdded:Connect(onDescendantAdded)
game.ReplicatedStorage.DescendantAdded:Connect(onDescendantAdded)
game.ServerStorage.DescendantAdded:Connect(onDescendantAdded)
game.Players.DescendantAdded:Connect(onDescendantAdded)

-- Mise à jour lorsque des objets sont supprimés
local function onDescendantRemoving(object)
    for _, label in ipairs(explorerContent:GetChildren()) do
        if label.Text == object.Name then
            label:Destroy()
            break
        end
    end
end

workspace.DescendantRemoving:Connect(onDescendantRemoving)
game.StarterGui.DescendantRemoving:Connect(onDescendantRemoving)
game.ReplicatedStorage.DescendantRemoving:Connect(onDescendantRemoving)
game.ServerStorage.DescendantRemoving:Connect(onDescendantRemoving)
game.Players.DescendantRemoving:Connect(onDescendantRemoving)
