local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/Zentrix"))()
		
library:CreateWindow({
	Title = "Pig 64 - By Iliankytb",-- Title of the script
	Theme = "Default",--View more theme in my dicord server!
	Icon = 0,-- 0 = no icon or add number
	Intro = false,--Intro or no
	IntroTitle = "Zentrix Library Testing",--the intro title
	KeyPC = Enum.KeyCode.K,--the key for pc for Open/close the frame
	Data = {
		EnableSavingData = true,--Enabling data saver or no
		DisableNotifyingLoadedData = false,--set it to true for disable the notify when loaded data
		FolderName = "SaverPig64",--Folder Name,you can change it
		FileName = "Iliankytb",-- File name for the data saver,you can change it
	},
	Discord = {
		Enabled = false,--enable to copy the discord
		DiscordLink = "https://discord.gg/E2TqYRsRP4",-- put the entire Link of discord
		RememberJoin = true,-- Set this ti false to make them copy the link every time they load the script
		Duration = 5,-- 5 is the default you can change the number only for remember join
	},
	KeySystem = false,--Key System or no
	KeySettings = {
		Title = "Zentrix Library Testing Key System",--Title of the key(just like that)
		Note = "the key is Zentrix",-- The method for obtaining
		FileName = "Key",-- File name or no for saving the key
		SaveKey = true,-- saving the key or no
		GrabKeyFromSite = false,--Coming soon
		Key = {"Zentrix"},-- the name you can add many name, Exemple "Key","Key2" or you can add a function to add key but i don't really know
		AddGetKeyButton = false,
		AddDiscordButton = true,
		DiscordLink = "NoInviteLink",
		GetKeyLink = "NoKeyLink",
	},
}, function(window)
	local AutoFarmTab = window:CreateTab("AutoFarm",0)-- Tabs , 0 = no icon or add number
	local DiscordTab = window:CreateTab("Discord",0)-- Tabs , 0 = no icon or add number
local SettingsTab = window:CreateTab("Settings",0)
local AutoFarmStick,AutoFarmWallet,AutoFarmToken,AutoFarmTickets,AutoFarmSewersCollectable,AutoFarmPierCollectable,AutoFarmOdysseyCollectable,AutoFarmOilsCan,AutoFarmJewelry,AutoFarmBills,AutoFarmBunkerCollectable = false,false,false,false,false,false,false,false,false,false,false
	local ButonDiscordLink = DiscordTab:AddButton({
		Text = "Discord Link",
		Name = "Button",
		Callback = function() 	
			library:CopyText("https://discord.gg/E2TqYRsRP4")
		end
	})
	--Toggle--
	local AFS = AutoFarmTab:AddToggle({
		Text = "AutoFarm Stick",
		Name = "AFS",
		Flag = "AFS",--Put a name flag for save data if you enabled saving data
		Default = false,
		Callback = function(state)
AutoFarmStick = state
task.spawn(function()
while AutoFarmStick do
for _, p in pairs(workspace.Collectables.Sticks:GetChildren()) do
if p then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p.Stick.CFrame
end
end
wait(0.1)
end
end)
		end
	})
	local AFW = AutoFarmTab:AddToggle({
		Text = "AutoFarm Wallet",
		Name = "AFW",
		Flag = "AFW",--Put a name flag for save data if you enabled saving data
		Default = false,
		Callback = function(state)
AutoFarmWallet = state
task.spawn(function()
while AutoFarmWallet do
for _, p in pairs(workspace.Collectables.Wallets:GetChildren()) do
if p then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p.Wallet.CFrame
end
end
wait(0.1)
end
end)
		end
	})
	local AFTK = AutoFarmTab:AddToggle({
		Text = "AutoFarm Tokens",
		Name = "AFTK",
		Flag = "AFTK",--Put a name flag for save data if you enabled saving data
		Default = false,
		Callback = function(state)
AutoFarmToken = state
task.spawn(function()
while AutoFarmToken do
for _, p in pairs(workspace.Collectables.Tokens:GetChildren()) do
if not AutoFarmToken then break end
if p then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p:FindFirstChildOfClass("MeshPart").CFrame
wait(0.1)
end
end
wait(0.1)
end
end)
		end
	})
	local AFTC = AutoFarmTab:AddToggle({
		Text = "AutoFarm Tickets",
		Name = "AFTC",
		Flag = "AFTC",--Put a name flag for save data if you enabled saving data
		Default = false,
		Callback = function(state)
AutoFarmTickets = state
task.spawn(function()
while AutoFarmTickets do
for _, p in pairs(workspace.Collectables.Tickets:GetChildren()) do
if p then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p:FindFirstChildOfClass("MeshPart").CFrame
end
end
wait(0.1)
end
end)
		end
	})
local AFSC = AutoFarmTab:AddToggle({
		Text = "AutoFarm Sewers Collectables",
		Name = "AFSC",
		Flag = "AFSC",--Put a name flag for save data if you enabled saving data
		Default = false,
		Callback = function(state)
AutoFarmSewersCollectable = state
task.spawn(function()
while AutoFarmSewersCollectable do
for _, p in pairs(workspace.Collectables.SewerCollectables:GetChildren()) do
if p then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p:FindFirstChildOfClass("MeshPart").CFrame
end
end
wait(0.1)
end
end)
		end
	})
local AFPC = AutoFarmTab:AddToggle({
		Text = "AutoFarm Pier Collectables",
		Name = "AFPC",
		Flag = "AFPC",--Put a name flag for save data if you enabled saving data
		Default = false,
		Callback = function(state)
AutoFarmPierCollectable = state
task.spawn(function()
while AutoFarmPierCollectable do
for _, p in pairs(workspace.Collectables.PierCollectables:GetChildren()) do
if p then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p:FindFirstChildOfClass("MeshPart").CFrame
end
end
wait(0.1)
end
end)
		end
	})
local AFOC = AutoFarmTab:AddToggle({
		Text = "AutoFarm Oils Can",
		Name = "AFOC",
		Flag = "AFOC",--Put a name flag for save data if you enabled saving data
		Default = false,
		Callback = function(state)
AutoFarmOilsCan = state
task.spawn(function()
while AutoFarmOilsCan do
for _, p in pairs(workspace.Collectables.OilCans:GetChildren()) do
if p then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p.Settings:FindFirstChildOfClass("Part").CFrame
end
end
wait(0.1)
end
end)
		end
	})
local AFODC = AutoFarmTab:AddToggle({
		Text = "AutoFarm Odyssey",
		Name = "AFODC",
		Flag = "AFODC",--Put a name flag for save data if you enabled saving data
		Default = false,
		Callback = function(state)
AutoFarmOdysseyCollectable = state
task.spawn(function()
while AutoFarmOdysseyCollectable do
for _, p in pairs(workspace.Collectables.OdysseyCollectables:GetChildren()) do
if p then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p:FindFirstChildOfClass("MeshPart").CFrame
end
end
wait(0.1)
end
end)
		end
	})
local AFJ = AutoFarmTab:AddToggle({
		Text = "AutoFarm Jewelry",
		Name = "AFJ",
		Flag = "AFJ",--Put a name flag for save data if you enabled saving data
		Default = false,
		Callback = function(state)
AutoFarmJewelry = state
task.spawn(function()
while AutoFarmJewelry do
for _, p in pairs(workspace.Collectables.Jewelry:GetChildren()) do
if p then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p:FindFirstChildOfClass("MeshPart").CFrame
end
end
for _, p in pairs(workspace.Collectables.Jewelry:GetChildren()) do
if p then
task.spawn(function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p.Settings:FindFirstChildOfClass("MeshPart").CFrame
end)
end
end
wait(0.1)
end
end)
		end
	})
local AFBC = AutoFarmTab:AddToggle({
		Text = "AutoFarm Bunker Collectables",
		Name = "AFBC",
		Flag = "AFBC",--Put a name flag for save data if you enabled saving data
		Default = false,
		Callback = function(state)
AutoFarmBunkerCollectable = state
task.spawn(function()
while AutoFarmBunkerCollectable do
for _, p in pairs(workspace.Collectables.BunkerCollectables:GetChildren()) do
if p then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p:FindFirstChildOfClass("MeshPart").CFrame
end
end
wait(0.1)
end
end)
		end
	})
local AFBills = AutoFarmTab:AddToggle({
		Text = "AutoFarm Bills",
		Name = "AFBills",
		Flag = "AFBills",--Put a name flag for save data if you enabled saving data
		Default = false,
		Callback = function(state)
AutoFarmBills = state
task.spawn(function()
while AutoFarmBills do
for _, p in pairs(workspace.Collectables.Bills:GetChildren()) do
if not AutoFarmBills then break end
if p then
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = p:FindFirstChildOfClass("Part").CFrame
wait(0.1)
end
end)
end
wait(0.1)
end
end)
		end
	})
	local ChangeThemeDropdown = SettingsTab:AddDropdown({
		Text = "Change Theme:",
		Name = "Dropdown2",
		Options = {"Default", "Light", "RedDark","BlueNeon","GreenMatrix","PurpleDream","Sunset",
		"Ocean","Toxic","Storm","LimePop","Cyber","Chocolate","RoseGold","CottonCandy","NightSky","Steel",
			"GoldLux","Ice","TealWave","FrostFire","DarkMatter","Lava","PinkCandy","Sakura","DeepSpace","Skyline","Crimson"
			,"Desert","Camo","Plasma","Arctic","Slate","Vaporwave"
			
		},
		Default = "Default",
		MultiSelect = false,
		Flag = "Dropdown2", --Put a name flag for save data if you enabled saving data
		Callback = function(choice)
window:ChangeTheme(choice)
		end
	})



	--Loading Data--
	library:LoadData()--Add this if you want to load data and everytime at bottom of your code
end)
