local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local RunService = game:GetService("RunService")
-- Variables globales
local workspace = game:GetService("Workspace")
local originalLightingSettings = {
    Brightness = game.Lighting.Brightness,
    Ambient = game.Lighting.Ambient,
    OutdoorAmbient = game.Lighting.OutdoorAmbient
}

local function createUIElement(className, parent, properties)
	local element = Instance.new(className)
	element.Parent = parent
	for prop, value in pairs(properties) do
		element[prop] = value
	end
	return element
end


local Gui = Instance.new("ScreenGui",player.PlayerGui)
Gui.Enabled = true
Gui.ResetOnSpawn = false

local function createButton(text, parent)
	local button = createUIElement("TextButton", parent, {
		Size = UDim2.new(0.90, 0, 0, 50),
		Text = text,
		TextColor3 = Color3.fromRGB(255, 255, 255),
		Font = Enum.Font.GothamBold,
		TextSize = 16,
		BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	})
	createUIElement("UIGradient", button, {
		Color = ColorSequence.new{
			ColorSequenceKeypoint.new(0, Color3.fromRGB(70, 70, 70)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 100))
		}
	})

	createUIElement("UIStroke", button, {
		Thickness = 2,
		Color = Color3.fromRGB(20, 20, 20),
		LineJoinMode = Enum.LineJoinMode.Round
	})

	createUIElement("UICorner", button, { CornerRadius = UDim.new(0.15, 0) })


	return button
end

local ToggleFrameButton = createUIElement("TextButton", Gui, {
	Size = UDim2.new(0, 100, 0, 25),
	Position = UDim2.new(0.85, 0, 0.05, 0),
	Text = "Toggle Cheat Menu",
	TextColor3 = Color3.fromRGB(255, 255, 255),
	Font = Enum.Font.GothamBold,
	TextSize = 15,
	BackgroundColor3 = Color3.fromRGB(85, 170, 255)
})

local Frame = Instance.new("Frame", Gui)
Frame.Size = UDim2.new(0.5, 0, 0.5, 0)
Frame.Position = UDim2.new(0.25, 0, 0.25, 0)
Frame.BackgroundTransparency = 0.2  -- Transparence légère
Frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)  -- Couleur plus douce
Frame.BorderMode = Enum.BorderMode.Middle
Frame.Visible = true

-- Ajout d'une ombre portée (Frame)
local shadow = Instance.new("ImageLabel", Frame)
shadow.Size = UDim2.new(1, 20, 1, 20)
shadow.Position = UDim2.new(-0.05, 0, -0.05, 0)
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://1316045217"  -- ID pour un effet d'ombre
shadow.ImageColor3 = Color3.new(0, 0, 0)
shadow.ImageTransparency = 0.5  -- Légère transparence pour l'ombre

-- Bordure externe améliorée (Frame)
local UiStroke = Instance.new("UIStroke", Frame)
UiStroke.Thickness = 1.5  -- Bordure fine
UiStroke.Color = Color3.fromRGB(80, 150, 250)  -- Bleu clair et doux
UiStroke.LineJoinMode = Enum.LineJoinMode.Round

-- Ajout de coins arrondis (Frame)
local UiCorner = Instance.new("UICorner", Frame)
UiCorner.CornerRadius = UDim.new(0, 15)  -- Coins plus arrondis

-- Frame pour Scrolling (FrameScroll)
local FrameScroll = Instance.new("Frame", Frame)
FrameScroll.Size = UDim2.new(0.5, 0, 1, 0)
FrameScroll.Position = UDim2.new(0, 0, 0, 0)
FrameScroll.BackgroundTransparency = 1
FrameScroll.Visible = true

local shadow1 = Instance.new("ImageLabel", FrameScroll)
shadow1.Size = UDim2.new(1, 20, 1, 20)
shadow1.Position = UDim2.new(-0.05, 0, -0.05, 0)
shadow1.BackgroundTransparency = 1
shadow1.Image = "rbxassetid://1316045217"  -- ID pour un effet d'ombre
shadow1.ImageColor3 = Color3.new(0, 0, 0)
shadow1.ImageTransparency = 0.5  -- Légère transparence pour l'ombre

-- Scrolling Frame
local ScrollingFrameScroll = Instance.new("ScrollingFrame", FrameScroll)
ScrollingFrameScroll.Size = UDim2.new(1, 0, 1, 0)
ScrollingFrameScroll.Position = UDim2.new(0, 0, 0, 0)
ScrollingFrameScroll.BackgroundTransparency = 1
ScrollingFrameScroll.Visible = true
ScrollingFrameScroll.CanvasSize = UDim2.new(0, 0, 0, 500)

-- Ajout d'une mise en page (UIListLayout)
local UiLayoutScrollingFrameScroll = Instance.new("UIListLayout", ScrollingFrameScroll)
UiLayoutScrollingFrameScroll.Padding = UDim.new(0, 10)
UiLayoutScrollingFrameScroll.SortOrder = Enum.SortOrder.LayoutOrder

-- Frame principal (FrameMain)
local FrameMain = Instance.new("Frame", Frame)
FrameMain.Size = UDim2.new(0.5, 0, 1, 0)
FrameMain.Position = UDim2.new(0.5, 0, 0, 0)
FrameMain.BackgroundTransparency = 1  -- Plus de transparence pour un effet élégant
FrameMain.BackgroundColor3 = Color3.fromRGB(45, 45, 45)  -- Couleur légèrement plus claire
FrameMain.Visible = true


-- Scrolling Frame principal (ScrollingFrameMain)
local ScrollingFrameMain = Instance.new("ScrollingFrame", FrameMain)
ScrollingFrameMain.Size = UDim2.new(1, 0, 1, 0)
ScrollingFrameMain.Position = UDim2.new(0, 0, 0, 0)
ScrollingFrameMain.BackgroundTransparency = 1
ScrollingFrameMain.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
ScrollingFrameMain.Visible = true
ScrollingFrameMain.CanvasSize = UDim2.new(0, 0, 0, 1000)

local ScrollingFrameEsp = Instance.new("ScrollingFrame",FrameMain)
ScrollingFrameEsp.Size = UDim2.new(1, 0, 1, 0)
ScrollingFrameEsp.Position = UDim2.new(0, 0, 0, 0)
ScrollingFrameEsp.BackgroundTransparency = 1
ScrollingFrameEsp.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
ScrollingFrameEsp.Visible = false
ScrollingFrameEsp.CanvasSize = UDim2.new(0, 0, 0, 1000)

local ScrollingFramePlayer = Instance.new("ScrollingFrame",FrameMain)
ScrollingFramePlayer.Size = UDim2.new(1, 0, 1, 0)
ScrollingFramePlayer.Position = UDim2.new(0, 0, 0, 0)
ScrollingFramePlayer.BackgroundTransparency = 1
ScrollingFramePlayer.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
ScrollingFramePlayer.Visible = false
ScrollingFramePlayer.CanvasSize = UDim2.new(0, 0, 0, 1000)

-- Ajout d'un ListLayout pour le scrolling principal
local UiLayoutScrollingFrameMain2 = Instance.new("UIListLayout", ScrollingFrameMain)
UiLayoutScrollingFrameMain2.Padding = UDim.new(0, 10)
UiLayoutScrollingFrameMain2.SortOrder = Enum.SortOrder.LayoutOrder

-- Ajout de coins arrondis et bordure au Scrolling Frame principal
local UiCornerMain2 = Instance.new("UICorner", ScrollingFrameMain)
UiCornerMain2.CornerRadius = UDim.new(0, 12)

local UiStrokeMain2 = Instance.new("UIStroke", ScrollingFrameMain)
UiStrokeMain2.Thickness = 1.5  -- Bordure fine
UiStrokeMain2.Color = Color3.fromRGB(60, 130, 220)  -- Couleur adoucie
UiStrokeMain2.LineJoinMode = Enum.LineJoinMode.Round

local UiLayoutScrollingFrameEsp = Instance.new("UIListLayout", ScrollingFrameEsp)
UiLayoutScrollingFrameEsp.Padding = UDim.new(0, 10)
UiLayoutScrollingFrameEsp.SortOrder = Enum.SortOrder.LayoutOrder

local UiLayoutScrollingFramePlayer = Instance.new("UIListLayout", ScrollingFramePlayer)
UiLayoutScrollingFramePlayer.Padding = UDim.new(0, 10)
UiLayoutScrollingFramePlayer.SortOrder = Enum.SortOrder.LayoutOrder

local function showSection(sectionFrame)
	ScrollingFrameMain.Visible = false
	ScrollingFrameEsp.Visible = false
	ScrollingFramePlayer.Visible = false
	sectionFrame.Visible = true
end

local EspCloset,PromptDistanceV,FullBrightV,ToggleCheat,AutoLootV,EspDoor,EspPlayer,EspItem,EspMonsters,NoCooldownPrompt,MonsterNotifV,EspGuide,NoLagV = false,false,false,false,false,false,false,false,false,false,false,false,false
local MainButton = createButton("Main",ScrollingFrameScroll)
local EspButton = createButton("Esp",ScrollingFrameScroll)
local PlayerButton = createButton("Player",ScrollingFrameScroll)
local ItemDupeButton = createButton("Item Dupe",ScrollingFrameScroll)
local SettingButton = createButton("Setting",ScrollingFrameScroll)
local InfoButton = createButton("Information",ScrollingFrameScroll)
local RemoveUiButton = createButton("Remove Ui",ScrollingFrameScroll)
local EspDoorButton = createButton("Esp Door Off",ScrollingFrameEsp)
local EspClosetButton = createButton("Esp Closet Off",ScrollingFrameEsp)
local EspPlayerButton = createButton("Esp Player Off",ScrollingFrameEsp)
local EspItemButton = createButton("Esp Item Off",ScrollingFrameEsp)
local EspMonstersButton = createButton("Esp Entities Off",ScrollingFrameEsp)
local NoCooldownButton = createButton("No Cooldown Prompt Off",ScrollingFrameMain)
local FullBrightButton = createButton("FullBright Off",ScrollingFrameMain)
local BigDistancePromptButton = createButton("Big Distance Prompt Off",ScrollingFrameMain)
local AutoCollectButton = createButton("Auto Loot Off",ScrollingFrameMain)
local EspGuidingLightButton = createButton("Esp Guiding Light Off(Coming Soon)",ScrollingFrameEsp)
local NoSeekButton = createButton("Delete Seek Toggle",ScrollingFrameMain)
local NoLagButton = createButton("No Lag Off",ScrollingFrameMain)
local NotifMonstersButton = createButton("Notifs Monster Off (Coming Soon)",ScrollingFrameMain)
local SpeedBoostButton = createButton("Speed Boost Off",ScrollingFramePlayer)
local BypassSpeedButton = createButton("Bypass Speed",ScrollingFramePlayer)
local object_name_substrings_Monsters = {"rushnew","ambushmoving","giggle","grumble","screech","figurerig","seekrig","gloombat","lookman","haltmoving","a90","a60","a120"}

local function ToggleFrame()
	ToggleCheat = not ToggleCheat
	if ToggleCheat then
		Frame.Visible = true
		shadow.Visible = true
		ToggleFrameButton.Interactable = false
		Frame:TweenPosition(UDim2.new(0.25, 0, 0.25, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
		wait(1)
		ToggleFrameButton.Interactable = true
	else
		ToggleFrameButton.Interactable = false
		Frame:TweenPosition(UDim2.new(0.25, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
		wait(1)
		Frame.Visible = false
		ToggleFrameButton.Interactable = true
		shadow.Visible = false
	end
end

local function AddHightlightModelCloset(object)
		-- Check if the object already has a Highlight
		if not object:FindFirstChildOfClass("Highlight") then
			local highlight = Instance.new("Highlight")
			highlight.FillColor = Color3.fromRGB(85, 170, 0)
			highlight.OutlineColor = Color3.fromRGB(85, 255, 127)
			highlight.FillTransparency = 0.75
			highlight.OutlineTransparency = 0.75
			highlight.Name = object.Name
			highlight.Parent = object
		end

		-- Check if the object already has a BillboardGui
		if not object:FindFirstChildOfClass("BillboardGui") then
			local billboard = Instance.new("BillboardGui")
			billboard.Size = UDim2.new(0.100, 0, 0.50, 0)
		billboard.MaxDistance = 50
			billboard.StudsOffset = Vector3.new(0, 0, 0)
			billboard.Enabled = true
			billboard.ResetOnSpawn = false
			billboard.AlwaysOnTop = true
			billboard.Name = object.Name
			billboard.Parent = object

			local textLabel = Instance.new("TextLabel")
			textLabel.Size = UDim2.new(1, 0, 1, 0)
			textLabel.BackgroundTransparency = 1
			textLabel.TextColor3 = Color3.fromRGB(85, 255, 0)
			textLabel.Parent = billboard
		end
end

local function UpdateClosetDistance(object)
    for _, object in pairs(workspace:GetDescendants()) do
        if object:IsA("BillboardGui") then
            local textLabel = object.TextLabel

            if object.Parent:IsA("Model") then
                local distance = (humanoidRootPart.Position - object.Parent:GetPivot().Position).Magnitude
                textLabel.Text = object.Name.." [Distance: " .. math.floor(distance) .. " Studs]"
            end
        end
    end
end


local function ClearHightlightModelCloset(Obj)
	for _, Obj in pairs(workspace:GetDescendants()) do
		if Obj:IsA("Highlight") or Obj:IsA("BillboardGui") then
			if Obj.Name:lower() == "wardrobe" or Obj.Name:lower() == "backdoor_wardrobe" or Obj.Name:lower() == "bed" or Obj.Name:lower() == "beds" then
		Obj:Destroy()
		end
		end
		end
end

local function HightLightModelsCloset()
	EspCloset = not EspCloset
	if EspCloset then
		EspClosetButton.Text = "Esp Closet On"
	local object_name_substrings = {"wardrobe","backdoor_wardrobe","bed","beds"}
	for _, object in pairs(workspace:GetDescendants()) do
		if object:IsA("Model") then
			for _, substring in pairs(object_name_substrings) do
				if string.find(object.Name:lower(), substring) then
					AddHightlightModelCloset(object)
					UpdateClosetDistance(object)
				end
				end
			end
	end
	else
		ClearHightlightModelCloset()
		EspClosetButton.Text = "Esp Closet Off"
	end
end

local doors = {} -- Table pour stocker les portes et dupliques pertinents
local EspDoor = false -- Garde l'état global de l'ESP

-- Fonction pour ajouter surlignage et interface texte
local function AddHighlightModelDoor(object)
    if not object:FindFirstChildOfClass("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.FillColor = Color3.fromRGB(0, 62, 186)
        highlight.OutlineColor = Color3.fromRGB(0, 85, 255)
        highlight.FillTransparency = 0.75
        highlight.OutlineTransparency = 0.75
        highlight.Name = "Highlight_" .. object.Name -- Pour éviter les conflits
        highlight.Parent = object
    end

    if not object:FindFirstChildOfClass("BillboardGui") then
        local billboard = Instance.new("BillboardGui")
        billboard.Size = UDim2.new(0.100, 0, 0.50, 0)
        billboard.MaxDistance = 50
        billboard.StudsOffset = Vector3.new(0, 0, 0)
        billboard.Enabled = true
        billboard.ResetOnSpawn = false
        billboard.AlwaysOnTop = true
        billboard.Name = "Billboard_" .. object.Name -- Pour éviter les conflits
        billboard.Parent = object

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.fromRGB(0, 170, 255)
        textLabel.Text = object.Name -- Texte de base
        textLabel.Parent = billboard
    end
end

-- Fonction pour mettre à jour la distance des portes
local function UpdateDoorDistance(humanoidRootPart)
    for _, doorData in pairs(doors) do
        local obj = doorData.door
        if obj:FindFirstChildOfClass("BillboardGui") then
            local textLabel = obj.BillboardGui:FindFirstChildOfClass("TextLabel")
            if textLabel then
                local distance = (humanoidRootPart.Position - obj.Position).Magnitude
                textLabel.Text = obj.Name .. " [Distance: " .. math.floor(distance) .. " Studs]"
            end
        end
    end
end

-- Fonction pour effacer surlignage et Billboard
local function ClearHighlightModelDoor()
    for _, doorData in pairs(doors) do
        local obj = doorData.door
        if obj:FindFirstChildOfClass("Highlight") then
            obj.Highlight:Destroy()
        end
        if obj:FindFirstChildOfClass("BillboardGui") then
            obj.BillboardGui:Destroy()
        end
    end
    doors = {} -- Réinitialise la liste des portes
end

-- Fonction pour chercher les portes et dupliques
local function FindDoors()
    local object_name_substrings = {"door", "sideroomdupe"}
    for _, object in pairs(workspace:GetDescendants()) do
        if object:IsA("MeshPart") then
            for _, substring in pairs(object_name_substrings) do
                if string.find(object.Name:lower(), substring) then
                    table.insert(doors, {door = object})
                    AddHighlightModelDoor(object)
                end
            end
        end
    end
end

-- Fonction principale d'ESP
local function HighlightModelsDoor(humanoidRootPart, EspDoorButton)
    EspDoor = not EspDoor
    if EspDoor then
        EspDoorButton.Text = "Esp Door On"
        FindDoors() -- Cherche et ajoute les portes
        UpdateDoorDistance(humanoidRootPart)
    else
        ClearHighlightModelDoor() -- Nettoyage si désactivé
        EspDoorButton.Text = "Esp Door Off"
    end
end

-- Connexion du bouton


local function AddHightlightModelDEntities(object)
	if not object:FindFirstChildOfClass("Highlight") then
		local highlight = Instance.new("Highlight")
		highlight.FillColor = Color3.fromRGB(171, 0, 0)
		highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
		highlight.FillTransparency = 0.75
		highlight.OutlineTransparency = 0.75
		highlight.Name = object.Name
		highlight.Parent = object
	end

	if not object:FindFirstChildOfClass("BillboardGui") then
		local billboard = Instance.new("BillboardGui")
		billboard.Size = UDim2.new(0.25, 0, 0.25, 0)
		billboard.MaxDistance = math.huge
		billboard.StudsOffset = Vector3.new(0, 0, 0)
		billboard.Enabled = true
		billboard.ResetOnSpawn = false
		billboard.AlwaysOnTop = true
		billboard.Name = object.Name
		billboard.Parent = object

		local textLabel = Instance.new("TextLabel")
		textLabel.Size = UDim2.new(1, 0, 1, 0)
		textLabel.BackgroundTransparency = 1
		textLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
		textLabel.Text = object.Name -- Ajouter un texte initial
		textLabel.Parent = billboard
	end
end

local function DistanceEntities(humanoidRootPart)
	for _, obj in pairs(workspace:GetDescendants()) do
		if obj:IsA("BillboardGui") and obj:FindFirstChild("TextLabel") then
			local textLabel = obj.TextLabel
			if obj.Parent:IsA("BasePart") then
				local distance = (humanoidRootPart.Position - obj.Parent.Position).Magnitude
				textLabel.Text = obj.Name .. " [Distance: " .. math.floor(distance) .. " Studs]"
			end
		end
	end
end

local function ClearHightlightModelEntities()
	for _, obj in pairs(workspace:GetDescendants()) do
		if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
			local lowerName = obj.Name:lower()
			if lowerName == "rushnew" or lowerName == "eyes" or lowerName == "ambushmoving" 
			or lowerName == "screech" or lowerName == "figurerig" or lowerName == "giggle"
			or lowerName == "grumble" or lowerName == "gloombat" or lowerName == "lookman"
			or lowerName == "seekrig" or lowerName == "a90" or lowerName == "a120" 
			or lowerName == "a60" or lowerName == "haltmoving" then
				obj:Destroy()
			end
		end
	end
end

local function HightLightModelsEntities()
	EspMonsters = not EspMonsters
	if EspMonsters then
		EspMonstersButton.Text = "Esp Entities On"
		for _, obj in pairs(workspace:GetDescendants()) do
			if obj:IsA("BasePart") then
				for _, substring in pairs(object_name_substrings_Monsters) do
					if string.find(obj.Name:lower(), substring) then
						DistanceEntities(humanoidRootPart) -- Utilise le bon nom pour la fonction
						AddHightlightModelDEntities(obj)
					end
				end
			end
		end
	else
		ClearHightlightModelEntities()
		EspMonstersButton.Text = "Esp Entities Off"
	end
end

EspMonstersButton.MouseButton1Click:Connect(HightLightModelsEntities)

local function DeleteSeek(Object)
	for _, Object in pairs(workspace:GetDescendants()) do
		if Object.Name == "trigger" then
			Object.CanTouch = false
			end
		end
end


-- Fonction pour ajouter un surlignage aux objets
local function AddHighlight(object, fillColor, outlineColor, labelText)
    -- Ajoute un surlignage
    local highlight = Instance.new("Highlight", object)
    highlight.FillColor = fillColor
    highlight.OutlineColor = outlineColor

    -- Ajoute une BillboardGui pour afficher le texte
    local billboardGui = Instance.new("BillboardGui", object)
    billboardGui.Size = UDim2.new(1, 0, 1, 0)
    billboardGui.Adornee = object

    local textLabel = Instance.new("TextLabel", billboardGui)
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.new(1, 1, 1)
    textLabel.TextStrokeTransparency = 0
    textLabel.Text = labelText
end

-- Fonction pour gérer les objets ESP
local function ToggleEspItem()
    EspItem = not EspItem
    for _, object in pairs(workspace:GetDescendants()) do
        if object:IsA("Model") and string.find(object.Name:lower(), "keyobtain") then
            if EspItem then
                AddHighlight(object, Color3.fromRGB(180, 180, 0), Color3.fromRGB(255, 255, 127), object.Name)
            else
                object:FindFirstChildOfClass("Highlight")?.Destroy()
                object:FindFirstChildOfClass("BillboardGui")?.Destroy()
            end
        end
    end
end

-- Fonction pour mettre à jour la distance des objets
local function UpdateDistance()
    for _, billboard in pairs(workspace:GetDescendants()) do
        if billboard:IsA("BillboardGui") then
            local textLabel = billboard.TextLabel
            local target = billboard.Adornee
            
            if target and (target:IsA("BasePart") or target:IsA("Model")) then
                local distance = (humanoidRootPart.Position - target:GetPivot().Position).Magnitude
                textLabel.Text = target.Name .. " [Distance: " .. math.floor(distance) .. " Studs]"
            end
        end
    end
end

-- Fonction pour effacer les surlignages des modèles
local function ClearHighlights()
    local modelNamesToClear = {
        "keyobtain", "chestbox", "chestboxlocked", "candle", "crucifix",
        "lockpick", "skeletonkey", "vitamin", "flashlight", "fuseobtain",
        "glowstick", "shears", "pile", "battery", "bandage"
    }

    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
            for _, name in pairs(modelNamesToClear) do
                if obj.Name:lower() == name then
                    obj:Destroy()
                    break -- Sortir de la boucle dès qu'un objet est détruit
                end
            end
        end
    end
end

-- Fonction pour gérer l'activation/désactivation des surlignages
local function ToggleHighlightModels()
    EspItem = not EspItem
    EspItemButton.Text = EspItem and "Esp Item On" or "Esp Item Off"

    if EspItem then
        local object_name_substrings = {"key", "keyobtain", "candle", "chestbox", "chestboxlocked", "crucifix", "lockpick", "skeletonkey", "vitamin", "flashlight", "fuseobtain", "glowstick", "shears", "pile", "battery", "bandage"}
        
        for _, object in pairs(workspace:GetDescendants()) do
            if object:IsA("Model") then
                for _, substring in pairs(object_name_substrings) do
                    if string.find(object.Name:lower(), substring) then
                        AddHighlight(object, Color3.fromRGB(180, 180, 0), Color3.fromRGB(255, 255, 127), object.Name)
                        UpdateDistance() -- Mettez à jour la distance pour chaque objet surligné
                    end
                end
            end
        end
    else
        ClearHighlights()
    end
end

-- Connexion à l'événement de clic
EspItemButton.MouseButton1Click:Connect(ToggleHighlightModels)

-- Ajout initial de l'ESP

-- Fonction pour ajouter un highlight et un BillboardGui au modèle du joueur
local function AddHighlightModelPlayer(object)
	-- Vérifie si l'objet a déjà un Highlight
	if not object:FindFirstChildOfClass("Highlight") then
		local highlight = Instance.new("Highlight")
		highlight.FillColor = Color3.fromRGB(85, 170, 0)
		highlight.OutlineColor = Color3.fromRGB(85, 255, 127)
		highlight.FillTransparency = 0.75
		highlight.OutlineTransparency = 0.75
		highlight.Name = "Player"
		highlight.Parent = object
	end

	-- Vérifie si l'objet a déjà un BillboardGui
	if not object:FindFirstChildOfClass("BillboardGui") then
		local billboard = Instance.new("BillboardGui")
		billboard.Size = UDim2.new(0.250, 0, 0.250, 0)
		billboard.StudsOffset = Vector3.new(0, 3, 0) -- Offset légèrement au-dessus de l'objet
		billboard.Enabled = true
		billboard.ResetOnSpawn = false
		billboard.AlwaysOnTop = true
		billboard.Name = "Player"
		billboard.Parent = object

		local textLabel = Instance.new("TextLabel")
		textLabel.Size = UDim2.new(1, 0, 1, 0)
		textLabel.BackgroundTransparency = 1
		textLabel.TextColor3 = Color3.fromRGB(85, 255, 0)
		textLabel.Text = object.Name
		textLabel.Parent = billboard
	end
end

-- Fonction pour calculer la distance entre le joueur et un objet, et l'afficher
local function UpdateDistancePlayer(humanoidRootPart)
	for _, object in pairs(workspace:GetDescendants()) do
		if object:IsA("BillboardGui") then
			local textLabel = object:FindFirstChildOfClass("TextLabel")
			if textLabel and object.Parent then
				-- Vérification que l'objet est bien un joueur
				local player = game.Players:GetPlayerFromCharacter(object.Parent.Parent)
				if player then
					-- Calcul de la distance pour les BasePart et les Model
					if object.Parent:IsA("BasePart") then
						local distance = (humanoidRootPart.Position - object.Parent.Position).Magnitude
						textLabel.Text = object.Parent.Name .. " [Distance: " .. math.floor(distance) .. " Studs]"
					elseif object.Parent:IsA("Model") and object.Parent.PrimaryPart then
						local distance = (humanoidRootPart.Position - object.Parent.PrimaryPart.Position).Magnitude
						textLabel.Text = object.Parent.Name .. " [Distance: " .. math.floor(distance) .. " Studs]"
					end
				end
			end
		end
	end
end



-- Fonction pour nettoyer les Highlights et BillboardGui existants
local function ClearHighlightModelPlayer()
	for _, obj in pairs(workspace:GetDescendants()) do
		if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
			if obj.Name:lower() == "Player" then
			obj:Destroy()
		end
	end
	end
	end

-- Fonction pour activer ou désactiver le ESP Player
local function HighlightModelsPlayers()
	EspPlayer = not EspPlayer
	if EspPlayer then
		EspPlayerButton.Text = "ESP Player On"
		local localPlayer = game.Players.LocalPlayer
		local humanoidRootPart = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
		if humanoidRootPart then
			for _, object in pairs(workspace:GetDescendants()) do
				if object:IsA("Model") and game.Players:FindFirstChild(object.Name) then
					AddHighlightModelPlayer(object)
					UpdateDistancePlayer(humanoidRootPart)
				end
			end
		end
	else
		ClearHighlightModelPlayer()
		EspPlayerButton.Text = "ESP Player Off"
	end
end



local function NoCooldownPrompt()
	NoCooldownPrompt = not NoCooldownPrompt
	if NoCooldownPrompt then
		NoCooldownButton.Text = "No Cooldown Prompt On"
			for _, prompt in pairs(workspace:GetDescendants()) do
				if prompt:IsA("ProximityPrompt") then
					prompt.HoldDuration = 0
				end
			end
		else
			NoCooldownButton.Text = "No Cooldown Prompt Off"
		end
	
end


-- Fonction pour activer automatiquement un Proximity Prompt
	local function autoActivateProximityPrompt(proximityPrompt)
		if proximityPrompt and proximityPrompt:IsA("ProximityPrompt") then
			-- Connecte une fonction vide lors du déclenchement du ProximityPrompt
			proximityPrompt.Triggered:Connect(function() end)

			-- Vérifie si le ProximityPrompt est affiché et activé
			proximityPrompt.PromptShown:Connect(function()
				if proximityPrompt.Enabled and not proximityPrompt.Active then
					-- Eviter la récursion infinie
					autoActivateProximityPrompt(proximityPrompt)
				end
			end)
		end
		end


	local function detectProximityPrompts(targetObject)
		-- Parcourt les descendants de targetObject (et non de workspace directement)
		for _, object in pairs(workspace:GetDescendants()) do
			if object:IsA("ProximityPrompt") then
				autoActivateProximityPrompt(object)
			end
		end
	end

	-- Fonction AutoLoot pour activer ou désactiver l'auto loot
	local function AutoLoot(targetObject)
		AutoLootV = not AutoLootV
		if AutoLootV then
			AutoCollectButton.Text = "Auto Loot On"
			-- Parcourt tous les Proximity Prompts dans l'objet cible
			detectProximityPrompts(targetObject)
		else
			AutoCollectButton.Text = "Auto Loot Off"
		end
	end
	
local function BigDistancePrompt()
	PromptDistanceV = not PromptDistanceV
	if PromptDistanceV then
		BigDistancePromptButton.Text = "Big Distance Prompt On"
		for _, prompt in pairs(workspace:GetDescendants()) do
			if prompt:IsA("ProximityPrompt") then
				prompt.MaxActivationDistance = 50
			end
		end
	else
		BigDistancePromptButton.Text = "Big Distance Prompt Off"
	end
end

local function toggleNoLag()
	NoLagV = not NoLagV 

	if NoLagV then
		NoLagButton.Text = "No Lag On"
		for _, part in pairs(workspace:GetDescendants()) do
			if part:IsA("BasePart") then
					if not part:GetAttribute("OriginalMaterial") then
						part:SetAttribute("OriginalMaterial", part.Material)
					end
					part.Material = Enum.Material.SmoothPlastic
				else
					local originalMaterial = part:GetAttribute("OriginalMaterial")
					if originalMaterial then
						part.Material = originalMaterial
				
				end
			end
		end
	else
		for _, part in pairs(workspace:GetDescendants()) do
			if part:IsA("BasePart") then
		local originalMaterial = part:GetAttribute("OriginalMaterial")
		if originalMaterial then
			part.Material = originalMaterial

		end
		NoLagButton.Text = "No Lag Off"

			end
		end
		end
end


local function toggleFullBright()
	FullBrightV = not FullBrightV 
	if FullBrightV then
		-- Activer FullBright
		game.Lighting.Brightness = 50
		game.Lighting.Ambient = Color3.new(1, 1, 1)
		game.Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
		FullBrightButton.Text = "FullBright On"  -- Couleur activée
	else

		game.Lighting.Brightness = originalLightingSettings.Brightness
		game.Lighting.Ambient = originalLightingSettings.Ambient
		game.Lighting.OutdoorAmbient = originalLightingSettings.OutdoorAmbient
		FullBrightButton.Text = "FullBright Off"  -- Couleur désactivée
	end
	 -- Inverser l'état
end


EspClosetButton.MouseButton1Click:Connect(HightLightModelsCloset)


EspDoorButton.MouseButton1Click:Connect(function()
HighlightModelsDoor(humanoidRootPart)
end)

EspMonstersButton.MouseButton1Click:Connect(HightLightModelsEntities)

NoCooldownButton.MouseButton1Click:Connect(NoCooldownPrompt)

NoSeekButton.MouseButton1Click:Connect(DeleteSeek)

NoLagButton.MouseButton1Click:Connect(toggleNoLag)

BigDistancePromptButton.MouseButton1Click:Connect(BigDistancePrompt)

FullBrightButton.MouseButton1Click:Connect(toggleFullBright)

ToggleFrameButton.MouseButton1Click:Connect(ToggleFrame)

EspPlayerButton.MouseButton1Click:Connect(HighlightModelsPlayers)

	AutoCollectButton.MouseButton1Click:Connect(AutoLoot)

MainButton.MouseButton1Click:Connect(function()
	showSection(ScrollingFrameMain)
end)

EspButton.MouseButton1Click:Connect(function()
	showSection(ScrollingFrameEsp)
end)

PlayerButton.MouseButton1Click:Connect(function()
	showSection(ScrollingFramePlayer)
end)

-- Variables globales
-- Fonction pour gérer les changements des paramètres globaux
local function updateSettings()
    if AutoLootV then
        AutoCollectButton.Text = "Auto Loot On"
        -- Actions globales à exécuter
    else
        AutoCollectButton.Text = "Auto Loot Off"
    end

    if FullBrightV then
        if game.Lighting.Brightness <= 50 then
            game.Lighting.Brightness = 50
            game.Lighting.Ambient = Color3.new(1, 1, 1)
            game.Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
            FullBrightButton.Text = "FullBright On"
        end
    else
        game.Lighting.Brightness = originalLightingSettings.Brightness
        game.Lighting.Ambient = originalLightingSettings.Ambient
        game.Lighting.OutdoorAmbient = originalLightingSettings.OutdoorAmbient
        FullBrightButton.Text = "FullBright Off"
    end

    -- Autres fonctionnalités comme NoLag, EspCloset, etc.
end

-- Fonction pour détecter les nouveaux objets et mettre à jour leurs propriétés
local function onDescendantAdded(descendant)
    if descendant:IsA("ProximityPrompt") then
        if PromptDistanceV then
            descendant.MaxActivationDistance = 50
        end
        if NoCooldownPrompt then
            descendant.HoldDuration = 0
        end
    elseif descendant:IsA("BasePart") then
        if NoLagV and descendant.Material ~= Enum.Material.SmoothPlastic then
            descendant:SetAttribute("OriginalMaterial", descendant.Material)
            descendant.Material = Enum.Material.SmoothPlastic
        elseif NoLagV == false and descendant:GetAttribute("OriginalMaterial") then
            descendant.Material = descendant:GetAttribute("OriginalMaterial")
        end
    elseif descendant:IsA("Model") then
        local lowerName = descendant.Name:lower()
        if EspCloset and (string.find(lowerName, "wardrobe") or string.find(lowerName, "bed")) then
            AddHightlightModelCloset(descendant)
        elseif EspDoor and (string.find(lowerName, "door") or string.find(lowerName, "sideroomdupe")) then
            AddHighlightModelDoor(descendant)
        elseif EspMonsters and string.find(lowerName, "monster") then
            AddHightlightModelEntities(descendant)
        elseif EspItem and string.find(lowerName, "key") then
            AddHightlightModelDItem(descendant)
        end
    end
end

-- Connexion des événements
workspace.DescendantAdded:Connect(onDescendantAdded)
updateSettings()

-- Gestion des changements d'état
AutoLootVChanged.Event:Connect(updateSettings)
FullBrightVChanged.Event:Connect(updateSettings)
PromptDistanceVChanged.Event:Connect(updateSettings)
NoLagVChanged.Event:Connect(updateSettings)
