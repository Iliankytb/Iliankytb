local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
print("Work Cheats Good Luck")
-- Supprimer l'ancien GUI si présent
if player.PlayerGui:FindFirstChild("GuiPlayer") then
    player.PlayerGui.GuiPlayer:Destroy()
end

-- Création du GUI
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
screenGui.Name = "GuiPlayer"
screenGui.ResetOnSpawn = false

-- Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0.5, 0, 0.5, 0)
frame.Position = UDim2.new(0.325, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
frame.BackgroundTransparency = 0.25
frame.Visible = false

-- Gradient sur le Frame
local gradient = Instance.new("UIGradient", frame)
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 60, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(90, 90, 90))
}

-- UI Stroke et Coin arrondi pour le Frame
local uistroke = Instance.new("UIStroke", frame)
uistroke.Thickness = 3
uistroke.Color = Color3.fromRGB(20, 20, 20)
uistroke.LineJoinMode = Enum.LineJoinMode.Round

local uicorner = Instance.new("UICorner", frame)
uicorner.CornerRadius = UDim.new(0.1, 0)

-- Bouton pour afficher/masquer le GUI
local toggleButton = Instance.new("TextButton", screenGui)
toggleButton.Size = UDim2.new(0, 120, 0, 40)
toggleButton.Position = UDim2.new(0.5, -60, 0.2, 0)
toggleButton.Text = "Toggle Menu"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 18
toggleButton.BackgroundColor3 = Color3.fromRGB(85, 170, 255)

-- Gradient sur le bouton toggleButton
local buttonGradient = Instance.new("UIGradient", toggleButton)
buttonGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(85, 170, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(65, 150, 255))
}

-- Sidebar Frame à gauche
local sidebarFrame = Instance.new("Frame", screenGui)
sidebarFrame.Size = UDim2.new(0.25, 0, 0.50, 0)
sidebarFrame.Position = UDim2.new(0.25, -70, 0.2, 0)
sidebarFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
sidebarFrame.BackgroundTransparency = 0.25
sidebarFrame.Visible = false

-- Gradient sur la sidebarFrame
local sidebarGradient = Instance.new("UIGradient", sidebarFrame)
sidebarGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 70, 70))
}

-- UI Stroke et Coin arrondi pour la sidebarFrame
local sidebarStroke = Instance.new("UIStroke", sidebarFrame)
sidebarStroke.Thickness = 3
sidebarStroke.Color = Color3.fromRGB(20, 20, 20)
sidebarStroke.LineJoinMode = Enum.LineJoinMode.Round

local sidebarCorner = Instance.new("UICorner", sidebarFrame)
sidebarCorner.CornerRadius = UDim.new(0.1, 0)

-- Scrolling Frame à l'intérieur de la sidebarFrame
local sidebarScrollingFrame = Instance.new("ScrollingFrame", sidebarFrame)
sidebarScrollingFrame.Size = UDim2.new(1, 0, 1, 0)
sidebarScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 800)
sidebarScrollingFrame.ScrollBarThickness = 8
sidebarScrollingFrame.BackgroundTransparency = 1

local scrollingFrame = Instance.new("ScrollingFrame", frame)
scrollingFrame.Size = UDim2.new(1, 0, 1, 0)
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 800)
scrollingFrame.ScrollBarThickness = 8
scrollingFrame.BackgroundTransparency = 1

-- UIListLayout pour organiser les boutons dans la sidebarFrame
local sidebarListLayout = Instance.new("UIListLayout", sidebarScrollingFrame)
sidebarListLayout.SortOrder = Enum.SortOrder.LayoutOrder
sidebarListLayout.Padding = UDim.new(0, 10)

local frameListLayout = Instance.new("UIListLayout", scrollingFrame)
frameListLayout.SortOrder = Enum.SortOrder.LayoutOrder
frameListLayout.Padding = UDim.new(0, 10)

-- Fonction d'aide pour créer des boutons avec UI
local function createButton(text, parent)
    local button = Instance.new("TextButton", parent)
    button.Size = UDim2.new(1, 0, 0, 50)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 16
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

    -- Gradient sur chaque bouton
    local buttonGradient = Instance.new("UIGradient", button)
    buttonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(70, 70, 70)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 100))
    }

    local buttonStroke = uistroke:Clone()
    buttonStroke.Parent = button

    local buttonCorner = uicorner:Clone()
    buttonCorner.Parent = button

    return button
end

-- Boutons dans la sidebar
local mainButton = createButton("Main", sidebarScrollingFrame)
local espButton = createButton("ESP Off", scrollingFrame)
local noLagButton = createButton("No Lag Off", scrollingFrame)
local noCooldownPromptButton = createButton("No Cooldown Prompt Off", scrollingFrame)
local fullBrightButton = createButton("Full Bright Off", scrollingFrame)
local godModeButton = createButton("God Mode Off", scrollingFrame)
local autoLootButton = createButton("Auto Loot Off", scrollingFrame)
local flyButton = createButton("Fly Off", scrollingFrame)
local autoHealButton = createButton("Auto Heal Off", scrollingFrame)
local speedBoostButton = createButton("Speed Boost Off", scrollingFrame)
local noScreechButton = createButton("No Screech Off", scrollingFrame)

-- Variables de fonctionnalité
local espActive = false
local noLagActive = false
local noCooldownPromptActive = false
local fullBrightActive = false
local godModeActive = false
local autoLootActive = false
local flyActive = false
local autoHealActive = false
local speedBoostActive = false
local noScreechValue = false
local highlightColor = Color3.fromRGB(255, 0, 0)
local highlightTransparency = 0.5
local originalMaterials = {}
local espTargets = {}

-- Accéder au service Workspace
local workspace = game:GetService("Workspace")

-- Fonction pour mettre à jour les paramètres des ProximityPrompts
local function updateProximityPrompts()
    for _, object in pairs(workspace:GetDescendants()) do
        if object:IsA("ProximityPrompt") then
            object.RequiresLineOfSight = false
            object.HoldDuration = 0
        end
    end
end

-- Fonction pour désactiver Screech
local function noScreech()
    local gameData = game:GetService("ReplicatedStorage"):WaitForChild("GameData")
    local disableScreech = gameData:FindFirstChild("DisableEntitieScreech")
    if disableScreech then
        disableScreech.Value = noScreechValue
    end
end

-- Fonction ESP
local function updateEspTargets()
    espTargets = {}
    for _, model in pairs(workspace:GetDescendants()) do
        if model:IsA("Model") or model:IsA("Part") then
            local nameLower = model.Name:lower()
            if nameLower == "locker_large" or nameLower == "locker_small" or nameLower == "door" or
            nameLower == "sideroomdupe" or nameLower == "wardrobe" or nameLower == "gold" then
                table.insert(espTargets, model)
            end
        end
    end
end

local function highlightModel(model)
    if not model:FindFirstChildOfClass("Highlight") then
        local highlight = Instance.new("Highlight", model)
        highlight.FillColor = highlightColor
        highlight.FillTransparency = highlightTransparency
        highlight.OutlineTransparency = highlightTransparency
    end
end

local function highlightModels()
    for _, model in pairs(espTargets) do
        highlightModel(model)
    end
end

local function clearHighlights()
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Highlight") then
            obj:Destroy()
        end
    end
end

-- Fonction No Lag
local function setSmoothPlastic()
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("Part") then
            table.insert(originalMaterials, {part = part, material = part.Material})
            part.Material = Enum.Material.SmoothPlastic
        end
    end
end

local function restoreOriginalMaterials()
    for _, entry in pairs(originalMaterials) do
        if entry.part then
            entry.part.Material = entry.material
        end
    end
end

-- Fonction Toggle pour le GUI
local function toggleFrame()
    frame.Visible = not frame.Visible
    sidebarFrame.Visible = not sidebarFrame.Visible
end

toggleButton.MouseButton1Click:Connect(toggleFrame)

-- Fonction No Lag
noLagButton.MouseButton1Click:Connect(function()
    noLagActive = not noLagActive
    if noLagActive then
        setSmoothPlastic()
        noLagButton.Text = "No Lag On"
    else
        restoreOriginalMaterials()
        noLagButton.Text = "No Lag Off"
    end
end)

-- Fonction ESP
espButton.MouseButton1Click:Connect(function()
    espActive = not espActive
    if espActive then
        updateEspTargets()
        highlightModels()
        espButton.Text = "ESP On"
    else
        clearHighlights()
        espButton.Text = "ESP Off"
    end
end)

-- Fonction No Cooldown Prompt
noCooldownPromptButton.MouseButton1Click:Connect(function()
    noCooldownPromptActive = not noCooldownPromptActive
    if noCooldownPromptActive then
        updateProximityPrompts()
        noCooldownPromptButton.Text = "No Cooldown Prompt On"
    else
        noCooldownPromptButton.Text = "No Cooldown Prompt Off"
    end
end)

-- Fonction Full Bright
fullBrightButton.MouseButton1Click:Connect(function()
    fullBrightActive = not fullBrightActive
    if fullBrightActive then
        fullBrightButton.Text = "Full Bright On"
        game.Lighting.Brightness = 100
    else
        fullBrightButton.Text = "Full Bright Off"
        game.Lighting.Brightness = 1
    end
end)

-- Fonction God Mode
godModeButton.MouseButton1Click:Connect(function()
    godModeActive = not godModeActive
    if godModeActive then
        godModeButton.Text = "God Mode On"
        -- Logic for God Mode activation
    else
        godModeButton.Text = "God Mode Off"
        -- Logic for disabling God Mode
    end
end)

-- Fonction Auto Loot
autoLootButton.MouseButton1Click:Connect(function()
    autoLootActive = not autoLootActive
    if autoLootActive then
        autoLootButton.Text = "Auto Loot On"
        -- Logic for Auto Loot activation
    else
        autoLootButton.Text = "Auto Loot Off"
        -- Logic for disabling Auto Loot
    end
end)

-- Fonction Fly
flyButton.MouseButton1Click:Connect(function()
    flyActive = not flyActive
    if flyActive then
        flyButton.Text = "Fly On"
        -- Logic to enable flying
    else
        flyButton.Text = "Fly Off"
        -- Logic to disable flying
    end
end)

-- Fonction Auto Heal
autoHealButton.MouseButton1Click:Connect(function()
    autoHealActive = not autoHealActive
    if autoHealActive then
        autoHealButton.Text = "Auto Heal On"
        -- Logic to enable auto heal
    else
        autoHealButton.Text = "Auto Heal Off"
        -- Logic to disable auto heal
    end
end)

-- Fonction Speed Boost
speedBoostButton.MouseButton1Click:Connect(function()
    speedBoostActive = not speedBoostActive
    if speedBoostActive then
        speedBoostButton.Text = "Speed Boost On"
        -- Logic to increase player's speed
    else
        speedBoostButton.Text = "Speed Boost Off"
        -- Logic to reset player's speed
    end
end)

-- Fonction No Screech
noScreechButton.MouseButton1Click:Connect(function()
    noScreechValue = not noScreechValue
    if noScreechValue then
        noScreechButton.Text = "No Screech On"
        noScreech()
    else
        noScreechButton.Text = "No Screech Off"
        noScreech()
    end
end)

-- Boucle de mise à jour continue
RunService.RenderStepped:Connect(function()
    if noScreechValue then
        noScreech()
    end
    if speedBoostActive then
        -- Logic to increase player's speed
    end
    if autoHealActive then
        -- Logic to enable auto heal
    end
    if autoLootActive then
        -- Logic for Auto Loot activation
    end
    if godModeActive then
        -- Logic for God Mode activation
    end
    if fullBrightActive then
        game.Lighting.Brightness = 100
    end
    if noCooldownPromptActive then
        updateProximityPrompts()
    end
end)
