-- Obtenez les services nécessaires
local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- Fonction pour créer des éléments UI
local function createUIElement(className, parent, properties)
    local element = Instance.new(className)
    element.Parent = parent
    for prop, value in pairs(properties) do
        element[prop] = value
    end
    return element
end

-- Supprimer l'ancien GUI si présent
local oldGui = player.PlayerGui:FindFirstChild("GuiPlayer")
if oldGui then
    oldGui:Destroy()
end

-- Création du GUI
local screenGui = createUIElement("ScreenGui", player.PlayerGui, { Name = "GuiPlayer", ResetOnSpawn = false })

-- Fonction pour afficher un message de bienvenue quand le GUI est ouvert
local welcomeText = createUIElement("TextLabel", screenGui, {
    Size = UDim2.new(0.5, 0, 0.1, 0),
    Position = UDim2.new(0.25, 0, 0.05, 0),
    Text = "Thanks To Support Me!",
    TextColor3 = Color3.fromRGB(255, 255, 255),
    Font = Enum.Font.GothamBold,
    TextSize = 24,
    BackgroundTransparency = 1,
    Visible = false
})

welcomeText.Visible = true
wait(5)  -- Affiche le message pendant 5 secondes
welcomeText.Visible = false

-- Main Frame
local frame = createUIElement("Frame", screenGui, {
    Size = UDim2.new(0.25, 0, 0.75, 0),
    Position = UDim2.new(0.55, 0, 0.5, 0),
    BackgroundColor3 = Color3.fromRGB(60, 60, 60),
    BackgroundTransparency = 0.25,
    Visible = false
})

-- Gradient sur le Frame
createUIElement("UIGradient", frame, {
    Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 60, 60)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(90, 90, 90))
    }
})

-- UI Stroke et Coin arrondi pour le Frame
createUIElement("UIStroke", frame, {
    Thickness = 3,
    Color = Color3.fromRGB(20, 20, 20),
    LineJoinMode = Enum.LineJoinMode.Round
})

createUIElement("UICorner", frame, { CornerRadius = UDim.new(0.1, 0) })

-- Bouton pour afficher/masquer le GUI
local toggleButton = createUIElement("TextButton", screenGui, {
    Size = UDim2.new(0, 100, 0, 25),
    Position = UDim2.new(0.85, 0, 0.05, 0),
    Text = "Toggle Menu",
    TextColor3 = Color3.fromRGB(255, 255, 255),
    Font = Enum.Font.GothamBold,
    TextSize = 18,
    BackgroundColor3 = Color3.fromRGB(85, 170, 255)
})

-- Sidebar Frame à gauche
local sidebarFrame = createUIElement("Frame", screenGui, {
    Size = UDim2.new(0.2, 0, 0.75, 0),
    Position = UDim2.new(0.45, 0, 0.55, 0),
    BackgroundColor3 = Color3.fromRGB(40, 40, 40),
    BackgroundTransparency = 0.25,
    Visible = false
})

-- Scrolling Frame dans sidebar
local sidebarScrollingFrame = createUIElement("ScrollingFrame", sidebarFrame, {
    Size = UDim2.new(1, 0, 1, 0),
    CanvasSize = UDim2.new(0, 0, 0, 800),
    ScrollBarThickness = 8,
    BackgroundTransparency = 1
})

-- Frame des boutons ESP
local scrollingframeEsp = createUIElement("ScrollingFrame", frame, {
    Size = UDim2.new(1, 0, 1, 0),
    CanvasSize = UDim2.new(0, 0, 0, 800),
    ScrollBarThickness = 8,
    BackgroundTransparency = 1,
    Visible = false
})

-- Main Scrolling Frame
local scrollingFrame = createUIElement("ScrollingFrame", frame, {
    Size = UDim2.new(1, 0, 1, 0),
    CanvasSize = UDim2.new(0, 0, 0, 800),
    ScrollBarThickness = 8,
    BackgroundTransparency = 1
})

-- Fonction pour créer des boutons avec changement de texte "On/Off"
local function createButton(text, parent, callback)
    local button = createUIElement("TextButton", parent, {
        Size = UDim2.new(0.90, 0, 0, 50),
        Text = text,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Font = Enum.Font.GothamBold,
        TextSize = 16,
        BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    })

    -- Gradient sur chaque bouton
    createUIElement("UIGradient", button, {
        Color = ColorSequence.new{
            ColorSequenceKeypoint.new(0, Color3.fromRGB(70, 70, 70)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 100))
        }
    })

    createUIElement("UIStroke", button, {
        Thickness = 2,
        Color = Color3.fromRGB(20, 20, 20),
        LineJoinMode = Enum.LineJoinMode.Round
    })

    createUIElement("UICorner", button, { CornerRadius = UDim.new(0.1, 0) })

    -- Connecter le callback pour le bouton
    button.MouseButton1Click:Connect(callback)

    return button
end

-- Fonction pour afficher/masquer différentes sections (Main, ESP, Player, etc.)
local function showSection(sectionFrame)
    scrollingFrame.Visible = false
    scrollingframeEsp.Visible = false
    sectionFrame.Visible = true
end

-- UIListLayout pour organiser les boutons dans le frame principal et le scrolling ESP
createUIElement("UIListLayout", sidebarScrollingFrame, {
    SortOrder = Enum.SortOrder.LayoutOrder,
    Padding = UDim.new(0, 10)
})

createUIElement("UIListLayout", scrollingFrame, {
    SortOrder = Enum.SortOrder.LayoutOrder,
    Padding = UDim.new(0, 10)
})

createUIElement("UIListLayout", scrollingframeEsp, {
    SortOrder = Enum.SortOrder.LayoutOrder,
    Padding = UDim.new(0, 10)
})

-- Ajout d'un UIPadding pour espacer les éléments
createUIElement("UIPadding", scrollingFrame, {
    PaddingTop = UDim.new(0, 10),
    PaddingBottom = UDim.new(0, 10),
    PaddingLeft = UDim.new(0, 10),
    PaddingRight = UDim.new(0, 10)
})

-- Boutons dans la sidebar
createButton("Main", sidebarScrollingFrame, function()
    showSection(scrollingFrame)
end)

createButton("ESP", sidebarScrollingFrame, function()
    showSection(scrollingframeEsp)
end)

createButton("Player", sidebarScrollingFrame, function()
    -- TODO: Ajouter fonctionnalité pour la section Player
end)

createButton("Item Dupe", sidebarScrollingFrame, function()
    -- TODO: Ajouter fonctionnalité pour la section Give Item
end)

createButton("Information", sidebarScrollingFrame, function()
    -- TODO: Ajouter fonctionnalité pour la section Information
end)

createButton("Settings", sidebarScrollingFrame, function()
    -- TODO: Ajouter fonctionnalité pour la section Settings
end)

createButton("Remove UI", sidebarScrollingFrame, function()
    if screenGui then
        screenGui:Destroy()
    end
end)

-- Fonctionnalité ESP
local espActive = false
local espTargets = {}
local FullBrightActive = false

local function toggleFullBright()
    FullBrightActive = not FullBrightActive
    game.Lighting.Brightness = FullBrightActive and 100 or 1
end

local function highlightModel(model, color)
    local highlight = Instance.new("Highlight")
    highlight.Adornee = model
    highlight.FillColor = color
    highlight.Parent = model
end

local function highlightPlayers()
    espTargets = {}
    for _, player in pairs(game.Players:GetPlayers()) do
        local char = player.Character
        local humanoidRootPart = char and char:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart and not char:FindFirstChildOfClass("Highlight") then
            highlightModel(char, Color3.fromRGB(255, 0, 0))  -- Rouge pour les ennemis
            table.insert(espTargets, char)
        end
    end
end

-- Ajout des nouveaux boutons dans scrollingFrame (Main)
local fullBrightButton = createButton("Full Bright Off", scrollingFrame, function()
    toggleFullBright()
    fullBrightButton.Text = FullBrightActive and "Full Bright On" or "Full Bright Off"
end)

-- Ajout des boutons ESP dans scrollingframeEsp (Section ESP)
local espButton = createButton("ESP Player Off", scrollingframeEsp, function()
    espActive = not espActive
    if espActive then
        highlightPlayers()
        espButton.Text = "ESP Player On"
    else
        for _, target in pairs(espTargets) do
            local highlight = target:FindFirstChildOfClass("Highlight")
            if highlight then
                highlight:Destroy()
            end
        end
        espTargets = {}
        espButton.Text = "ESP Player Off"
    end
end)

-- Fonction pour basculer le GUI lorsqu'on appuie sur le bouton de bascule
toggleButton.MouseButton1Click:Connect(function()
    frame.Visible = not frame.Visible
    sidebarFrame.Visible = frame.Visible
end)

-- Shortcut pour activer/désactiver le menu avec une touche (ici "M")
UserInputService.InputBegan:Connect(function(input, processed)
    if input.KeyCode == Enum.KeyCode.M and not processed then
        frame.Visible = not frame.Visible
        sidebarFrame.Visible = frame.Visible
    end
end)

-- Fonction pour le FullBright en continu
RunService.RenderStepped:Connect(function()
    if FullBrightActive then
        game.Lighting.Brightness = 100
        game.Lighting.ClockTime = 14
        game.Lighting.FogEnd = 100000
        game.Lighting.GlobalShadows = false
        game.Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)
    end
end)

-- Fin du script

