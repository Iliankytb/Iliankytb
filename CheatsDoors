local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local RunService = game:GetService("RunService")
local originalLightingSettings = {
	Brightness = game.Lighting.Brightness,
	Ambient = game.Lighting.Ambient,
	OutdoorAmbient = game.Lighting.OutdoorAmbient
}


local function createUIElement(className, parent, properties)
	local element = Instance.new(className)
	element.Parent = parent
	for prop, value in pairs(properties) do
		element[prop] = value
	end
	return element
end


local Gui = Instance.new("ScreenGui",player.PlayerGui)
Gui.Enabled = true
Gui.ResetOnSpawn = false

local function createButton(text, parent)
	local button = createUIElement("TextButton", parent, {
		Size = UDim2.new(0.90, 0, 0, 50),
		Text = text,
		TextColor3 = Color3.fromRGB(255, 255, 255),
		Font = Enum.Font.GothamBold,
		TextSize = 16,
		BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	})
	createUIElement("UIGradient", button, {
		Color = ColorSequence.new{
			ColorSequenceKeypoint.new(0, Color3.fromRGB(70, 70, 70)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 100))
		}
	})

	createUIElement("UIStroke", button, {
		Thickness = 2,
		Color = Color3.fromRGB(20, 20, 20),
		LineJoinMode = Enum.LineJoinMode.Round
	})

	createUIElement("UICorner", button, { CornerRadius = UDim.new(0.15, 0) })


	return button
end

local ToggleFrameButton = createUIElement("TextButton", Gui, {
	Size = UDim2.new(0, 100, 0, 25),
	Position = UDim2.new(0.85, 0, 0.05, 0),
	Text = "Toggle Cheat Menu",
	TextColor3 = Color3.fromRGB(255, 255, 255),
	Font = Enum.Font.GothamBold,
	TextSize = 15,
	BackgroundColor3 = Color3.fromRGB(85, 170, 255)
})

local Frame = Instance.new("Frame", Gui)
Frame.Size = UDim2.new(0.5, 0, 0.5, 0)
Frame.Position = UDim2.new(0.25, 0, 0.25, 0)
Frame.BackgroundTransparency = 0.2  -- Transparence légère
Frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)  -- Couleur plus douce
Frame.BorderMode = Enum.BorderMode.Middle
Frame.Visible = true

-- Ajout d'une ombre portée (Frame)
local shadow = Instance.new("ImageLabel", Frame)
shadow.Size = UDim2.new(1, 20, 1, 20)
shadow.Position = UDim2.new(-0.05, 0, -0.05, 0)
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://1316045217"  -- ID pour un effet d'ombre
shadow.ImageColor3 = Color3.new(0, 0, 0)
shadow.ImageTransparency = 0.5  -- Légère transparence pour l'ombre

-- Bordure externe améliorée (Frame)
local UiStroke = Instance.new("UIStroke", Frame)
UiStroke.Thickness = 1.5  -- Bordure fine
UiStroke.Color = Color3.fromRGB(80, 150, 250)  -- Bleu clair et doux
UiStroke.LineJoinMode = Enum.LineJoinMode.Round

-- Ajout de coins arrondis (Frame)
local UiCorner = Instance.new("UICorner", Frame)
UiCorner.CornerRadius = UDim.new(0, 15)  -- Coins plus arrondis

-- Frame pour Scrolling (FrameScroll)
local FrameScroll = Instance.new("Frame", Frame)
FrameScroll.Size = UDim2.new(0.5, 0, 1, 0)
FrameScroll.Position = UDim2.new(0, 0, 0, 0)
FrameScroll.BackgroundTransparency = 1
FrameScroll.Visible = true

local shadow1 = Instance.new("ImageLabel", FrameScroll)
shadow1.Size = UDim2.new(1, 20, 1, 20)
shadow1.Position = UDim2.new(-0.05, 0, -0.05, 0)
shadow1.BackgroundTransparency = 1
shadow1.Image = "rbxassetid://1316045217"  -- ID pour un effet d'ombre
shadow1.ImageColor3 = Color3.new(0, 0, 0)
shadow1.ImageTransparency = 0.5  -- Légère transparence pour l'ombre

-- Scrolling Frame
local ScrollingFrameScroll = Instance.new("ScrollingFrame", FrameScroll)
ScrollingFrameScroll.Size = UDim2.new(1, 0, 1, 0)
ScrollingFrameScroll.Position = UDim2.new(0, 0, 0, 0)
ScrollingFrameScroll.BackgroundTransparency = 1
ScrollingFrameScroll.Visible = true
ScrollingFrameScroll.CanvasSize = UDim2.new(0, 0, 0, 500)

-- Ajout d'une mise en page (UIListLayout)
local UiLayoutScrollingFrameScroll = Instance.new("UIListLayout", ScrollingFrameScroll)
UiLayoutScrollingFrameScroll.Padding = UDim.new(0, 10)
UiLayoutScrollingFrameScroll.SortOrder = Enum.SortOrder.LayoutOrder

-- Frame principal (FrameMain)
local FrameMain = Instance.new("Frame", Frame)
FrameMain.Size = UDim2.new(0.5, 0, 1, 0)
FrameMain.Position = UDim2.new(0.5, 0, 0, 0)
FrameMain.BackgroundTransparency = 1  -- Plus de transparence pour un effet élégant
FrameMain.BackgroundColor3 = Color3.fromRGB(45, 45, 45)  -- Couleur légèrement plus claire
FrameMain.Visible = true


-- Scrolling Frame principal (ScrollingFrameMain)
local ScrollingFrameMain = Instance.new("ScrollingFrame", FrameMain)
ScrollingFrameMain.Size = UDim2.new(1, 0, 1, 0)
ScrollingFrameMain.Position = UDim2.new(0, 0, 0, 0)
ScrollingFrameMain.BackgroundTransparency = 1
ScrollingFrameMain.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
ScrollingFrameMain.Visible = true
ScrollingFrameMain.CanvasSize = UDim2.new(0, 0, 0, 1000)

local ScrollingFrameEsp = Instance.new("ScrollingFrame",FrameMain)
ScrollingFrameEsp.Size = UDim2.new(1, 0, 1, 0)
ScrollingFrameEsp.Position = UDim2.new(0, 0, 0, 0)
ScrollingFrameEsp.BackgroundTransparency = 1
ScrollingFrameEsp.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
ScrollingFrameEsp.Visible = false
ScrollingFrameEsp.CanvasSize = UDim2.new(0, 0, 0, 1000)

local ScrollingFramePlayer = Instance.new("ScrollingFrame",FrameMain)
ScrollingFramePlayer.Size = UDim2.new(1, 0, 1, 0)
ScrollingFramePlayer.Position = UDim2.new(0, 0, 0, 0)
ScrollingFramePlayer.BackgroundTransparency = 1
ScrollingFramePlayer.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
ScrollingFramePlayer.Visible = false
ScrollingFramePlayer.CanvasSize = UDim2.new(0, 0, 0, 1000)

-- Ajout d'un ListLayout pour le scrolling principal
local UiLayoutScrollingFrameMain2 = Instance.new("UIListLayout", ScrollingFrameMain)
UiLayoutScrollingFrameMain2.Padding = UDim.new(0, 10)
UiLayoutScrollingFrameMain2.SortOrder = Enum.SortOrder.LayoutOrder

-- Ajout de coins arrondis et bordure au Scrolling Frame principal
local UiCornerMain2 = Instance.new("UICorner", ScrollingFrameMain)
UiCornerMain2.CornerRadius = UDim.new(0, 12)

local UiStrokeMain2 = Instance.new("UIStroke", ScrollingFrameMain)
UiStrokeMain2.Thickness = 1.5  -- Bordure fine
UiStrokeMain2.Color = Color3.fromRGB(60, 130, 220)  -- Couleur adoucie
UiStrokeMain2.LineJoinMode = Enum.LineJoinMode.Round

local UiLayoutScrollingFrameEsp = Instance.new("UIListLayout", ScrollingFrameEsp)
UiLayoutScrollingFrameEsp.Padding = UDim.new(0, 10)
UiLayoutScrollingFrameEsp.SortOrder = Enum.SortOrder.LayoutOrder

local UiLayoutScrollingFramePlayer = Instance.new("UIListLayout", ScrollingFramePlayer)
UiLayoutScrollingFramePlayer.Padding = UDim.new(0, 10)
UiLayoutScrollingFramePlayer.SortOrder = Enum.SortOrder.LayoutOrder

local function showSection(sectionFrame)
	ScrollingFrameMain.Visible = false
	ScrollingFrameEsp.Visible = false
	ScrollingFramePlayer.Visible = false
	sectionFrame.Visible = true
end

local EspCloset,PromptDistanceV,FullBrightV,ToggleCheat,AutoLootV,EspDoor,EspPlayer,EspItem,EspMonsters,NoCooldownPrompt,MonsterNotifV,EspGuide,NoLagV = false,false,false,false,false,false,false,false,false,false,false,false,false
local MainButton = createButton("Main",ScrollingFrameScroll)
local EspButton = createButton("Esp",ScrollingFrameScroll)
local PlayerButton = createButton("Player",ScrollingFrameScroll)
local ItemDupeButton = createButton("Item Dupe",ScrollingFrameScroll)
local SettingButton = createButton("Setting",ScrollingFrameScroll)
local InfoButton = createButton("Information",ScrollingFrameScroll)
local RemoveUiButton = createButton("Remove Ui",ScrollingFrameScroll)
local EspDoorButton = createButton("Esp Door Off",ScrollingFrameEsp)
local EspClosetButton = createButton("Esp Closet Off",ScrollingFrameEsp)
local EspPlayerButton = createButton("Esp Player Off",ScrollingFrameEsp)
local EspItemButton = createButton("Esp Item Off",ScrollingFrameEsp)
local EspMonstersButton = createButton("Esp Entities Off",ScrollingFrameEsp)
local NoCooldownButton = createButton("No Cooldown Prompt Off",ScrollingFrameMain)
local FullBrightButton = createButton("FullBright Off",ScrollingFrameMain)
local BigDistancePromptButton = createButton("Big Distance Prompt Off",ScrollingFrameMain)
local AutoCollectButton = createButton("Auto Loot Off",ScrollingFrameMain)
local EspGuidingLightButton = createButton("Esp Guiding Light Off(Coming Soon)",ScrollingFrameEsp)
local NoSeekButton = createButton("Delete Seek Toggle",ScrollingFrameMain)
local NoLagButton = createButton("No Lag Off",ScrollingFrameMain)
local NotifMonstersButton = createButton("Notifs Monster Off (Coming Soon)",ScrollingFrameMain)
local SpeedBoostButton = createButton("Speed Boost Off",ScrollingFramePlayer)
local BypassSpeedButton = createButton("Bypass Speed",ScrollingFramePlayer)
local object_name_substrings_Monsters = {"rushnew","ambushmoving","giggle","grumble","screech","figurerig","seekrig","gloombat","lookman","haltmoving","a90","a60","a120"}

local function ToggleFrame()
	ToggleCheat = not ToggleCheat
	if ToggleCheat then
		Frame.Visible = true
		shadow.Visible = true
		ToggleFrameButton.Interactable = false
		Frame:TweenPosition(UDim2.new(0.25, 0, 0.25, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
		wait(1)
		ToggleFrameButton.Interactable = true
	else
		ToggleFrameButton.Interactable = false
		Frame:TweenPosition(UDim2.new(0.25, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
		wait(1)
		Frame.Visible = false
		ToggleFrameButton.Interactable = true
		shadow.Visible = false
	end
end

local function AddHightlightModelCloset(object)
		-- Check if the object already has a Highlight
		if not object:FindFirstChildOfClass("Highlight") then
			local highlight = Instance.new("Highlight")
			highlight.FillColor = Color3.fromRGB(85, 170, 0)
			highlight.OutlineColor = Color3.fromRGB(85, 255, 127)
			highlight.FillTransparency = 0.75
			highlight.OutlineTransparency = 0.75
			highlight.Name = object.Name
			highlight.Parent = object
		end

		-- Check if the object already has a BillboardGui
		if not object:FindFirstChildOfClass("BillboardGui") then
			local billboard = Instance.new("BillboardGui")
			billboard.Size = UDim2.new(0.100, 0, 0.50, 0)
		billboard.MaxDistance = 50
			billboard.StudsOffset = Vector3.new(0, 0, 0)
			billboard.Enabled = true
			billboard.ResetOnSpawn = false
			billboard.AlwaysOnTop = true
			billboard.Name = object.Name
			billboard.Parent = object

			local textLabel = Instance.new("TextLabel")
			textLabel.Size = UDim2.new(1, 0, 1, 0)
			textLabel.BackgroundTransparency = 1
			textLabel.TextColor3 = Color3.fromRGB(85, 255, 0)
			textLabel.Parent = billboard
		end
end

local function UpdateClosetDistance(object)
    for _, object in pairs(workspace:GetDescendants()) do
        if object:IsA("BillboardGui") then
            local textLabel = object.TextLabel

            if object.Parent:IsA("Model") then
                local distance = (humanoidRootPart.Position - object.Parent:GetPivot().Position).Magnitude
                textLabel.Text = object.Name.." [Distance: " .. math.floor(distance) .. " Studs]"
            end
        end
    end
end


local function ClearHightlightModelCloset(Obj)
	for _, Obj in pairs(workspace:GetDescendants()) do
		if Obj:IsA("Highlight") or Obj:IsA("BillboardGui") then
			if Obj.Name:lower() == "wardrobe" or Obj.Name:lower() == "backdoor_wardrobe" or Obj.Name:lower() == "bed" or Obj.Name:lower() == "beds" then
		Obj:Destroy()
		end
		end
		end
end

local function HightLightModelsCloset()
	EspCloset = not EspCloset
	if EspCloset then
		EspClosetButton.Text = "Esp Closet On"
	local object_name_substrings = {"wardrobe","backdoor_wardrobe","bed","beds"}
	for _, object in pairs(workspace:GetDescendants()) do
		if object:IsA("Model") then
			for _, substring in pairs(object_name_substrings) do
				if string.find(object.Name:lower(), substring) then
					AddHightlightModelCloset(object)
					UpdateClosetDistance(object)
				end
				end
			end
	end
	else
		ClearHightlightModelCloset()
		EspClosetButton.Text = "Esp Closet Off"
	end
end

local function AddHightlightModelDoor(object)
	-- Check if the object already has a Highlight
	if not object:FindFirstChildOfClass("Highlight") then
		local highlight = Instance.new("Highlight")
		highlight.FillColor = Color3.fromRGB(0, 62, 186)
		highlight.OutlineColor = Color3.fromRGB(0, 85, 255)
		highlight.FillTransparency = 0.75
		highlight.OutlineTransparency = 0.75
		highlight.Name = object.Name
		highlight.Parent = object
	end

	-- Check if the object already has a BillboardGui
	if not object:FindFirstChildOfClass("BillboardGui") then
		local billboard = Instance.new("BillboardGui")
		billboard.Size = UDim2.new(0.100, 0, 0.50, 0)
		billboard.MaxDistance = 50
		billboard.StudsOffset = Vector3.new(0, 0, 0)
		billboard.Enabled = true
		billboard.ResetOnSpawn = false
		billboard.AlwaysOnTop = true
		billboard.Name = object.Name
		billboard.Parent = object

		local textLabel = Instance.new("TextLabel")
		textLabel.Size = UDim2.new(1, 0, 1, 0)
		textLabel.BackgroundTransparency = 1
		textLabel.TextColor3 = Color3.fromRGB(0, 170, 255)
		textLabel.Parent = billboard
	end
end

local function UpdateDoorDistance(object)
    for _, object in pairs(workspace:GetDescendants()) do
        if object:IsA("BillboardGui") then
local textLabel = object.TextLabel
            if object.Parent:IsA("MeshPart") then
                local distance = (humanoidRootPart.Position - object.Parent.Position).Magnitude
                textLabel.Text = object.Name.." "..object.Parent.Parent.Parent.Name.." [Distance: " .. math.floor(distance) .. " Studs]"
            end
        end
    end
end


local function ClearHightlightModelDoor(Obj)
	for _, Obj in pairs(workspace:GetDescendants()) do
		if Obj:IsA("Highlight") or Obj:IsA("BillboardGui") then
			if Obj.Name:lower() == "door" or Obj.Name:lower() == "sideroomdupe" then
			Obj:Destroy()
			end
		end
	end
end


local function HightLightModelsDoor()
	EspDoor = not EspDoor
	if EspDoor then
		EspDoorButton.Text = "Esp Door On"
		local object_name_substrings = {"door","sideroomdupe"}
		for _, object in pairs(workspace:GetDescendants()) do
			if object:IsA("MeshPart") then
				for _, substring in pairs(object_name_substrings) do
					if string.find(object.Name:lower(), substring) then
						AddHightlightModelDoor(object)
						UpdateDoorDistance(object)
					end
				end
			end
		end
	else
		ClearHightlightModelDoor()
		EspDoorButton.Text = "Esp Door Off"
	end
end

local function AddHightlightModelDEntities(object)
	-- Check if the object already has a Highlight
	if not object:FindFirstChildOfClass("Highlight") then
		local highlight = Instance.new("Highlight")
		highlight.FillColor = Color3.fromRGB(171, 0, 0)
		highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
		highlight.FillTransparency = 0.75
		highlight.OutlineTransparency = 0.75
		highlight.Name = object.Name
		highlight.Parent = object
	end

	-- Check if the object already has a BillboardGui
	if not object:FindFirstChildOfClass("BillboardGui") then
		local billboard = Instance.new("BillboardGui")
		billboard.Size = UDim2.new(0.250, 0, 0.250, 0)
		billboard.MaxDistance = math.huge
		billboard.StudsOffset = Vector3.new(0, 0, 0)
		billboard.Enabled = true
		billboard.ResetOnSpawn = false
		billboard.AlwaysOnTop = true
		billboard.Name = object.Name
		billboard.Parent = object

		local textLabel = Instance.new("TextLabel")
		textLabel.Size = UDim2.new(1, 0, 1, 0)
		textLabel.BackgroundTransparency = 1
		textLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
		textLabel.Parent = billboard
	end
end


local function DistanceEntities(object)
	for _, object in pairs(workspace:GetDescendants()) do
		if object:IsA("BillboardGui") then
			local textLabel = object.TextLabel
			if object.Parent:IsA("BasePart") then
				local distance = (humanoidRootPart.Position - object.Parent.Position).Magnitude
				textLabel.Text = object.Name .. " [Distance: " .. math.floor(distance) .. " Studs]"
			end
			end
	end
end

local function ClearHightlightModelEntities(Obj)
	for _, Obj in pairs(workspace:GetDescendants()) do
		if Obj:IsA("Highlight") or Obj:IsA("BillboardGui") then
			if Obj.Name:lower() == "rushnew" or Obj.Name:lower() == "eyes" or Obj.Name:lower() == "ambushmoving" or Obj.Name:lower() == "screech" or Obj.Name:lower() == "figurerig" or Obj.Name:lower() == "giggle" or Obj.Name:lower() == "grumble"  or Obj.Name:lower() == "gloombat" or Obj.Name:lower() == "lookman" or Obj.Name:lower() == "seekrig" or Obj.Name:lower() == "a90" or Obj.Name:lower() == "a120" or Obj.Name:lower() == "a60" or Obj.Name:lower() == "haltmoving" then 
				Obj:Destroy()
			end
		end
	end
end


local function HightLightModelsEntities()
	EspMonsters = not EspMonsters
	if EspMonsters then
		EspMonstersButton.Text = "Esp Entities On"
		for _, object in pairs(workspace:GetDescendants()) do
			if object:IsA("BasePart") then
				for _, substring in pairs(object_name_substrings_Monsters) do
					if string.find(object.Name:lower(), substring) then
		
						DistanceEntities(object)
						AddHightlightModelDEntities(object)
					end
				end
			end
		end
	else
		ClearHightlightModelEntities()
		EspMonstersButton.Text = "Esp Entities Off"
		for _, object in pairs(workspace:GetDescendants()) do
			if object:IsA("BasePart") then
				for _, substring in pairs(object_name_substrings_Monsters) do
					if string.find(object.Name:lower(), substring) then
						
					end
				end
			end
		end
		end
end

local function DeleteSeek(Object)
	for _, Object in pairs(workspace:GetDescendants()) do
		if Object.Name == "trigger" then
			Object.CanTouch = false
			end
		end
end

local function AddHightlightModelDItem(object)
	-- Check if the object already has a Highlight
	if not object:FindFirstChildOfClass("Highlight") then
		local highlight = Instance.new("Highlight")
		highlight.FillColor = Color3.fromRGB(180, 180, 0)
		highlight.OutlineColor = Color3.fromRGB(255, 255, 127)
		highlight.FillTransparency = 0.75
		highlight.OutlineTransparency = 0.75
		highlight.Name = object.Name
		highlight.Parent = object
	end

	-- Check if the object already has a BillboardGui
	if not object:FindFirstChildOfClass("BillboardGui") then
		local billboard = Instance.new("BillboardGui")
		billboard.Size = UDim2.new(0.100, 0, 0.50, 0)
		billboard.MaxDistance = math.huge
		billboard.StudsOffset = Vector3.new(0, 0, 0)
		billboard.Enabled = true
		billboard.ResetOnSpawn = false
		billboard.AlwaysOnTop = true
		billboard.Name = object.Name
		billboard.Parent = object

		local textLabel = Instance.new("TextLabel")
		textLabel.Size = UDim2.new(1, 0, 1, 0)
		textLabel.BackgroundTransparency = 1
		textLabel.Text = object.Name
		textLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
		textLabel.Parent = billboard
	end
end



local function DistanceItem(object)
	for _, object in pairs(workspace:GetDescendants()) do
		if object:IsA("BillboardGui") then
			local textLabel = object.TextLabel

						if object.Parent:IsA("BasePart") then
							local distance = (humanoidRootPart.Position - object.Parent.Position).Magnitude
							textLabel.Text = object.Name .. " [Distance: " .. math.floor(distance) .. " Studs]"
						elseif object.Parent:IsA("Model") then
							local distance = (humanoidRootPart.Position - object.Parent:GetPivot().Position).Magnitude
							textLabel.Text = object.Name .. " [Distance: " .. math.floor(distance) .. " Studs]"
						end
					

		

	end
	end
end

local function ClearHightlightModelItem(Obj)
	for _, Obj in pairs(workspace:GetDescendants()) do
		if Obj:IsA("Highlight") or Obj:IsA("BillboardGui") then
			if Obj.Name:lower() == "Keyobtain" or Obj.Name:lower() == "ChestBox" or Obj.Name:lower() == "ChestBoxLocked" or Obj.Name:lower() == "candle" or Obj.Name:lower() == "crucifix" or Obj.Name:lower() == "lockpick" or Obj.Name:lower() == "skeletonkey" or Obj.Name:lower() == "vitamin" or Obj.Name:lower() == "flashlight" or Obj.Name:lower() == "fuseobtain" or Obj.Name:lower() == "glowstick" or Obj.Name:lower() == "shears" or Obj.Name:lower() == "pile" or Obj.Name:lower() == "battery" or Obj.Name:lower() == "bandage" then
				Obj:Destroy()
			end
		end
	end
end


local function HightLightModelsItem()
	EspItem = not EspItem
	if EspItem then
		EspItemButton.Text = "Esp Item On"
		local object_name_substrings = {"key","Keyobtain","candle","chestbox","chestboxlocked","crucifix","lockpick","skeletonkey","vitamin","flashlight","fuseobtain","glowstick","shears","pile","battery","bandage"}
		for _, object in pairs(workspace:GetDescendants()) do
			if object:IsA("Model") then
				for _, substring in pairs(object_name_substrings) do
					if string.find(object.Name:lower(), substring)
					then
						AddHightlightModelDItem(object)
						DistanceItem(object)
					end
				end
			end
		end
	else
		ClearHightlightModelItem()
		EspItemButton.Text = "Esp Item Off"
	end
end



-- Fonction pour ajouter un highlight et un BillboardGui au modèle du joueur
local function AddHighlightModelPlayer(object)
	-- Vérifie si l'objet a déjà un Highlight
	if not object:FindFirstChildOfClass("Highlight") then
		local highlight = Instance.new("Highlight")
		highlight.FillColor = Color3.fromRGB(85, 170, 0)
		highlight.OutlineColor = Color3.fromRGB(85, 255, 127)
		highlight.FillTransparency = 0.75
		highlight.OutlineTransparency = 0.75
		highlight.Name = "Player"
		highlight.Parent = object
	end

	-- Vérifie si l'objet a déjà un BillboardGui
	if not object:FindFirstChildOfClass("BillboardGui") then
		local billboard = Instance.new("BillboardGui")
		billboard.Size = UDim2.new(0.250, 0, 0.250, 0)
		billboard.StudsOffset = Vector3.new(0, 3, 0) -- Offset légèrement au-dessus de l'objet
		billboard.Enabled = true
		billboard.ResetOnSpawn = false
		billboard.AlwaysOnTop = true
		billboard.Name = "Player"
		billboard.Parent = object

		local textLabel = Instance.new("TextLabel")
		textLabel.Size = UDim2.new(1, 0, 1, 0)
		textLabel.BackgroundTransparency = 1
		textLabel.TextColor3 = Color3.fromRGB(85, 255, 0)
		textLabel.Text = object.Name
		textLabel.Parent = billboard
	end
end

-- Fonction pour calculer la distance entre le joueur et un objet, et l'afficher
local function UpdateDistancePlayer(humanoidRootPart)
	for _, object in pairs(workspace:GetDescendants()) do
		if object:IsA("BillboardGui") then
			local textLabel = object:FindFirstChildOfClass("TextLabel")
			if textLabel and object.Parent then
				-- Vérification que l'objet est bien un joueur
				local player = game.Players:GetPlayerFromCharacter(object.Parent.Parent)
				if player then
					-- Calcul de la distance pour les BasePart et les Model
					if object.Parent:IsA("BasePart") then
						local distance = (humanoidRootPart.Position - object.Parent.Position).Magnitude
						textLabel.Text = object.Parent.Name .. " [Distance: " .. math.floor(distance) .. " Studs]"
					elseif object.Parent:IsA("Model") and object.Parent.PrimaryPart then
						local distance = (humanoidRootPart.Position - object.Parent.PrimaryPart.Position).Magnitude
						textLabel.Text = object.Parent.Name .. " [Distance: " .. math.floor(distance) .. " Studs]"
					end
				end
			end
		end
	end
end



-- Fonction pour nettoyer les Highlights et BillboardGui existants
local function ClearHighlightModelPlayer()
	for _, obj in pairs(workspace:GetDescendants()) do
		if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
			if obj.Name:lower() == "Player" then
			obj:Destroy()
		end
	end
	end
	end

-- Fonction pour activer ou désactiver le ESP Player
local function HighlightModelsPlayers()
	EspPlayer = not EspPlayer
	if EspPlayer then
		EspPlayerButton.Text = "ESP Player On"
		local localPlayer = game.Players.LocalPlayer
		local humanoidRootPart = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
		if humanoidRootPart then
			for _, object in pairs(workspace:GetDescendants()) do
				if object:IsA("Model") and game.Players:FindFirstChild(object.Name) then
					AddHighlightModelPlayer(object)
					UpdateDistancePlayer(humanoidRootPart)
				end
			end
		end
	else
		ClearHighlightModelPlayer()
		EspPlayerButton.Text = "ESP Player Off"
	end
end



local function NoCooldownPrompt()
	NoCooldownPrompt = not NoCooldownPrompt
	if NoCooldownPrompt then
		NoCooldownButton.Text = "No Cooldown Prompt On"
			for _, prompt in pairs(workspace:GetDescendants()) do
				if prompt:IsA("ProximityPrompt") then
					prompt.HoldDuration = 0
				end
			end
		else
			NoCooldownButton.Text = "No Cooldown Prompt Off"
		end
	
end


-- Fonction pour activer automatiquement un Proximity Prompt
	local function autoActivateProximityPrompt(proximityPrompt)
		if proximityPrompt and proximityPrompt:IsA("ProximityPrompt") then
			-- Connecte une fonction vide lors du déclenchement du ProximityPrompt
			proximityPrompt.Triggered:Connect(function() end)

			-- Vérifie si le ProximityPrompt est affiché et activé
			proximityPrompt.PromptShown:Connect(function()
				if proximityPrompt.Enabled and not proximityPrompt.Active then
					-- Eviter la récursion infinie
					autoActivateProximityPrompt(proximityPrompt)
				end
			end)
		end
		end


	local function detectProximityPrompts(targetObject)
		-- Parcourt les descendants de targetObject (et non de workspace directement)
		for _, object in pairs(workspace:GetDescendants()) do
			if object:IsA("ProximityPrompt") then
				autoActivateProximityPrompt(object)
			end
		end
	end

	-- Fonction AutoLoot pour activer ou désactiver l'auto loot
	local function AutoLoot(targetObject)
		AutoLootV = not AutoLootV
		if AutoLootV then
			AutoCollectButton.Text = "Auto Loot On"
			-- Parcourt tous les Proximity Prompts dans l'objet cible
			detectProximityPrompts(targetObject)
		else
			AutoCollectButton.Text = "Auto Loot Off"
		end
	end
	
local function BigDistancePrompt()
	PromptDistanceV = not PromptDistanceV
	if PromptDistanceV then
		BigDistancePromptButton.Text = "Big Distance Prompt On"
		for _, prompt in pairs(workspace:GetDescendants()) do
			if prompt:IsA("ProximityPrompt") then
				prompt.MaxActivationDistance = 50
			end
		end
	else
		BigDistancePromptButton.Text = "Big Distance Prompt Off"
	end
end

local function toggleNoLag()
	NoLagV = not NoLagV 

	if NoLagV then
		NoLagButton.Text = "No Lag On"
		for _, part in pairs(workspace:GetDescendants()) do
			if part:IsA("BasePart") then
					if not part:GetAttribute("OriginalMaterial") then
						part:SetAttribute("OriginalMaterial", part.Material)
					end
					part.Material = Enum.Material.SmoothPlastic
				else
					local originalMaterial = part:GetAttribute("OriginalMaterial")
					if originalMaterial then
						part.Material = originalMaterial
				
				end
			end
		end
	else
		for _, part in pairs(workspace:GetDescendants()) do
			if part:IsA("BasePart") then
		local originalMaterial = part:GetAttribute("OriginalMaterial")
		if originalMaterial then
			part.Material = originalMaterial

		end
		NoLagButton.Text = "No Lag Off"

			end
		end
		end
end


local function toggleFullBright()
	FullBrightV = not FullBrightV 
	if FullBrightV then
		-- Activer FullBright
		game.Lighting.Brightness = 50
		game.Lighting.Ambient = Color3.new(1, 1, 1)
		game.Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
		FullBrightButton.Text = "FullBright On"  -- Couleur activée
	else

		game.Lighting.Brightness = originalLightingSettings.Brightness
		game.Lighting.Ambient = originalLightingSettings.Ambient
		game.Lighting.OutdoorAmbient = originalLightingSettings.OutdoorAmbient
		FullBrightButton.Text = "FullBright Off"  -- Couleur désactivée
	end
	 -- Inverser l'état
end


EspClosetButton.MouseButton1Click:Connect(HightLightModelsCloset)

EspItemButton.MouseButton1Click:Connect(HightLightModelsItem)

EspDoorButton.MouseButton1Click:Connect(HightLightModelsDoor)

EspMonstersButton.MouseButton1Click:Connect(HightLightModelsEntities)

NoCooldownButton.MouseButton1Click:Connect(NoCooldownPrompt)

NoSeekButton.MouseButton1Click:Connect(DeleteSeek)

NoLagButton.MouseButton1Click:Connect(toggleNoLag)

BigDistancePromptButton.MouseButton1Click:Connect(BigDistancePrompt)

FullBrightButton.MouseButton1Click:Connect(toggleFullBright)

ToggleFrameButton.MouseButton1Click:Connect(ToggleFrame)

EspPlayerButton.MouseButton1Click:Connect(HighlightModelsPlayers)

	AutoCollectButton.MouseButton1Click:Connect(AutoLoot)

MainButton.MouseButton1Click:Connect(function()
	showSection(ScrollingFrameMain)
end)

EspButton.MouseButton1Click:Connect(function()
	showSection(ScrollingFrameEsp)
end)

PlayerButton.MouseButton1Click:Connect(function()
	showSection(ScrollingFramePlayer)
end)

-- Fonction pour taguer toutes les portes générées

-- Fonction qui gère les événements quand un joueur touche une porte
    

        
-- Fonction pour connecter les événements à toutes les portes taguées


-- Fonction de gestion du RunService avec des optimisations pour éviter le lag
local lastExecutionTime = 0
RunService.Heartbeat:Connect(function(deltaTime)
    lastExecutionTime = lastExecutionTime + deltaTime
    if lastExecutionTime >= 0.1 then -- Exécuter toutes les 0.1 secondes
        lastExecutionTime = 0
        -- Votre code ici

    if AutoLootV then
        AutoCollectButton.Text = "Auto Loot On"
        -- Tu peux mettre ici des actions globales sans passer par "Touched"
    else
        AutoCollectButton.Text = "Auto Loot Off"
    end

    if FullBrightV then
        -- Activer FullBright si nécessaire
        if game.Lighting.Brightness <= 50 then
            game.Lighting.Brightness = 50
            game.Lighting.Ambient = Color3.new(1, 1, 1)
            game.Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
            FullBrightButton.Text = "FullBright On"
        end
    else
        -- Rétablir les paramètres d'éclairage originaux
        if game.Lighting.Brightness >= originalLightingSettings.Brightness then
            game.Lighting.Brightness = originalLightingSettings.Brightness
            game.Lighting.Ambient = originalLightingSettings.Ambient
            game.Lighting.OutdoorAmbient = originalLightingSettings.OutdoorAmbient
            FullBrightButton.Text = "FullBright Off"
        end
    end

    -- Gérer la distance des ProximityPrompts
    if PromptDistanceV then
        BigDistancePromptButton.Text = "Big Distance Prompt On"
        for _, prompt in pairs(workspace:GetDescendants()) do
            if prompt:IsA("ProximityPrompt") and prompt.MaxActivationDistance ~= 50 then
                prompt.MaxActivationDistance = 50
            end
        end
    else
        BigDistancePromptButton.Text = "Big Distance Prompt Off"
    end

    -- Gérer NoCooldownPrompt
    if NoCooldownPrompt then
        NoCooldownButton.Text = "No Cooldown Prompt On"
        for _, prompt in pairs(workspace:GetDescendants()) do
            if prompt:IsA("ProximityPrompt") and prompt.HoldDuration ~= 0 then
                prompt.HoldDuration = 0
            end
        end
    else
        NoCooldownButton.Text = "No Cooldown Prompt Off"
    end

    -- NoLag Mode
    if NoLagV then
        NoLagButton.Text = "No Lag On"
        for _, part in pairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and part.Material ~= Enum.Material.SmoothPlastic then
                if not part:GetAttribute("OriginalMaterial") then
                    part:SetAttribute("OriginalMaterial", part.Material)
                end
                part.Material = Enum.Material.SmoothPlastic
            end
        end
    else
        for _, part in pairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") then
                local originalMaterial = part:GetAttribute("OriginalMaterial")
                if originalMaterial then
                    part.Material = originalMaterial
                end
            end
        end
        NoLagButton.Text = "No Lag Off"
    end

    -- EspCloset
    if EspCloset then
        EspClosetButton.Text = "Esp Closet On"
        local object_name_substrings = {"wardrobe","backdoor_wardrobe","bed","beds"}
        for _, object in pairs(workspace:GetDescendants()) do
            if object:IsA("Model") then
                for _, substring in pairs(object_name_substrings) do
                    if string.find(object.Name:lower(), substring) then
                        AddHightlightModelCloset(object)
                        UpdateClosetDistance(object)
                    end
                end
            end
        end
    else
        ClearHightlightModelCloset()
        EspClosetButton.Text = "Esp Closet Off"
    end

    -- EspDoor
    if EspDoor then
        EspDoorButton.Text = "Esp Door On"
        local object_name_substrings = {"door","sideroomdupe"}
        for _, object in pairs(workspace:GetDescendants()) do
            if object:IsA("MeshPart") then
if object:IsA("MeshPart").Object.Name then return end
                for _, substring in pairs(object_name_substrings) do
                    if string.find(object.Name:lower(), substring) then
                        AddHightlightModelDoor(object)
                        UpdateDoorDistance(object)
                    end
                end
            end
        end
    else
        ClearHightlightModelDoor()
        EspDoorButton.Text = "Esp Door Off"
    end

    -- EspMonsters
    if EspMonsters then
        EspMonstersButton.Text = "Esp Entities On"
        for _, object in pairs(workspace:GetDescendants()) do
            if object:IsA("BasePart") then
                for _, substring in pairs(object_name_substrings_Monsters) do
                    if string.find(object.Name:lower(), substring) then
                        DistanceEntities(object)
                        AddHightlightModelDEntities(object)
                    end
                end
            end
        end
    else
        ClearHightlightModelEntities()
        EspMonstersButton.Text = "Esp Entities Off"
        for _, object in pairs(workspace:GetDescendants()) do
            if object:IsA("BasePart") then
                for _, substring in pairs(object_name_substrings_Monsters) do
                    if string.find(object.Name:lower(), substring) then
                        
                    end
                end
            end
        end
    end

    -- EspItem
    if EspItem then
        EspItemButton.Text = "Esp Item On"
        local object_name_substrings = {"key","ChestBox","ChestBoxLocked", "candle", "crucifix", "lockpick", "skeletonkey", "vitamin", "flashlight", "fuseobtain", "glowstick", "shears", "pile", "battery", "bandage"}
        for _, object in pairs(workspace:GetDescendants()) do
            if object:IsA("Model") then
                for _, substring in pairs(object_name_substrings) do
                    if string.find(object.Name:lower(), substring) then
                        AddHightlightModelDItem(object)
                        DistanceItem(object)
                    end
                end
            end
        end
    else
        ClearHightlightModelItem()
        EspItemButton.Text = "Esp Item Off"
    end
if player then
        -- Remplacer ce bloc avec les actions à effectuer sur les portes
        if AutoLootV then
            AutoCollectButton.Text = "Auto Loot On"
            detectProximityPrompts(hit)
            autoActivateProximityPrompt(hit)
        else
            AutoCollectButton.Text = "Auto Loot Off"
        end
if EspPlayer then
            EspPlayerButton.Text = "ESP Player On"
            local localPlayer = game.Players.LocalPlayer
            local humanoidRootPart = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                for _, object in pairs(workspace:GetDescendants()) do
                    if object:IsA("Model") and game.Players:FindFirstChild(object.Name) then
                        AddHighlightModelPlayer(object)
                        UpdateDistancePlayer(humanoidRootPart)
                    end
                end
            end
        else
            ClearHighlightModelPlayer()
            EspPlayerButton.Text = "ESP Player Off"
        end

        -- Autres fonctionnalités (FullBright, PromptDistanceV, etc.)
    end
end
end)

-- Appeler cette fonction à chaque génération de porte
