local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")

-- Supprimer l'ancien GUI si présent
if player.PlayerGui:FindFirstChild("GuiPlayer") then
    player.PlayerGui.GuiPlayer:Destroy()
end

-- Création du GUI
local screenGui = Instance.new("ScreenGui", player.PlayerGui)
screenGui.Name = "GuiPlayer"
screenGui.ResetOnSpawn = false

-- Main Frame
local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0.25, 0, 0.75, 0)
frame.Position = UDim2.new(0.7, -90, 0.2, 0)
frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
frame.BackgroundTransparency = 0.25
frame.Visible = false

-- Gradient sur le Frame
local gradient = Instance.new("UIGradient", frame)
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 60, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(90, 90, 90))
}

-- UI Stroke et Coin arrondi pour le Frame
local uistroke = Instance.new("UIStroke", frame)
uistroke.Thickness = 3
uistroke.Color = Color3.fromRGB(20, 20, 20)
uistroke.LineJoinMode = Enum.LineJoinMode.Round

local uicorner = Instance.new("UICorner", frame)
uicorner.CornerRadius = UDim.new(0.1, 0)

-- Bouton pour afficher/masquer le GUI
local toggleButton = Instance.new("TextButton", screenGui)
toggleButton.Size = UDim2.new(0, 100, 0, 25)
toggleButton.Position = UDim2.new(0.9, -60, 0.2, 0)
toggleButton.Text = "Toggle Menu"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 18
toggleButton.BackgroundColor3 = Color3.fromRGB(85, 170, 255)

-- Gradient sur le bouton toggleButton
local buttonGradient = Instance.new("UIGradient", toggleButton)
buttonGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(85, 170, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(65, 150, 255))
}

-- Sidebar Frame à gauche
local sidebarFrame = Instance.new("Frame", screenGui)
sidebarFrame.Size = UDim2.new(0.2, 0, 0.75, 0)
sidebarFrame.Position = UDim2.new(0.5, -90, 0.2, 0)
sidebarFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
sidebarFrame.BackgroundTransparency = 0.25
sidebarFrame.Visible = false

-- Gradient sur la sidebarFrame
local sidebarGradient = Instance.new("UIGradient", sidebarFrame)
sidebarGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(40, 40, 40)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(70, 70, 70))
}

-- Scrolling Frame dans sidebar
local sidebarScrollingFrame = Instance.new("ScrollingFrame", sidebarFrame)
sidebarScrollingFrame.Size = UDim2.new(1, 0, 1, 0)
sidebarScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 800)
sidebarScrollingFrame.ScrollBarThickness = 8
sidebarScrollingFrame.BackgroundTransparency = 1

-- Frame des boutons ESP
local scrollingframeEsp = Instance.new("ScrollingFrame", frame)
scrollingframeEsp.Size = UDim2.new(1, 0, 1, 0)
scrollingframeEsp.CanvasSize = UDim2.new(0, 0, 0, 800)
scrollingframeEsp.ScrollBarThickness = 8
scrollingframeEsp.BackgroundTransparency = 1
scrollingframeEsp.Visible = false

-- Main Scrolling Frame
local scrollingFrame = Instance.new("ScrollingFrame", frame)
scrollingFrame.Size = UDim2.new(1, 0, 1, 0)
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 800)
scrollingFrame.ScrollBarThickness = 8
scrollingFrame.BackgroundTransparency = 1

-- UIListLayout pour organiser les boutons dans la sidebarFrame
local sidebarListLayout = Instance.new("UIListLayout", sidebarScrollingFrame)
sidebarListLayout.SortOrder = Enum.SortOrder.LayoutOrder
sidebarListLayout.Padding = UDim.new(0, 10)

local frameListLayout = Instance.new("UIListLayout", scrollingFrame)
frameListLayout.SortOrder = Enum.SortOrder.LayoutOrder
frameListLayout.Padding = UDim.new(0, 10)

-- Fonction pour créer des boutons
local function createButton(text, parent)
    local button = Instance.new("TextButton", parent)
    button.Size = UDim2.new(0.90, 0, 0, 50)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 16
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

    -- Gradient sur chaque bouton
    local buttonGradient = Instance.new("UIGradient", button)
    buttonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(70, 70, 70)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 100))
    }

    local buttonStroke = uistroke:Clone()
    buttonStroke.Parent = button

    local buttonCorner = uicorner:Clone()
    buttonCorner.Parent = button

    return button
end

local espListLayout = Instance.new("UIListLayout", scrollingframeEsp)
espListLayout.SortOrder = Enum.SortOrder.LayoutOrder
espListLayout.Padding = UDim.new(0, 10)

-- Boutons dans la sidebar
local mainButton = createButton("Main", sidebarScrollingFrame)
local EspButton = createButton("ESP", sidebarScrollingFrame)
local PlayerButton = createButton("Player", sidebarScrollingFrame)
local GiveItemButton = createButton("Give Item", sidebarScrollingFrame)
local InfoButton = createButton("Information", sidebarScrollingFrame)
local RemoveGuiButton = createButton("Remove UI", sidebarScrollingFrame)

-- ESP bouton
local espButton = createButton("ESP Off", scrollingframeEsp)

-- Fonctionnalité ESP
local espActive = false
local espTargets = {}

-- Fonction pour récupérer les cibles ESP
local function updateEspTargets()
    espTargets = {}
    for _, model in pairs(workspace:GetDescendants()) do
        if model:IsA("Model") or model:IsA("Part") then
            local nameLower = model.Name:lower()
            if nameLower == "locker_large" or nameLower == "locker_small" or nameLower == "door" or
            nameLower == "sideroomdupe" or nameLower == "wardrobe" or nameLower == "gold" then
                table.insert(espTargets, model)
            end
        end
    end
end

-- Fonction pour activer les Highlights
local function highlightModel(model)
    if not model:FindFirstChildOfClass("Highlight") then
        local highlight = Instance.new("Highlight", model)
        highlight.FillColor = Color3.fromRGB(255, 0, 0)
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0.5

if not model:FindFirstChildOfClass("BillboardGui") then
        local billboard = Instance.new("BillboardGui")
        billboard.Parent = model
        billboard.Adornee = model
        billboard.AlwaysOnTop = true
        billboard.Size = UDim2.new(0, 100, 0, 50)
        billboard.StudsOffset = Vector3.new(0, 2, 0)

        local textLabel = Instance.new("TextLabel")
        textLabel.Parent = billboard
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text = model.Name
        textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    end
    end
end

-- Fonction pour afficher les ESP
local function highlightModels()
    for _, model in pairs(espTargets) do
        highlightModel(model)
    end
end

-- Fonction pour effacer les Highlights
local function clearHighlights()
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Highlight") and obj:IsA("BillboardGui") then
            obj:Destroy()
        end
    end
end

-- Toggle ESP
espButton.MouseButton1Click:Connect(function()
    espActive = not espActive
    if espActive then
        updateEspTargets()
        highlightModels()
        espButton.Text = "ESP On"
    else
        clearHighlights()
        espButton.Text = "ESP Off"
    end
end)

-- Toggle pour afficher/masquer le GUI
local function toggleFrame()
    frame.Visible = not frame.Visible
    sidebarFrame.Visible = not sidebarFrame.Visible
end

toggleButton.MouseButton1Click:Connect(toggleFrame)

-- Navigation entre les frames
EspButton.MouseButton1Click:Connect(function()
    scrollingframeEsp.Visible = true
    scrollingFrame.Visible = false
end)

mainButton.MouseButton1Click:Connect(function()
    scrollingFrame.Visible = true
    scrollingframeEsp.Visible = false
end)

-- Boucle de mise à jour continue
RunService.RenderStepped:Connect(function()
    if espActive then
        updateEspTargets()
        highlightModels()
    else
        clearHighlights()
    end
end)

-- Bouton pour supprimer le GUI
RemoveGuiButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

-- Code additionnel pour les autres boutons (Player, Give Item, Information)
PlayerButton.MouseButton1Click:Connect(function()
    print("Player Button Clicked")
    -- Ajoutez ici des fonctionnalités spécifiques pour le bouton Player
end)

GiveItemButton.MouseButton1Click:Connect(function()
    print("Give Item Button Clicked")
    -- Ajoutez ici des fonctionnalités spécifiques pour le bouton Give Item
end)

InfoButton.MouseButton1Click:Connect(function()
    print("Information Button Clicked")
    -- Ajoutez ici des informations ou des fonctionnalités spécifiques pour le bouton Information
end)
