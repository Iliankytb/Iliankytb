local BadgeService = game:GetService("BadgeService")
local badgeID = 2256123875769776--dread crucifix

print("My cheat work now coming soon new update Don't work on solara support mobile enabled support pc coming verryyy soon.")
local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")
local espTargets = {}
local originalMaterials = {}
local speedBoostActive = false
local autoHealActive = false
local autoLootActive = false
local espActive = false
local fullBrightActive = false
local highlightColor = Color3.fromRGB(255, 0, 0)
local highlightTransparency = 0.5
local originalMaterials = {} -- Cela ne devrait pas être réinitialisé dans la fonction activateNoLagV2
player.Character:SetAttribute("Climbing", false)
--local PlaceIdMines = 

--[[local function awardBadge()
    if not BadgeService:UserHasBadgeAsync(player.UserId, badgeID) then
        -- Award the badge if the player doesn't have it
        local success, result = pcall(function()
            BadgeService:AwardBadge(player.UserId, badgeID)
        end)

        if success then
            print("Badge awarded successfully!")
        else
            warn("Failed to award badge: " .. result)
        end
    else
        print("Player already has the badge.")
    end
end

awardBadge()--]]


if player.PlayerGui:FindFirstChild("GuiPlayer") then
    player.PlayerGui.GuiPlayer:Destroy()
script:destroy()
end

local screenGui = Instance.new("ScreenGui", player.PlayerGui)
screenGui.Name = "GuiPlayer"
screenGui.ResetOnSpawn = false

local TextWelcome = Instance.new("TextLabel", screenGui)
TextWelcome.Size = UDim2.new(1, 0, 0, 0)
TextWelcome.Position = UDim2.new(0, 0, 0, 0)
TextWelcome.BackgroundTransparency = 1
TextWelcome.TextSize = 14
TextWelcome.Text = "Thanks for using my script and thanks for supporting Iliankytb. Good luck 0.0!"


TextWelcome.Visible = true
wait(5)
TextWelcome.Visible = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0.35, 0, 0.5, 0)
frame.Position = UDim2.new(0.3, 0, 0.2, 0)
frame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
frame.BackgroundTransparency = 0.25
frame.Visible = false

local frameMonsterNotify = Instance.new("Frame", screenGui)
frameMonsterNotify.Size = UDim2.new(0.25, 0, 0.25, 0)
frameMonsterNotify.Position = UDim2.new(0.1, 0, 0.7, 0)
frameMonsterNotify.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
frameMonsterNotify.BackgroundTransparency = 1
frameMonsterNotify.Visible = false

local TextMonstersNotif = Instance.new("TextLabel", frameMonsterNotify)
TextMonstersNotif.Size = UDim2.new(1, 0, 1, 0)
TextMonstersNotif.Position = UDim2.new(0, 0, 0, 0)
TextMonstersNotif.BackgroundTransparency = 1
TextMonstersNotif.TextSize = 18
TextMonstersNotif.Text = ""

local gradient = Instance.new("UIGradient", frame)
gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 60, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(90, 90, 90))
}

-- UI Stroke et Coin arrondi pour le Frame
local uistroke = Instance.new("UIStroke", frame)

local frameMenu = Instance.new("Frame", screenGui)
frameMenu.Size = UDim2.new(0.2, 0, 0.5, 0)
frameMenu.Position = UDim2.new(0.15, 0, 0.2, 0)
frameMenu.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
frameMenu.BackgroundTransparency = 0.25
frameMenu.Visible = false

local uistroke1 = Instance.new("UIStroke", frameMenu)
uistroke1.Thickness = 3
uistroke1.Color = Color3.fromRGB(20, 20, 20)
uistroke1.LineJoinMode = Enum.LineJoinMode.Round

local uicorner1 = Instance.new("UICorner", frameMenu)
uicorner1.CornerRadius = UDim.new(0.1, 0)

local closeopen = Instance.new("TextButton", screenGui)
closeopen.Size = UDim2.new(0, 75, 0, 25)
closeopen.Position = UDim2.new(0.9, 0, 0.2, 0)
closeopen.Text = "Toggle Menu"
closeopen.TextColor3 = Color3.fromRGB(255, 255, 255)
closeopen.Font = Enum.Font.GothamBold
closeopen.TextSize = 18
closeopen.BackgroundColor3 = Color3.fromRGB(85, 170, 255)

-- Gradient sur le bouton closeopen
local buttonGradient = Instance.new("UIGradient", closeopen)
buttonGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(85, 170, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(65, 150, 255))
}

local scrollingFrameMenu = Instance.new("ScrollingFrame", frameMenu)
scrollingFrameMenu.Size = UDim2.new(1, 0, 1, 0)
scrollingFrameMenu.CanvasSize = UDim2.new(0, 0, 0, 800)
scrollingFrameMenu.ScrollBarThickness = 8
scrollingFrameMenu.BackgroundTransparency = 1


local listLayout1 = Instance.new("UIListLayout", scrollingFrameMenu)
listLayout1.SortOrder = Enum.SortOrder.LayoutOrder
listLayout1.Padding = UDim.new(0, 10)

local scrollingFrame = Instance.new("ScrollingFrame", frame)
scrollingFrame.Size = UDim2.new(1, 0, 1, 0)
scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 800)
scrollingFrame.ScrollBarThickness = 8
scrollingFrame.BackgroundTransparency = 1

local listLayout = Instance.new("UIListLayout", scrollingFrame)
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 10)

local scrollingFrameEsp = Instance.new("ScrollingFrame", frame)
scrollingFrameEsp.Size = UDim2.new(1, 0, 1, 0)
scrollingFrameEsp.CanvasSize = UDim2.new(0, 0, 0, 800)
scrollingFrameEsp.ScrollBarThickness = 8
scrollingFrameEsp.BackgroundTransparency = 1
scrollingFrameEsp.Visible = false

local listLayoutEsp = Instance.new("UIListLayout", scrollingFrameEsp)
listLayoutEsp.SortOrder = Enum.SortOrder.LayoutOrder
listLayoutEsp.Padding = UDim.new(0, 10)

local scrollingFramePlayer = Instance.new("ScrollingFrame", frame)
scrollingFramePlayer.Size = UDim2.new(1, 0, 1, 0)
scrollingFramePlayer.CanvasSize = UDim2.new(0, 0, 0, 800)
scrollingFramePlayer.ScrollBarThickness = 8
scrollingFramePlayer.BackgroundTransparency = 1
scrollingFramePlayer.Visible = false

local listLayoutPlayer = Instance.new("UIListLayout", scrollingFramePlayer)
listLayoutPlayer.SortOrder = Enum.SortOrder.LayoutOrder
listLayoutPlayer.Padding = UDim.new(0, 10)

local function createButton(text, parent)
    local button = Instance.new("TextButton", parent)
    button.Size = UDim2.new(0.90, 0, 0, 50)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 16
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

    local buttonGradient = Instance.new("UIGradient", button)
    buttonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(70, 70, 70)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 100))
    }
    return button
end

local MenuButton = createButton("Menu", scrollingFrameMenu)
local EspButton = createButton("ESP", scrollingFrameMenu)
local PlayerButton = createButton("Player Menu", scrollingFrameMenu)
local DupeItemButton = createButton("Dupe Item Menu (Coming Soon)", scrollingFrameMenu)
local InfoButton = createButton("Information (Coming Soon)", scrollingFrameMenu)
local SettingButton = createButton("Setting (Coming Soon)", scrollingFrameMenu)
local RemoveUiButton = createButton("Remove UI (Coming Soon)", scrollingFrameMenu)
local espButton = createButton("ESP Off", scrollingFrameEsp)
local NoCooldownPromptButton = createButton("No Cooldown Prompt Off", scrollingFrame)
local AutoLootButton = createButton("Auto Loot Off(coming Soon)", scrollingFrame)
local MonsterNotifyButton = createButton("Monsters Notify Off", scrollingFrame)
local NoLagButton = createButton("No Lag Off", scrollingFrame)
local FullBrightButton = createButton("Full Bright Off", scrollingFrame)
local GodModeButton = createButton("God Mode Off", scrollingFrame)
local NoScreechButton = createButton("No Screech Off", scrollingFrame)
local NoAmbushButton = createButton("No Ambush Off", scrollingFrame)
local SpeedBoostButton = createButton("Speed Boost Off", scrollingFramePlayer)

local function updateEspTargetsModels()
    espTargets = {}
    for _, model in pairs(workspace:GetDescendants()) do
        if model:IsA("Model") or model:IsA("Part") then
            local nameLower = model.Name:lower()
            if nameLower == "locker_large" 
            or nameLower == "locker_small" 
            or nameLower == "SeekRig"
or nameLower == "BackdoorLookman"
or nameLower == "KeyHitbox"
or nameLower == "KeyObtain"
or nameLower == "TimerModel"
            or nameLower == "SeekMovingNewClone"  
            or nameLower == "SeekRig"
            or nameLower == "eyes"
or nameLower == "TimeLever"
or nameLower == "BackdoorRush"
or nameLower == "leverforgate"
or nameLower == "KeyBackdoor"
or nameLower == "Backdoor_wardrobe"
or nameLower == "crucifix"
or nameLower == "candle"
or nameLower == "screechrig"
or nameLower == "A-60"
or nameLower == "A-120"
            or nameLower == "keyobtain" 
            or nameLower == "door" 
            or nameLower == "sideroomdupe" 
            or nameLower == "wardrobe" 
            or nameLower == "gold" 
            or nameLower == "goldpile"
            or nameLower == "pile"
            or nameLower == "minesgenerator" 
            or nameLower == "fuse" 
            or nameLower == "key" 
            or nameLower == "key_holder" 
            or nameLower == "rift" 
            or nameLower == "chest" 
            or nameLower == "lockpick" 
            or nameLower == "battery" 
            or nameLower == "flashlight" 
            or nameLower == "figurerig" 
            or nameLower == "figure" 
            or nameLower == "rushmoving" 
            or nameLower == "ambushmoving" 
            or nameLower == "screech" 
            or nameLower == "halt"
            or nameLower == "livehintbook"
      or nameLower == "book"
      or nameLower == "lid"
      or nameLower == "fuseobtain"
      or nameLower == "giggleceiling"
      or nameLower == "gloombatswarm"
      or nameLower == "topteeth"
or nameLower == "chestbox"
or nameLower == "lighter"
      or nameLower == "screechmoving"
            or nameLower == "drawercontainer" then
                table.insert(espTargets, model)
            end
        end
    end
end

local function highlightModel(model)
        if not model:FindFirstChildOfClass("Highlight") then
            local highlight = Instance.new("Highlight", model)
            highlight.FillColor = Color3.fromRGB(255, 170, 0)
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0.5
            highlight.FillColor = highlightColor
            highlight.FillTransparency = highlightTransparency
            highlight.OutlineTransparency = highlightTransparency
        end

        if not model:FindFirstChildOfClass("BillboardGui") then
            local billboard = Instance.new("BillboardGui", model)
            billboard.Adornee = model
            billboard.AlwaysOnTop = true
            billboard.Size = UDim2.new(0, 100, 0, 100)
            billboard.StudsOffset = Vector3.new(0, 2, 0)

            local textLabel = Instance.new("TextLabel", billboard)
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.Text = model.Name
            textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    end
end

local function clearHighlights()
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Highlight") or obj:IsA("BillboardGui") then
            obj:Destroy()
        end
    end
end

local function highlightModels()
    for _, model in pairs(espTargets) do
        highlightModel(model)
    end
end


local espEnabled = false
espButton.MouseButton1Click:Connect(function()
    espActive = not espActive
    if espActive then
        espButton.Text = "ESP On"
        updateEspTargetsModels()
        highlightModels()
    else
        espButton.Text = "ESP Off"
        clearHighlights()
    end
end)

local SpeedBoostV = false
local function SpeedBoost()
SpeedBoostV = not SpeedBoostV
if SpeedBoostV then
SpeedBoostButton.Text = "Speed Boost On"
local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = 22
end
end
else
SpeedBoostButton.Text = "Speed Boost Off"
end
end

SpeedBoostButton.MouseButton1Click:Connect(SpeedBoost)

local MobNotifV = false
local MobNotifV = false
local espTargetsMonsters = {}

local function MobNotif(model)
    MobNotifV = not MobNotifV
    espTargetsMonsters = {}

    if MobNotifV then
        frameMonsterNotify.Visible = true
        MonsterNotifyButton.Text = "Monster Notify On"
        
        -- Make sure the model has a valid Name property
        if model and model.Name then
            local nameLower = model.Name:lower()
            local monsterWarnings = {
                AmbushMoving = "Warning Ambush Spawned!",
                RushMoving = "Warning Rush Spawned!",
                HaltMoving = "Warning Halt Spawned!",
                FigureRig = "Warning Figure Spawned!",
Screech = "WarningScreech Spawned!",
                GiggleCeiling = "Warning Giggle Spawned!",
                GloombatSwarm = "Warning Gloombat Swarm Spawned!",
                eyes = "Warning Eyes Spawned!"
            }

            -- Display the appropriate notification if the monster is recognized
            if monsterWarnings[nameLower] then
                TextMonstersNotif.Text = monsterWarnings[nameLower]
                task.wait(3)  -- Use task.wait instead of wait
                TextMonstersNotif.Text = ""
            end

        end
    else
        MonsterNotifyButton.Text = "Monster Notify Off"
        frameMonsterNotify.Visible = false
    end
end

MonsterNotifyButton.MouseButton1Click:Connect(function()
    MobNotif() -- Vous devrez définir le modèle ici
end)

-- Settings  -- Replace with the name of your proximity prompt
local activationDistance = 10  -- Distance from the prompt where the player should auto-trigger

-- Variables
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local AutoLootV = false

-- Function to automatically trigger the proximity prompt
local function checkProximityPrompts()
if AutoLootV then
AutoLootButton.Text = "Auto Loot On"
    for _, prompt in pairs(workspace:GetDescendants()) do
        if prompt:IsA("ProximityPrompt") then
            local distance = (humanoidRootPart.Position - prompt.Parent.Position).Magnitude
            if distance <= activationDistance then
                prompt:InputHoldBegin()  -- Start holding to trigger the prompt
                wait(0.1)  -- Simulate holding for a short time
                prompt:InputHoldEnd()  -- Stop holding
            end
        end
    end
else
AutoLootButton.Text = "Auto Loot Off"
end
end

--[[AutoLootButton.MouseButton1Click:Connect(function()
AutoLootV = not AutoLootV
if AutoLootV then
checkProximityPrompts()
end
end)]]--
-- Main loop to continuously check for proximity prompts nearby


local noLagEnabled = false
NoLagButton.MouseButton1Click:Connect(function()
    noLagEnabled = not noLagEnabled
    if noLagEnabled then
        NoLagButton.Text = "No Lag On"
activateNoLagV2()
activateNoLag()
    else
        NoLagButton.Text = "No Lag Off"
deactivateNoLagV2()
deactivateNoLag()
    end
end)

local fullBrightEnabled = false
FullBrightButton.MouseButton1Click:Connect(function()
    fullBrightEnabled = not fullBrightEnabled
    if fullBrightEnabled then
        FullBrightButton.Text = "Full Bright On"
        game.Lighting.Brightness = 100
        game.Lighting.Ambient = Color3.new(1, 1, 1)
    else
        FullBrightButton.Text = "Full Bright Off"
        game.Lighting.Brightness = 1
        game.Lighting.Ambient = Color3.new(0.5, 0.5, 0.5)
    end
end)


local godModeEnabled = false


local function activateGodMode()
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.MaxHealth = 500
            humanoid.Health = humanoid.MaxHealth
        end
    end
end


local function deactivateGodMode()
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.MaxHealth = 100
            humanoid.Health = humanoid.MaxHealth
        end
    end
end

GodModeButton.MouseButton1Click:Connect(function()
    godModeEnabled = not godModeEnabled
    if godModeEnabled then
        GodModeButton.Text = "God Mode On"
        activateGodMode()
    else
        GodModeButton.Text = "God Mode Off"
        deactivateGodMode()
    end
end)

local function UpdatePlayer()
for _, target in pairs(game.Players:GetPlayers()) do
        if target ~= player then
            table.insert(espTargets, target)
        end
    end
end


local function activateNoLag()
    for _, descendant in pairs(workspace:GetDescendants()) do
        if descendant:IsA("ParticleEmitter") or descendant:IsA("Beam") or descendant:IsA("Trail") then
            descendant.Enabled = false
        end
    end
end


local function deactivateNoLag()
    for _, descendant in pairs(workspace:GetDescendants()) do
        if descendant:IsA("ParticleEmitter") or descendant:IsA("Beam") or descendant:IsA("Trail") then
            descendant.Enabled = true
        end
    end
end


local function activateNoLagV2()
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") then
            originalMaterials[part] = part.Material
            part.Material = Enum.Material.SmoothPlastic
        end
    end
end

local function deactivateNoLagV2()
    for part, material in pairs(originalMaterials) do
        part.Material = material
    end
end

local NoCPV = false
local function NoCooldownPrompt()
NoCPV = not NoCPV
if NoCPV then
NoCooldownPromptButton.Text = "No Cooldown Prompt On"
for _, obj in pairs(workspace:GetDescendants()) do
    if obj:IsA("ProximityPrompt") then
        obj.HoldDuration = 0
    end
end
else
NoCooldownPromptButton.Text = "No Cooldown Prompt Off"
for _, obj in pairs(workspace:GetDescendants()) do
    if obj:IsA("ProximityPrompt") then
        obj.HoldDuration = 1
end
end
end
end


NoCooldownPromptButton.MouseButton1Click:Connect(NoCooldownPrompt)

local NoScreechV = false
local function NoScreech()
NoScreechV = not NoScreechV
if NoScreechV then
game:GetService("ReplicatedStorage").GameData.EntityDisableScreech.Value = true
NoScreechButton.Text = "No Screech On"
else
game:GetService("ReplicatedStorage").GameData.EntityDisableScreech.Value = false
NoScreechButton.Text = "No Screech Off"
end
end

NoScreechButton.MouseButton1Click:Connect(NoScreech)

local NoAmbushV = false
local function NoAmbush()
NoAmbushV = not NoAmbushV
if NoAmbushV then
game:GetService("ReplicatedStorage").GameData.SpawnAmbush.Value = false
NoAmbushButton.Text = "No Ambush On"
else
game:GetService("ReplicatedStorage").GameData.SpawnAmbush.Value = true
NoAmbushButton.Text = "No Ambush Off"
end
end

NoAmbushButton.MouseButton1Click:Connect(NoAmbush)

local function toggleFrame()
    frame.Visible = not frame.Visible
    frameMenu.Visible = not frameMenu.Visible
end

closeopen.MouseButton1Click:Connect(toggleFrame)

local function toggleSF()
scrollingFrameEsp.Visible = false
scrollingFrame.Visible = true
scrollingFramePlayer.Visible = false
end

MenuButton.MouseButton1Click:Connect(toggleSF)

local function toggleSFE()
scrollingFrameEsp.Visible = true
scrollingFrame.Visible = false
scrollingFramePlayer.Visible = false
end

EspButton.MouseButton1Click:Connect(toggleSFE)

local function toggleSFP()
scrollingFrameEsp.Visible = false
scrollingFrame.Visible = false
scrollingFramePlayer.Visible = true
end

PlayerButton.MouseButton1Click:Connect(toggleSFP)


local userInputService = game:GetService("UserInputService")


local function toggleFrame()
    frame.Visible = not frame.Visible -- Inverse l'état de visibilité de la frame
    
    if frame.Visible == true then
        userInputService.MouseBehavior = Enum.MouseBehavior.Default
    else
        -- Si la frame est fermée, bloque la souris au centre de l'écran
        userInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
    end
end

-- Détection de la touche (ex. touche "F" pour ouvrir/fermer la frame)
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed then
        if input.KeyCode == Enum.KeyCode.Q then
            toggleFrame()
        end
    end
end)


RunService.RenderStepped:Connect(function()
player.Character:SetAttribute("Climbing", false)
task.wait(1.15)
--[[if AutoLootV then
checkProximityPrompts()
end]]--
if SpeedBoostV then
SpeedBoostButton.Text = "Speed Boost On"
local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = 22
end
end
else
SpeedBoostButton.Text = "Speed Boost Off"
end
espTargetsMonsters = {}
    if MobNotifV then
        frameMonsterNotify.Visible = true
        MonsterNotifyButton.Text = "Monster Notify On"
        
        -- Make sure the model has a valid Name property
        if model and model.Name then
            local nameLower = model.Name:lower()
            local monsterWarnings = {
                AmbushMoving = "Warning Ambush Spawned!",
                RushMoving = "Warning Rush Spawned!",
                HaltMoving = "Warning Halt Spawned!",
                FigureRig = "Warning Figure Spawned!",
Screech = "WarningScreech Spawned!",
                GiggleCeiling = "Warning Giggle Spawned!",
                GloombatSwarm = "Warning Gloombat Swarm Spawned!",
                eyes = "Warning Eyes Spawned!"
            }

            -- Display the appropriate notification if the monster is recognized
            if monsterWarnings[nameLower] then
                TextMonstersNotif.Text = monsterWarnings[nameLower]
                task.wait(3)  -- Use task.wait instead of wait
                TextMonstersNotif.Text = ""
            end

        end
    else
        MonsterNotifyButton.Text = "Monster Notify Off"
        frameMonsterNotify.Visible = false
    end

if NoCPV then
NoCooldownPromptButton.Text = "No Cooldown Prompt On"
for _, obj in pairs(workspace:GetDescendants()) do
    if obj:IsA("ProximityPrompt") then
        obj.HoldDuration = 0
    end
end
else
NoCooldownPromptButton.Text = "No Cooldown Prompt Off"
for _, obj in pairs(workspace:GetDescendants()) do
    if obj:IsA("ProximityPrompt") then
        obj.HoldDuration = 1
end
end
end
if espActive then
        espButton.Text = "ESP On"
        updateEspTargetsModels()
        highlightModels()
    else
        espButton.Text = "ESP Off"
        clearHighlights()
    end
if NoScreechV then
game:GetService("ReplicatedStorage").GameData.EntityDisableScreech.Value = true
NoScreechButton.Text = "No Screech On"
else
game:GetService("ReplicatedStorage").GameData.EntityDisableScreech.Value = false
NoScreechButton.Text = "No Screech Off"
end
if NoAmbushV then
game:GetService("ReplicatedStorage").GameData.SpawnAmbush.Value = false
NoAmbushButton.Text = "No Ambush On"
else
game:GetService("ReplicatedStorage").GameData.SpawnAmbush.Value = true
NoAmbushButton.Text = "No Ambush Off"
end
if noLagEnabled then
activateNoLagV2()
activateNoLag()
else
deactivateNoLagV2()
deactivateNoLag()
end
    espTargets = {}
    for _, target in pairs(game.Players:GetPlayers()) do
        if target ~= player then
            table.insert(espTargets, target)
        end
    end
    if fullBrightEnabled then
        FullBrightButton.Text = "Full Bright On"
        game.Lighting.Brightness = 100
        game.Lighting.Ambient = Color3.fromRGB(255, 255, 255)
    else
        FullBrightButton.Text = "Full Bright Off"
        game.Lighting.Brightness = 1
        game.Lighting.Ambient = Color3.fromRGB(127, 127, 127)
end

end)
