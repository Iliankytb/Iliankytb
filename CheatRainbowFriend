local Players = game:GetService("Players")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local RunService = game:GetService("RunService")

local function createUIElement(className, parent, properties)
	local element = Instance.new(className)
	element.Parent = parent
	for prop, value in pairs(properties) do
		element[prop] = value
	end
	return element
end


local Gui = Instance.new("ScreenGui",player.PlayerGui)
Gui.Enabled = true
Gui.ResetOnSpawn = false

local function createButton(text, parent)
	local button = createUIElement("TextButton", parent, {
		Size = UDim2.new(0.90, 0, 0, 50),
		Text = text,
		TextColor3 = Color3.fromRGB(255, 255, 255),
		Font = Enum.Font.GothamBold,
		TextSize = 16,
		BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	})
	createUIElement("UIGradient", button, {
		Color = ColorSequence.new{
			ColorSequenceKeypoint.new(0, Color3.fromRGB(70, 70, 70)),
			ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 100))
		}
	})

	createUIElement("UIStroke", button, {
		Thickness = 2,
		Color = Color3.fromRGB(20, 20, 20),
		LineJoinMode = Enum.LineJoinMode.Round
	})

	createUIElement("UICorner", button, { CornerRadius = UDim.new(0.15, 0) })


	return button
end
local Frame = Instance.new("Frame", Gui)
Frame.Size = UDim2.new(0.5, 0, 0.5, 0)
Frame.Position = UDim2.new(0.25, 0, 0.25, 0)
Frame.BackgroundTransparency = 0.2  -- Transparence légère
Frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)  -- Couleur plus douce
Frame.BorderMode = Enum.BorderMode.Middle
Frame.Visible = truelocal shadow1 = Instance.new("ImageLabel", FrameScroll)
shadow1.Size = UDim2.new(1, 20, 1, 20)
shadow1.Position = UDim2.new(-0.05, 0, -0.05, 0)
shadow1.BackgroundTransparency = 1
shadow1.Image = "rbxassetid://1316045217"  -- ID pour un effet d'ombre
shadow1.ImageColor3 = Color3.new(0, 0, 0)
shadow1.ImageTransparency = 0.5  -- Légère transparence pour l'ombre

local UiLayoutScrollingFrameMain2 = Instance.new("UIListLayout", ScrollingFrameMain)
UiLayoutScrollingFrameMain2.Padding = UDim.new(0, 10)
UiLayoutScrollingFrameMain2.SortOrder = Enum.SortOrder.LayoutOrder

-- Ajout de coins arrondis et bordure au Scrolling Frame principal
local UiCornerMain2 = Instance.new("UICorner", ScrollingFrameMain)
UiCornerMain2.CornerRadius = UDim.new(0, 12)

local UiStrokeMain2 = Instance.new("UIStroke", ScrollingFrameMain)
UiStrokeMain2.Thickness = 1.5  -- Bordure fine
UiStrokeMain2.Color = Color3.fromRGB(60, 130, 220)  -- Couleur adoucie
UiStrokeMain2.LineJoinMode = Enum.LineJoinMode.Round

local UiLayoutScrollingFrameEsp = Instance.new("UIListLayout", ScrollingFrameEsp)
UiLayoutScrollingFrameEsp.Padding = UDim.new(0, 10)
UiLayoutScrollingFrameEsp.SortOrder = Enum.SortOrder.LayoutOrder

local UiLayoutScrollingFramePlayer = Instance.new("UIListLayout", ScrollingFramePlayer)
UiLayoutScrollingFramePlayer.Padding = UDim.new(0, 10)
UiLayoutScrollingFramePlayer.SortOrder = Enum.SortOrder.LayoutOrder
local ScrollingFrameEsp = Instance.new("ScrollingFrame",FrameMain)
ScrollingFrameEsp.Size = UDim2.new(1, 0, 1, 0)
ScrollingFrameEsp.Position = UDim2.new(0, 0, 0, 0)
ScrollingFrameEsp.BackgroundTransparency = 1
ScrollingFrameEsp.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
ScrollingFrameEsp.Visible = false
ScrollingFrameEsp.CanvasSize = UDim2.new(0, 0, 0, 1000)

local ScrollingFramePlayer = Instance.new("ScrollingFrame",FrameMain)
ScrollingFramePlayer.Size = UDim2.new(1, 0, 1, 0)
ScrollingFramePlayer.Position = UDim2.new(0, 0, 0, 0)
ScrollingFramePlayer.BackgroundTransparency = 1
ScrollingFramePlayer.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
ScrollingFramePlayer.Visible = false
ScrollingFramePlayer.CanvasSize = UDim2.new(0, 0, 0, 1000)
local ScrollingFrameMain = Instance.new("ScrollingFrame", FrameMain)
ScrollingFrameMain.Size = UDim2.new(1, 0, 1, 0)
ScrollingFrameMain.Position = UDim2.new(0, 0, 0, 0)
ScrollingFrameMain.BackgroundTransparency = 1
ScrollingFrameMain.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
ScrollingFrameMain.Visible = true
ScrollingFrameMain.CanvasSize = UDim2.new(0, 0, 0, 1000)
local ToggleFrameButton = createUIElement("TextButton", Gui, {
	Size = UDim2.new(0, 100, 0, 25),
	Position = UDim2.new(0.85, 0, 0.05, 0),
	Text = "Toggle Cheat Menu",
	TextColor3 = Color3.fromRGB(255, 255, 255),
	Font = Enum.Font.GothamBold,
	TextSize = 15,
	BackgroundColor3 = Color3.fromRGB(85, 170, 255)
})local function showSection(sectionFrame)
	ScrollingFrameMain.Visible = false
	ScrollingFrameEsp.Visible = false
	ScrollingFramePlayer.Visible = false
	sectionFrame.Visible = true
end
-- Scrolling Frame
local ScrollingFrameScroll = Instance.new("ScrollingFrame", FrameScroll)
ScrollingFrameScroll.Size = UDim2.new(1, 0, 1, 0)
ScrollingFrameScroll.Position = UDim2.new(0, 0, 0, 0)
ScrollingFrameScroll.BackgroundTransparency = 1
ScrollingFrameScroll.Visible = true
ScrollingFrameScroll.CanvasSize = UDim2.new(0, 0, 0, 500)

local UiStroke = Instance.new("UIStroke", Frame)
UiStroke.Thickness = 1.5  -- Bordure fine
UiStroke.Color = Color3.fromRGB(80, 150, 250)  -- Bleu clair et doux
UiStroke.LineJoinMode = Enum.LineJoinMode.Round

-- Ajout de coins arrondis (Frame)
local UiCorner = Instance.new("UICorner", Frame)
UiCorner.CornerRadius = UDim.new(0, 15)  -- Coins plus arrondis

-- Frame pour Scrolling (FrameScroll)
local FrameScroll = Instance.new("Frame", Frame)
FrameScroll.Size = UDim2.new(0.5, 0, 1, 0)
FrameScroll.Position = UDim2.new(0, 0, 0, 0)
FrameScroll.BackgroundTransparency = 1
FrameScroll.Visible = true
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class TeleportPlayer : MonoBehaviour
{
    public GameObject player; // Le joueur à téléporter
    public string[] objectNames = { "LightBulb", "GasCanister" }; // Les noms des objets vers lesquels téléporter
    private List<GameObject> teleportTargets = new List<GameObject>();
    public bool canTeleport = false; // Booléen pour vérifier si le joueur peut se téléporter

    void Start()
    {
        // Récupérer tous les objets avec les noms donnés
        foreach (string objectName in objectNames)
        {
            GameObject[] foundObjects = GameObject.FindGameObjectsWithTag(objectName);
            teleportTargets.AddRange(foundObjects);
        }
    }

    // Méthode pour téléporter le joueur vers l'un des objets
    public void TeleportToRandomObject()
    {
        // Vérifier si la téléportation est autorisée
        if (!canTeleport)
        {
            Debug.Log("Téléportation désactivée.");
            return;
        }

        if (teleportTargets.Count > 0)
        {
            // Choisir un objet aléatoirement
            GameObject targetObject = teleportTargets[Random.Range(0, teleportTargets.Count)];

            // Téléporter le joueur à la position de cet objet
            player.transform.position = targetObject.transform.position;
            Debug.Log("Téléporté vers : " + targetObject.name);
        }
        else
        {
            Debug.Log("Aucun objet trouvé pour la téléportation.");
        }
    }

    void Update()
    {
        // Activer la téléportation en appuyant sur "T" si le booléen canTeleport est true
        if (Input.GetKeyDown(KeyCode.T))
        {
            TeleportToRandomObject();
        }
    }
}
