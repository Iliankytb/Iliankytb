
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local selectedTheme = "Default"
local Window = Rayfield:CreateWindow({
   Name = "Universal Hub Cheats - Script By Iliankytb",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Universal Hub Cheats",
   LoadingSubtitle = "Script By Iliankytb",
   Theme = selectedTheme, -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = "SaverUVHC", -- Create a custom folder for your hub/game
      FileName = "K"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
local InfoTab = Window:CreateTab("Info")
local PlayerTab = Window:CreateTab("Player")
local GameTab = Window:CreateTab("Game")
local EspTab = Window:CreateTab("Esp")
local AimbotTab = Window:CreateTab("Aimbot")
local DiscordTab = Window:CreateTab("Discord")
local SettingsTab = Window:CreateTab("Settings")
local ActiveSpeedBoost,ActiveNoclip,ActiveEspPlayers,ActiveDistanceEsp,ActivateFly,ActivateInfiniteJump,AlrActivatedFlyPC,ActiveNoCooldownPrompt,ActiveAimbot,HowAim,VerifyTeamColor,VerifyWall,ShootBot,InfiniteDistance,MaxDistanceForAimbot = false,false,false,false,false,false,false,false,false,"Camera",false,false,false,false,0
local ParagraphInfoServer = InfoTab:CreateParagraph({Title = "Info", Content = "Loading"})

Rayfield:Notify({
   Title = "Universal Version",
   Content = "V.0.10",
   Duration = 2.5,
   Image = "rewind",
})

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local IYMouse = Players.LocalPlayer:GetMouse()
local FLYING = false
local QEfly = true
local iyflyspeed = 1
local vehicleflyspeed = 1

local function sFLY(vfly)
	repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart") and Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	repeat wait() until IYMouse
	if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end

	local T = Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
	local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
	local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
	local SPEED = 0

	local function FLY()
		FLYING = true
		local BG = Instance.new('BodyGyro')
		local BV = Instance.new('BodyVelocity')
		BG.P = 9e4
		BG.Parent = T
		BV.Parent = T
		BG.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
		BG.CFrame = T.CFrame
		BV.Velocity = Vector3.new(0, 0, 0)
		BV.MaxForce = Vector3.new(9e9, 9e9, 9e9)
		task.spawn(function()
			repeat wait()
				if not vfly and Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
					Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
				end
				if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
					SPEED = 50
				elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
					SPEED = 0
				end
				if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
					BV.Velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
					lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
				elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
					BV.Velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
				else
					BV.Velocity = Vector3.new(0, 0, 0)
				end
				BG.CFrame = workspace.CurrentCamera.CoordinateFrame
			until not FLYING
			CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
			lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
			SPEED = 0
			BG:Destroy()
			BV:Destroy()
			if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
				Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
			end
		end)
	end
	flyKeyDown = IYMouse.KeyDown:Connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = (vfly and vehicleflyspeed or iyflyspeed)
		elseif KEY:lower() == 's' then
			CONTROL.B = - (vfly and vehicleflyspeed or iyflyspeed)
		elseif KEY:lower() == 'a' then
			CONTROL.L = - (vfly and vehicleflyspeed or iyflyspeed)
		elseif KEY:lower() == 'd' then 
			CONTROL.R = (vfly and vehicleflyspeed or iyflyspeed)
		elseif QEfly and KEY:lower() == 'e' then
			CONTROL.Q = (vfly and vehicleflyspeed or iyflyspeed)*2
		elseif QEfly and KEY:lower() == 'q' then
			CONTROL.E = -(vfly and vehicleflyspeed or iyflyspeed)*2
		end
		pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Track end)
	end)
	flyKeyUp = IYMouse.KeyUp:Connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = 0
		elseif KEY:lower() == 's' then
			CONTROL.B = 0
		elseif KEY:lower() == 'a' then
			CONTROL.L = 0
		elseif KEY:lower() == 'd' then
			CONTROL.R = 0
		elseif KEY:lower() == 'e' then
			CONTROL.Q = 0
		elseif KEY:lower() == 'q' then
			CONTROL.E = 0
		end
	end)
	FLY()
end

local function NOFLY()
	FLYING = false
	if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
	if Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
		Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
	end
	pcall(function() workspace.CurrentCamera.CameraType = Enum.CameraType.Custom end)
end

local velocityHandlerName = "BodyVelocity"
local gyroHandlerName = "BodyGyro"
local mfly1
local mfly2

local function UnMobileFly()
	pcall(function()
		FLYING = false
		local root = Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
		root:FindFirstChild(velocityHandlerName):Destroy()
		root:FindFirstChild(gyroHandlerName):Destroy()
		Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid").PlatformStand = false
		mfly1:Disconnect()
		mfly2:Disconnect()
	end)
end

local function MobileFly()
	UnMobileFly()
	FLYING = true

	local root = Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
	local camera = workspace.CurrentCamera
	local v3none = Vector3.new()
	local v3zero = Vector3.new(0, 0, 0)
	local v3inf = Vector3.new(9e9, 9e9, 9e9)

	local controlModule = require(Players.LocalPlayer.PlayerScripts:WaitForChild("PlayerModule"):WaitForChild("ControlModule"))
	local bv = Instance.new("BodyVelocity")
	bv.Name = velocityHandlerName
	bv.Parent = root
	bv.MaxForce = v3zero
	bv.Velocity = v3zero

	local bg = Instance.new("BodyGyro")
	bg.Name = gyroHandlerName
	bg.Parent = root
	bg.MaxTorque = v3inf
	bg.P = 1000
	bg.D = 50

	mfly1 = Players.LocalPlayer.CharacterAdded:Connect(function()
		local bv = Instance.new("BodyVelocity")
		bv.Name = velocityHandlerName
		bv.Parent = root
		bv.MaxForce = v3zero
		bv.Velocity = v3zero

		local bg = Instance.new("BodyGyro")
		bg.Name = gyroHandlerName
		bg.Parent = root
		bg.MaxTorque = v3inf
		bg.P = 1000
		bg.D = 50
	end)

	mfly2 = RunService.RenderStepped:Connect(function()
		root = Players.LocalPlayer.Character:WaitForChild("HumanoidRootPart")
		camera = workspace.CurrentCamera
		if Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid") and root and root:FindFirstChild(velocityHandlerName) and root:FindFirstChild(gyroHandlerName) then
			local humanoid = Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
			local VelocityHandler = root:FindFirstChild(velocityHandlerName)
			local GyroHandler = root:FindFirstChild(gyroHandlerName)

			VelocityHandler.MaxForce = v3inf
			GyroHandler.MaxTorque = v3inf
			humanoid.PlatformStand = true
			GyroHandler.CFrame = camera.CoordinateFrame
			VelocityHandler.Velocity = v3none

			local direction = controlModule:GetMoveVector()
			if direction.X > 0 then
				VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * ((iyflyspeed) * 50))
			end
			if direction.X < 0 then
				VelocityHandler.Velocity = VelocityHandler.Velocity + camera.CFrame.RightVector * (direction.X * ((iyflyspeed) * 50))
			end
			if direction.Z > 0 then
				VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * ((iyflyspeed) * 50))
			end
			if direction.Z < 0 then
				VelocityHandler.Velocity = VelocityHandler.Velocity - camera.CFrame.LookVector * (direction.Z * ((iyflyspeed) * 50))
			end
		end
	end)
end

local function CreateEsp(Char, Color, Text,Parent,number)
	if not Char then return end
	if Char:FindFirstChild("ESP") and Char:FindFirstChildOfClass("Highlight") then return end
	local highlight = Char:FindFirstChildOfClass("Highlight") or Instance.new("Highlight")
	highlight.Name = "ESP_Highlight"
highlight.Adornee = Char
highlight.FillColor = Color
highlight.FillTransparency = 1
highlight.OutlineColor = Color
highlight.OutlineTransparency = 0
highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
highlight.Enabled = true
	highlight.Parent = Char

	
	local billboard = Char:FindFirstChild("ESP") or Instance.new("BillboardGui")
	billboard.Name = "ESP"
	billboard.Size = UDim2.new(0, 50, 0, 25)
	billboard.AlwaysOnTop = true
	billboard.StudsOffset = Vector3.new(0, number, 0)
	billboard.Adornee = Parent
	billboard.Enabled = true
	billboard.Parent = Parent

	
	local label = billboard:FindFirstChildOfClass("TextLabel") or Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = Text
	label.TextColor3 = Color
	label.TextScaled = true
	label.Parent = billboard

	task.spawn(function()
		local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera

while highlight and billboard and Parent and Parent.Parent do
	local cameraPosition = Camera and Camera.CFrame.Position
	if cameraPosition and Parent and Parent:IsA("BasePart") then
	local distance = (cameraPosition - Parent.Position).Magnitude
				task.spawn(function()
if ActiveDistanceEsp then
label.Text = Text.." ("..math.floor(distance + 0.5).." m)"
else
label.Text = Text
end
end)

	end

	RunService.Heartbeat:Wait()
end

	end)
end

local function KeepEsp(Char,Parent)
	if Char and Char:FindFirstChildOfClass("Highlight") and Parent:FindFirstChildOfClass("BillboardGui") then
		Char:FindFirstChildOfClass("Highlight"):Destroy()
		Parent:FindFirstChildOfClass("BillboardGui"):Destroy()
	end
end

local function getServerInfo()
	local Players = game:GetService("Players")
	local playerCount = #Players:GetPlayers()
local maxPlayers = game:GetService("Players").MaxPlayers
local isStudio = game:GetService("RunService"):IsStudio()

	return {
		PlaceId = game.PlaceId,
		JobId = game.JobId,
		IsStudio = isStudio,
		CurrentPlayers = playerCount,
MaxPlayers =maxPlayers
	}
end


local function copyToClipboard(text)
    if setclipboard then
        setclipboard(text)
    else
        warn("setclipboard is not supported in this environment.")
    end
end
local DiscordLink = DiscordTab:CreateButton({
   Name = "Discord Link",
   Callback = function()
copyToClipboard("https://discord.gg/E2TqYRsRP4")
end,
})

local PlayerActiveEspPlayersToggle = EspTab:CreateToggle({
   Name = "Esp Players",
   CurrentValue = false,
   Flag = "ButtonEspPlayers", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActiveEspPlayers = Value 
task.spawn(function()
while ActiveEspPlayers do 
task.spawn(function()
for _, Players in pairs(Game:GetService("Players"):GetChildren()) do
if Players:isA("Player") and Players.Character and Players.Character:FindFirstChild("Head") and not Players.Character:FindFirstChildOfClass("Highlight") and not Players.Character.Head:FindFirstChildOfClass("BillboardGui") then
CreateEsp(Players.Character,Color3.fromRGB(255,255,255),Players.Name,Players.Character.Head,2)
end
end
end)
task.wait(0.1)
end
for _, Players in pairs(Game:GetService("Players"):GetChildren()) do
if Players:isA("Player") and Players.Character and Players.Character:FindFirstChild("Head") and  Players.Character:FindFirstChildOfClass("Highlight") and  Players.Character.Head:FindFirstChildOfClass("BillboardGui") then
KeepEsp(Players.Character,Players.Character.Head)
end
end
end)
end,
})

local PlayerNoclipToggle = PlayerTab:CreateToggle({
   Name = "Noclip",
   CurrentValue = false,
   Flag = "ButtonNoclip", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActiveNoclip = Value 
task.spawn(function()
while ActiveNoclip do 
task.spawn(function()
if Game.Players.LocalPlayer.Character then
for _, Parts in pairs(Game.Players.LocalPlayer.Character:GetDescendants()) do
if Parts:isA("BasePart") and Parts.CanCollide then
Parts.CanCollide = false
end
end
end
end)
task.wait(0.1)
end 
if Game.Players.LocalPlayer.Character then
for _, Parts in pairs(Game.Players.LocalPlayer.Character:GetDescendants()) do
if Parts:isA("BasePart") and not Parts.CanCollide then
Parts.CanCollide = true
end
end
end
end)
end,
})

local PlayerFlySpeedSlider = PlayerTab:CreateSlider({
   Name = "Fly Speed(Recommended to put 1 or below 5!)",
   Range = {0, 10},
   Increment = 0.1,
   Suffix = "Fly Speed",
   CurrentValue = 1,
   Flag = "Slider2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
CurrentValue = Value
iyflyspeed = Value
end,  iyflyspeed = CurrentValue,
})

local PlayerFlyToggle = PlayerTab:CreateToggle({
   Name = "Fly",
   CurrentValue = false,
   Flag = "ButtonFly", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActivateFly = Value 
task.spawn(function()
if not FLYING and ActivateFly then
			if UserInputService.TouchEnabled then
				MobileFly()
			else
task.spawn(function()
if not AlrActivatedFlyPC then 
AlrActivatedFlyPC = true
Rayfield:Notify({
   Title = "Fly",
   Content = "When you enable to fly you can press F to fly/unfly (it won't disable the button!)",
   Duration = 5,
   Image = "rewind",
})
end
end)
				NOFLY()
				wait()
				sFLY()
			end
		elseif FLYING and not ActivateFly then
			if UserInputService.TouchEnabled then
				UnMobileFly()
			else
				NOFLY()
			end
		end
end)
end,
})

local PlayerInfiniteJumpToggle = PlayerTab:CreateToggle({
   Name = "Infinite Jump",
   CurrentValue = false,
   Flag = "ButtonInfiniteJump", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActivateInfiniteJump = Value 
while ActivateInfiniteJump do
local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
		if ActivateInfiniteJump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
		end
	end)
wait(0.1)
end
end,
})

UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.KeyCode == Enum.KeyCode.F then
		if not FLYING and ActivateFly then
			if UserInputService.TouchEnabled then
				MobileFly()
			else
				NOFLY()
				wait()
				sFLY()
			end
		elseif FLYING and ActivateFly then
			if UserInputService.TouchEnabled then
				UnMobileFly()
			else
				NOFLY()
			end
		end
	end
end)

local ValueSpeed = 16
local OldSpeed = Game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
local PlayerSpeedSlider = PlayerTab:CreateSlider({
   Name = "Player Speed(Recommended to put it below 500!)",
   Range = {0, 1000},
   Increment = 1,
   Suffix = "Speeds",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
CurrentValue = Value
ValueSpeed = Value
end,  ValueSpeed = CurrentValue,
})

local PlayerActiveModifyingSpeedToggle = PlayerTab:CreateToggle({
   Name = "Active Modifying Player Speed",
   CurrentValue = false,
   Flag = "ButtonSpeed", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActiveSpeedBoost = Value 
task.spawn(function()
while ActiveSpeedBoost do 
task.spawn(function()
Game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = ValueSpeed 
Game.Players.LocalPlayer.Character.Humanoid:SetAttribute("BaseSpeed",ValueSpeed)
end)
task.wait(0.1)
end
Game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = OldSpeed 
Game.Players.LocalPlayer.Character.Humanoid:SetAttribute("BaseSpeed",OldSpeed)
end)
end,
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local function getDistance(a, b)
	return (a.Position - b.Position).Magnitude
end

local function hasClearLineOfSight(from, to)
	local rayParams = RaycastParams.new()
	rayParams.FilterType = Enum.RaycastFilterType.Blacklist
	rayParams.FilterDescendantsInstances = {LocalPlayer.Character}
	local result = workspace:Raycast(from.Position, (to.Position - from.Position), rayParams)
	return not (result and result.Instance and result.Instance.Transparency < 1)
end

local function isValidTarget(char)
	if not char or char == LocalPlayer.Character then return false end
	local humanoid = char:FindFirstChildWhichIsA("Humanoid")
	local head = char:FindFirstChild("Head")
	if not humanoid or not head then return false end
	if humanoid.Health == 0 then return false end
	if VerifyTeamColor then
		local player = Players:GetPlayerFromCharacter(char)
		if player and player.TeamColor == LocalPlayer.TeamColor then return false end
	end
	if VerifyWall then
		local myHead = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Head")
		if myHead and not hasClearLineOfSight(myHead, head) then return false end
	end
	return true
end

local function aimToClosestTarget()
	local myCharacter = LocalPlayer.Character
	local myHead = myCharacter and myCharacter:FindFirstChild("Head")
	local myRoot = myCharacter and myCharacter:FindFirstChild("HumanoidRootPart")
	if not (myHead and myRoot) then return end

	local closestTarget = nil
	local shortestDistance = 0
if InfiniteDistance then
shortestDistance = math.huge
else
shortestDistance = MaxDistanceForAimbot
end 
if ShootBot then
	for _, instance in pairs(workspace:GetDescendants()) do
		if instance:IsA("Model") and instance:FindFirstChildOfClass("Humanoid") and instance:FindFirstChildOfClass("Humanoid").Health > 0 then
if isValidTarget(instance) then
			local head = instance:FindFirstChild("Head")
			if head then
				local distance = getDistance(myHead, head)
				if distance < shortestDistance then
					shortestDistance = distance
					closestTarget = head
				end
end
			end
		end
	end
else
for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
	local character = player.Character
	local humanoid = character and character:FindFirstChildOfClass("Humanoid")
	local head = character and character:FindFirstChild("Head")

	if humanoid and humanoid.Health > 0 and head and isValidTarget(character) then
		local distance = getDistance(myHead, head)
		if distance < shortestDistance then
			shortestDistance = distance
			closestTarget = head
		end
	end
end

end
	if closestTarget then
		if HowAim == "Camera" then
			Camera.CFrame = CFrame.new(Camera.CFrame.Position, closestTarget.Position)
		elseif HowAim == "Character" then
			local lookVector = (closestTarget.Position - myRoot.Position).Unit
			local newCFrame = CFrame.new(myRoot.Position, myRoot.Position + Vector3.new(lookVector.X, 0, lookVector.Z))
			myRoot.CFrame = newCFrame
		end
	end
end



local PlayerActiveAimbot = AimbotTab:CreateToggle({
   Name = "Active Aimbot",
   CurrentValue = false,
   Flag = "ButtonAimbot", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActiveAimbot = Value 
end,
})

local AimbotDropdown = AimbotTab:CreateDropdown({
    Name = "Aimbot Settings",
    Options = {"Verify Wall", "Verify Team Color","Target Bot","Infinite Aimbot Distance"},
    CurrentOption = {},
    MultipleOptions = true,
    Flag = "AimbotDropdown2",
    Callback = function(Options)
        VerifyWall = table.find(Options, "Verify Wall") ~= nil
        VerifyTeamColor = table.find(Options, "Verify Team Color") ~= nil
      ShootBot = table.find(Options, "Target Bot") ~= nil
 InfiniteDistance = table.find(Options, "Infinite Aimbot Distance") ~= nil
    end,
})


local AimbotDropdown2 = AimbotTab:CreateDropdown({
    Name = "How Aim",
    Options = {"Camera", "Character"},
    CurrentOption = {"Camera"},
    MultipleOptions = false,
    Flag = "AimbotDropdown",
    Callback = function(Options)
        if Options[1] == "Camera" then
            HowAim = "Camera"
        elseif Options[1] == "Character" then
            HowAim = "Character"
        end
    end,
})

local DistanceAimbotSlider = PlayerTab:CreateSlider({
   Name = "Distance Aimbot(Work Only if Infinite Aimbot Distance Is Disabled!)",
   Range = {0, 99999999},
   Increment = 0.1,
   Suffix = "Fly Speed",
   CurrentValue = 1,
   Flag = "SliderAIMBOT", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
CurrentValue = Value
MaxDistanceForAimbot = Value
end,  MaxDistanceForAimbot = CurrentValue,
})

local ButtonLoadForsakenCheat = GameTab:CreateButton({
   Name = "Forsaken Cheat Iliankytb",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/BestForsakenScript"))()
end,
})

local ButtonLoadFiveNightsCheat = GameTab:CreateButton({
   Name = "Five Nights:Hunted Cheat Iliankytb",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/CheatFiveNightHunted"))()
end,
})


local ButtonLoadRFTwoCheat = GameTab:CreateButton({
   Name = "Rainbow Friends 2 Cheat Iliankytb",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/BestRainbowFriendsTwo"))()
end,
})
local ButtonLoadDoorsCheat = GameTab:CreateButton({
   Name = "Doors Cheat Iliankytb",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/NewBestDoorsScriptIliankytb"))()
end,
})
local ButtonLoadHZCheat = GameTab:CreateButton({
   Name = "Hunty Zombies Cheat Iliankytb",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/BestFreeHuntyZombies"))()
end,
})
--[[local PlaceId = InfoTab:CreateButton({
   Name = "Copy PlaceId",
   Callback = function()
copyToClipboard(game.PlaceId)
end,
})]]
local ButtonLoadInkGameCheat = GameTab:CreateButton({
   Name = "Ink Game Cheat Iliankytb",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/BestInkGameCheat"))()
end,
})
local ButtonLoadEvadeCheat = GameTab:CreateButton({
   Name = "Evade Cheat Iliankytb",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/NewbestEvadeCheat"))()
end,
})

local ButtonLoadEvadeCheat = GameTab:CreateButton({
   Name = "Rainbow Friend Chapter 1 Cheat Iliankytb",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/BestRainbowFriendOne"))()
end,
})
local ButtonLoadGAGCheat = GameTab:CreateButton({
   Name = "Grow A Garden Cheat Iliankytb(Coming Soon)",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/cheatgrowagarden"))()
end,
})
local ButtonLoad99NightsInTheForestCheat = GameTab:CreateButton({
   Name = "99 Nights in the forest Cheat Iliankytb",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/Best99NightsInTheForest"))()
end,
})
local ButtonLoadInfiniteYieldCheat = PlayerTab:CreateButton({
   Name = "Infinite Yield",
     Callback = function(Value)
loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
end,
})
local ButtonLoadPiggyCheat = GameTab:CreateButton({
   Name = "Piggy Cheat Iliankytb",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/CheatPiggy"))()
end,
})
local ButtonLoadAntarcticaExpeditionCheat = GameTab:CreateButton({
   Name = "Antarctica Expedition Cheat Iliankytb",
     Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/BestAntarticaExpedition"))()
end,
})
local ButtonLoadBloxFruitCheat = GameTab:CreateButton({
   Name = "Blox Fruit Cheat Iliankytb(Coming Soon)",
     Callback = function(Value)
--loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/BestRainbowFriendsTwo"))()
end,
})

local ButtonLoadsecretCheat = GameTab:CreateButton({
   Name = "Pig 64 Cheat Iliankytb(Coming Soon)",
     Callback = function(Value)
--loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/BestRainbowFriendsTwo"))()
end,
})
local ButtonLoadsecretCheat = GameTab:CreateButton({
   Name = "strongest battleground Cheat Iliankytb(Coming Soon)",
     Callback = function(Value)
--loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/BestRainbowFriendsTwo"))()
end,
})

local ButtonLoadsecretCheat = GameTab:CreateButton({
   Name = "??? Cheat Iliankytb(Coming Soon)",
     Callback = function(Value)
--loadstring(game:HttpGet("https://raw.githubusercontent.com/Iliankytb/Iliankytb/main/BestRainbowFriendsTwo"))()
end,
})
local ButtonUnloadCheat = SettingsTab:CreateButton({
   Name = "Unload Cheat",
   Callback = function()
  Rayfield:Destroy()
end,
})
local PlayerActiveDistanceEspToggle = SettingsTab:CreateToggle({
   Name = "Distance For Esp",
   CurrentValue = false,
   Flag = "ButtonDistanceEsp", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
  ActiveDistanceEsp = Value 
end,
})
local ActiveFullBright = false
local OldBrightness = Game.Lighting.Brightness
local OldAmbient = Game.Lighting.Ambient
local PlayerFullBright = PlayerTab:CreateToggle({
   Name = "Full Bright(unverified!)",
   CurrentValue = false,
   Flag = "FullBright",
   Callback = function(Value)
ActiveFullBright = Value 
task.spawn(function() 
while ActiveFullBright do 
if Game.Lighting then 
Game.Lighting.Brightness = 5
Game.Lighting.Ambient = Color3.fromRGB(255, 255, 255) 
end  
wait(0.1)
end 
if Game.Lighting then 
Game.Lighting.Brightness = OldBrightness
Game.Lighting.Ambient = OldAmbient
end  
end)
end,  
})
local NoCooldownpromptToggle = PlayerTab:CreateToggle({
   Name = "Instant Interact",
   CurrentValue = false,
   Flag = "NoCooldownPrompt1", 
   Callback = function(Value)
ActiveNoCooldownPrompt = Value  
while ActiveNoCooldownPrompt do
for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("ProximityPrompt") then 
if Assets.HoldDuration ~= 0 then
Assets:SetAttribute("HoldDurationOld",Assets.HoldDuration)
Assets.HoldDuration = 0
end
end 
end  
wait(0.1) 
end 
for _,Assets in pairs(Game.Workspace:GetDescendants()) do  
if Assets:isA("ProximityPrompt") then 
if Assets:GetAttribute("HoldDurationOld") and Assets:GetAttribute("HoldDurationOld") ~= 0 then
Assets.HoldDuration = Assets:GetAttribute("HoldDurationOld")
end
end 
end   
end,
})
local Themes = {
   ["Default"] = "Default",
   ["Amber Glow"] = "AmberGlow",
   ["Amethyst"] = "Amethyst",
   ["Bloom"] = "Bloom",
   ["Dark Blue"] = "DarkBlue",
   ["Green"] = "Green",
   ["Light"] = "Light",
   ["Ocean"] = "Ocean",
   ["Serenity"] = "Serenity"
}

local Dropdown = SettingsTab:CreateDropdown({
   Name = "Change Theme",
   Options = {"Default", "Amber Glow", "Amethyst", "Bloom", "Dark Blue", "Green", "Light", "Ocean", "Serenity"},
   CurrentOption = selectedTheme,  -- pour afficher ce qui est réellement chargé
   Flag = "ThemeSelection",
   Callback = function(Selected)
      local ident = Themes[Selected[1]]
      Window.ModifyTheme(ident)  -- <— Applique le thème en direct
   end, 
})


	local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
if ActivateInfiniteJump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
end
	end)


Rayfield:LoadConfiguration()
task.spawn(function()
game:GetService("RunService").RenderStepped:Connect(function()
if ActiveAimbot then
aimToClosestTarget()
end
end)
end)
task.spawn(function()
while true do
	task.wait(1) 
task.spawn(function()
	local updatedInfo = getServerInfo()
	local updatedContent = string.format(
		"📌 PlaceId: %s\n🔑 JobId: %s\n🧪 IsStudio: %s\n👥 Players: %d/%d",
		updatedInfo.PlaceId,
		updatedInfo.JobId,
		
		tostring(updatedInfo.IsStudio),
		updatedInfo.CurrentPlayers,
updatedInfo.MaxPlayers
	)

	ParagraphInfoServer:Set({
		Title = "Info",
		Content = updatedContent
	})
end)
end

end)
